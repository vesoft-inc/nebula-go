// Autogenerated by Thrift Compiler (facebook)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
// @generated

package main

import (
        "flag"
        "fmt"
        "math"
        "net"
        "net/url"
        "os"
        "strconv"
        "strings"
        thrift "github.com/facebook/fbthrift/thrift/lib/go/thrift"
        "../../github.com/vesoft-inc/nebula-go/v2/nebula/meta"
)

func Usage() {
  fmt.Fprintln(os.Stderr, "Usage of ", os.Args[0], " [-h host:port] [-u url] [-f[ramed]] function [arg1 [arg2...]]:")
  flag.PrintDefaults()
  fmt.Fprintln(os.Stderr, "\nFunctions:")
  fmt.Fprintln(os.Stderr, "  ExecResp createSpace(CreateSpaceReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropSpace(DropSpaceReq req)")
  fmt.Fprintln(os.Stderr, "  GetSpaceResp getSpace(GetSpaceReq req)")
  fmt.Fprintln(os.Stderr, "  ListSpacesResp listSpaces(ListSpacesReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createSpaceAs(CreateSpaceAsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createTag(CreateTagReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp alterTag(AlterTagReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropTag(DropTagReq req)")
  fmt.Fprintln(os.Stderr, "  GetTagResp getTag(GetTagReq req)")
  fmt.Fprintln(os.Stderr, "  ListTagsResp listTags(ListTagsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createEdge(CreateEdgeReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp alterEdge(AlterEdgeReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropEdge(DropEdgeReq req)")
  fmt.Fprintln(os.Stderr, "  GetEdgeResp getEdge(GetEdgeReq req)")
  fmt.Fprintln(os.Stderr, "  ListEdgesResp listEdges(ListEdgesReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp addHosts(AddHostsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp addHostsIntoZone(AddHostsIntoZoneReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropHosts(DropHostsReq req)")
  fmt.Fprintln(os.Stderr, "  ListHostsResp listHosts(ListHostsReq req)")
  fmt.Fprintln(os.Stderr, "  GetPartsAllocResp getPartsAlloc(GetPartsAllocReq req)")
  fmt.Fprintln(os.Stderr, "  ListPartsResp listParts(ListPartsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp multiPut(MultiPutReq req)")
  fmt.Fprintln(os.Stderr, "  GetResp get(GetReq req)")
  fmt.Fprintln(os.Stderr, "  MultiGetResp multiGet(MultiGetReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp remove(RemoveReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp removeRange(RemoveRangeReq req)")
  fmt.Fprintln(os.Stderr, "  ScanResp scan(ScanReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createTagIndex(CreateTagIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropTagIndex(DropTagIndexReq req)")
  fmt.Fprintln(os.Stderr, "  GetTagIndexResp getTagIndex(GetTagIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ListTagIndexesResp listTagIndexes(ListTagIndexesReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp rebuildTagIndex(RebuildIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ListIndexStatusResp listTagIndexStatus(ListIndexStatusReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createEdgeIndex(CreateEdgeIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropEdgeIndex(DropEdgeIndexReq req)")
  fmt.Fprintln(os.Stderr, "  GetEdgeIndexResp getEdgeIndex(GetEdgeIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ListEdgeIndexesResp listEdgeIndexes(ListEdgeIndexesReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp rebuildEdgeIndex(RebuildIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ListIndexStatusResp listEdgeIndexStatus(ListIndexStatusReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createUser(CreateUserReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropUser(DropUserReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp alterUser(AlterUserReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp grantRole(GrantRoleReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp revokeRole(RevokeRoleReq req)")
  fmt.Fprintln(os.Stderr, "  ListUsersResp listUsers(ListUsersReq req)")
  fmt.Fprintln(os.Stderr, "  ListRolesResp listRoles(ListRolesReq req)")
  fmt.Fprintln(os.Stderr, "  ListRolesResp getUserRoles(GetUserRolesReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp changePassword(ChangePasswordReq req)")
  fmt.Fprintln(os.Stderr, "  HBResp heartBeat(HBReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp regConfig(RegConfigReq req)")
  fmt.Fprintln(os.Stderr, "  GetConfigResp getConfig(GetConfigReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp setConfig(SetConfigReq req)")
  fmt.Fprintln(os.Stderr, "  ListConfigsResp listConfigs(ListConfigsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createSnapshot(CreateSnapshotReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropSnapshot(DropSnapshotReq req)")
  fmt.Fprintln(os.Stderr, "  ListSnapshotsResp listSnapshots(ListSnapshotsReq req)")
  fmt.Fprintln(os.Stderr, "  AdminJobResp runAdminJob(AdminJobReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp mergeZone(MergeZoneReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropZone(DropZoneReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp splitZone(SplitZoneReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp renameZone(RenameZoneReq req)")
  fmt.Fprintln(os.Stderr, "  GetZoneResp getZone(GetZoneReq req)")
  fmt.Fprintln(os.Stderr, "  ListZonesResp listZones(ListZonesReq req)")
  fmt.Fprintln(os.Stderr, "  CreateBackupResp createBackup(CreateBackupReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp restoreMeta(RestoreMetaReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp addListener(AddListenerReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp removeListener(RemoveListenerReq req)")
  fmt.Fprintln(os.Stderr, "  ListListenerResp listListener(ListListenerReq req)")
  fmt.Fprintln(os.Stderr, "  GetStatsResp getStats(GetStatsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp signInFTService(SignInFTServiceReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp signOutFTService(SignOutFTServiceReq req)")
  fmt.Fprintln(os.Stderr, "  ListFTClientsResp listFTClients(ListFTClientsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createFTIndex(CreateFTIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropFTIndex(DropFTIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ListFTIndexesResp listFTIndexes(ListFTIndexesReq req)")
  fmt.Fprintln(os.Stderr, "  CreateSessionResp createSession(CreateSessionReq req)")
  fmt.Fprintln(os.Stderr, "  UpdateSessionsResp updateSessions(UpdateSessionsReq req)")
  fmt.Fprintln(os.Stderr, "  ListSessionsResp listSessions(ListSessionsReq req)")
  fmt.Fprintln(os.Stderr, "  GetSessionResp getSession(GetSessionReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp removeSession(RemoveSessionReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp killQuery(KillQueryReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp reportTaskFinish(ReportTaskReq req)")
  fmt.Fprintln(os.Stderr, "  ListClusterInfoResp listCluster(ListClusterInfoReq req)")
  fmt.Fprintln(os.Stderr, "  GetMetaDirInfoResp getMetaDirInfo(GetMetaDirInfoReq req)")
  fmt.Fprintln(os.Stderr, "  VerifyClientVersionResp verifyClientVersion(VerifyClientVersionReq req)")
  fmt.Fprintln(os.Stderr)
  os.Exit(0)
}

func main() {
  flag.Usage = Usage
  var host string
  var port int
  var protocol string
  var urlString string
  var framed bool
  var useHttp bool
  var parsedUrl url.URL
  var trans thrift.Transport
  _ = strconv.Atoi
  _ = math.Abs
  flag.Usage = Usage
  flag.StringVar(&host, "h", "localhost", "Specify host")
  flag.IntVar(&port, "p", 9090, "Specify port")
  flag.StringVar(&protocol, "P", "binary", "Specify the protocol (binary, compact, simplejson, json)")
  flag.StringVar(&urlString, "u", "", "Specify the url")
  flag.BoolVar(&framed, "framed", false, "Use framed transport")
  flag.BoolVar(&useHttp, "http", false, "Use http")
  flag.Parse()
  
  if len(urlString) > 0 {
    parsedUrl, err := url.Parse(urlString)
    if err != nil {
      fmt.Fprintln(os.Stderr, "Error parsing URL: ", err)
      flag.Usage()
    }
    host = parsedUrl.Host
    useHttp = len(parsedUrl.Scheme) <= 0 || parsedUrl.Scheme == "http"
  } else if useHttp {
    _, err := url.Parse(fmt.Sprint("http://", host, ":", port))
    if err != nil {
      fmt.Fprintln(os.Stderr, "Error parsing URL: ", err)
      flag.Usage()
    }
  }
  
  cmd := flag.Arg(0)
  var err error
  if useHttp {
    trans, err = thrift.NewHTTPPostClient(parsedUrl.String())
  } else {
    portStr := fmt.Sprint(port)
    if strings.Contains(host, ":") {
           host, portStr, err = net.SplitHostPort(host)
           if err != nil {
                   fmt.Fprintln(os.Stderr, "error with host:", err)
                   os.Exit(1)
           }
    }
    trans, err = thrift.NewSocket(thrift.SocketAddr(net.JoinHostPort(host, portStr)))
    if err != nil {
      fmt.Fprintln(os.Stderr, "error resolving address:", err)
      os.Exit(1)
    }
    if framed {
      trans = thrift.NewFramedTransport(trans)
    }
  }
  if err != nil {
    fmt.Fprintln(os.Stderr, "Error creating transport", err)
    os.Exit(1)
  }
  defer trans.Close()
  var protocolFactory thrift.ProtocolFactory
  switch protocol {
  case "compact":
    protocolFactory = thrift.NewCompactProtocolFactory()
    break
  case "simplejson":
    protocolFactory = thrift.NewSimpleJSONProtocolFactory()
    break
  case "json":
    protocolFactory = thrift.NewJSONProtocolFactory()
    break
  case "binary", "":
    protocolFactory = thrift.NewBinaryProtocolFactoryDefault()
    break
  default:
    fmt.Fprintln(os.Stderr, "Invalid protocol specified: ", protocol)
    Usage()
    os.Exit(1)
  }
  client := meta.NewMetaServiceClientFactory(trans, protocolFactory)
  if err := trans.Open(); err != nil {
    fmt.Fprintln(os.Stderr, "Error opening socket to ", host, ":", port, " ", err)
    os.Exit(1)
  }
  
  switch cmd {
  case "createSpace":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateSpace requires 1 args")
      flag.Usage()
    }
    arg102 := flag.Arg(1)
    mbTrans103 := thrift.NewMemoryBufferLen(len(arg102))
    defer mbTrans103.Close()
    _, err104 := mbTrans103.WriteString(arg102)
    if err104 != nil {
      Usage()
      return
    }
    factory105 := thrift.NewSimpleJSONProtocolFactory()
    jsProt106 := factory105.GetProtocol(mbTrans103)
    argvalue0 := meta.NewCreateSpaceReq()
    err107 := argvalue0.Read(jsProt106)
    if err107 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateSpace(value0))
    fmt.Print("\n")
    break
  case "dropSpace":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropSpace requires 1 args")
      flag.Usage()
    }
    arg108 := flag.Arg(1)
    mbTrans109 := thrift.NewMemoryBufferLen(len(arg108))
    defer mbTrans109.Close()
    _, err110 := mbTrans109.WriteString(arg108)
    if err110 != nil {
      Usage()
      return
    }
    factory111 := thrift.NewSimpleJSONProtocolFactory()
    jsProt112 := factory111.GetProtocol(mbTrans109)
    argvalue0 := meta.NewDropSpaceReq()
    err113 := argvalue0.Read(jsProt112)
    if err113 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropSpace(value0))
    fmt.Print("\n")
    break
  case "getSpace":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetSpace requires 1 args")
      flag.Usage()
    }
    arg114 := flag.Arg(1)
    mbTrans115 := thrift.NewMemoryBufferLen(len(arg114))
    defer mbTrans115.Close()
    _, err116 := mbTrans115.WriteString(arg114)
    if err116 != nil {
      Usage()
      return
    }
    factory117 := thrift.NewSimpleJSONProtocolFactory()
    jsProt118 := factory117.GetProtocol(mbTrans115)
    argvalue0 := meta.NewGetSpaceReq()
    err119 := argvalue0.Read(jsProt118)
    if err119 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetSpace(value0))
    fmt.Print("\n")
    break
  case "listSpaces":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListSpaces requires 1 args")
      flag.Usage()
    }
    arg120 := flag.Arg(1)
    mbTrans121 := thrift.NewMemoryBufferLen(len(arg120))
    defer mbTrans121.Close()
    _, err122 := mbTrans121.WriteString(arg120)
    if err122 != nil {
      Usage()
      return
    }
    factory123 := thrift.NewSimpleJSONProtocolFactory()
    jsProt124 := factory123.GetProtocol(mbTrans121)
    argvalue0 := meta.NewListSpacesReq()
    err125 := argvalue0.Read(jsProt124)
    if err125 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListSpaces(value0))
    fmt.Print("\n")
    break
  case "createSpaceAs":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateSpaceAs requires 1 args")
      flag.Usage()
    }
    arg126 := flag.Arg(1)
    mbTrans127 := thrift.NewMemoryBufferLen(len(arg126))
    defer mbTrans127.Close()
    _, err128 := mbTrans127.WriteString(arg126)
    if err128 != nil {
      Usage()
      return
    }
    factory129 := thrift.NewSimpleJSONProtocolFactory()
    jsProt130 := factory129.GetProtocol(mbTrans127)
    argvalue0 := meta.NewCreateSpaceAsReq()
    err131 := argvalue0.Read(jsProt130)
    if err131 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateSpaceAs(value0))
    fmt.Print("\n")
    break
  case "createTag":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateTag requires 1 args")
      flag.Usage()
    }
    arg132 := flag.Arg(1)
    mbTrans133 := thrift.NewMemoryBufferLen(len(arg132))
    defer mbTrans133.Close()
    _, err134 := mbTrans133.WriteString(arg132)
    if err134 != nil {
      Usage()
      return
    }
    factory135 := thrift.NewSimpleJSONProtocolFactory()
    jsProt136 := factory135.GetProtocol(mbTrans133)
    argvalue0 := meta.NewCreateTagReq()
    err137 := argvalue0.Read(jsProt136)
    if err137 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateTag(value0))
    fmt.Print("\n")
    break
  case "alterTag":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AlterTag requires 1 args")
      flag.Usage()
    }
    arg138 := flag.Arg(1)
    mbTrans139 := thrift.NewMemoryBufferLen(len(arg138))
    defer mbTrans139.Close()
    _, err140 := mbTrans139.WriteString(arg138)
    if err140 != nil {
      Usage()
      return
    }
    factory141 := thrift.NewSimpleJSONProtocolFactory()
    jsProt142 := factory141.GetProtocol(mbTrans139)
    argvalue0 := meta.NewAlterTagReq()
    err143 := argvalue0.Read(jsProt142)
    if err143 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AlterTag(value0))
    fmt.Print("\n")
    break
  case "dropTag":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropTag requires 1 args")
      flag.Usage()
    }
    arg144 := flag.Arg(1)
    mbTrans145 := thrift.NewMemoryBufferLen(len(arg144))
    defer mbTrans145.Close()
    _, err146 := mbTrans145.WriteString(arg144)
    if err146 != nil {
      Usage()
      return
    }
    factory147 := thrift.NewSimpleJSONProtocolFactory()
    jsProt148 := factory147.GetProtocol(mbTrans145)
    argvalue0 := meta.NewDropTagReq()
    err149 := argvalue0.Read(jsProt148)
    if err149 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropTag(value0))
    fmt.Print("\n")
    break
  case "getTag":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetTag requires 1 args")
      flag.Usage()
    }
    arg150 := flag.Arg(1)
    mbTrans151 := thrift.NewMemoryBufferLen(len(arg150))
    defer mbTrans151.Close()
    _, err152 := mbTrans151.WriteString(arg150)
    if err152 != nil {
      Usage()
      return
    }
    factory153 := thrift.NewSimpleJSONProtocolFactory()
    jsProt154 := factory153.GetProtocol(mbTrans151)
    argvalue0 := meta.NewGetTagReq()
    err155 := argvalue0.Read(jsProt154)
    if err155 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetTag(value0))
    fmt.Print("\n")
    break
  case "listTags":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListTags requires 1 args")
      flag.Usage()
    }
    arg156 := flag.Arg(1)
    mbTrans157 := thrift.NewMemoryBufferLen(len(arg156))
    defer mbTrans157.Close()
    _, err158 := mbTrans157.WriteString(arg156)
    if err158 != nil {
      Usage()
      return
    }
    factory159 := thrift.NewSimpleJSONProtocolFactory()
    jsProt160 := factory159.GetProtocol(mbTrans157)
    argvalue0 := meta.NewListTagsReq()
    err161 := argvalue0.Read(jsProt160)
    if err161 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListTags(value0))
    fmt.Print("\n")
    break
  case "createEdge":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateEdge requires 1 args")
      flag.Usage()
    }
    arg162 := flag.Arg(1)
    mbTrans163 := thrift.NewMemoryBufferLen(len(arg162))
    defer mbTrans163.Close()
    _, err164 := mbTrans163.WriteString(arg162)
    if err164 != nil {
      Usage()
      return
    }
    factory165 := thrift.NewSimpleJSONProtocolFactory()
    jsProt166 := factory165.GetProtocol(mbTrans163)
    argvalue0 := meta.NewCreateEdgeReq()
    err167 := argvalue0.Read(jsProt166)
    if err167 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateEdge(value0))
    fmt.Print("\n")
    break
  case "alterEdge":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AlterEdge requires 1 args")
      flag.Usage()
    }
    arg168 := flag.Arg(1)
    mbTrans169 := thrift.NewMemoryBufferLen(len(arg168))
    defer mbTrans169.Close()
    _, err170 := mbTrans169.WriteString(arg168)
    if err170 != nil {
      Usage()
      return
    }
    factory171 := thrift.NewSimpleJSONProtocolFactory()
    jsProt172 := factory171.GetProtocol(mbTrans169)
    argvalue0 := meta.NewAlterEdgeReq()
    err173 := argvalue0.Read(jsProt172)
    if err173 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AlterEdge(value0))
    fmt.Print("\n")
    break
  case "dropEdge":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropEdge requires 1 args")
      flag.Usage()
    }
    arg174 := flag.Arg(1)
    mbTrans175 := thrift.NewMemoryBufferLen(len(arg174))
    defer mbTrans175.Close()
    _, err176 := mbTrans175.WriteString(arg174)
    if err176 != nil {
      Usage()
      return
    }
    factory177 := thrift.NewSimpleJSONProtocolFactory()
    jsProt178 := factory177.GetProtocol(mbTrans175)
    argvalue0 := meta.NewDropEdgeReq()
    err179 := argvalue0.Read(jsProt178)
    if err179 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropEdge(value0))
    fmt.Print("\n")
    break
  case "getEdge":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetEdge requires 1 args")
      flag.Usage()
    }
    arg180 := flag.Arg(1)
    mbTrans181 := thrift.NewMemoryBufferLen(len(arg180))
    defer mbTrans181.Close()
    _, err182 := mbTrans181.WriteString(arg180)
    if err182 != nil {
      Usage()
      return
    }
    factory183 := thrift.NewSimpleJSONProtocolFactory()
    jsProt184 := factory183.GetProtocol(mbTrans181)
    argvalue0 := meta.NewGetEdgeReq()
    err185 := argvalue0.Read(jsProt184)
    if err185 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetEdge(value0))
    fmt.Print("\n")
    break
  case "listEdges":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListEdges requires 1 args")
      flag.Usage()
    }
    arg186 := flag.Arg(1)
    mbTrans187 := thrift.NewMemoryBufferLen(len(arg186))
    defer mbTrans187.Close()
    _, err188 := mbTrans187.WriteString(arg186)
    if err188 != nil {
      Usage()
      return
    }
    factory189 := thrift.NewSimpleJSONProtocolFactory()
    jsProt190 := factory189.GetProtocol(mbTrans187)
    argvalue0 := meta.NewListEdgesReq()
    err191 := argvalue0.Read(jsProt190)
    if err191 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListEdges(value0))
    fmt.Print("\n")
    break
  case "addHosts":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AddHosts requires 1 args")
      flag.Usage()
    }
    arg192 := flag.Arg(1)
    mbTrans193 := thrift.NewMemoryBufferLen(len(arg192))
    defer mbTrans193.Close()
    _, err194 := mbTrans193.WriteString(arg192)
    if err194 != nil {
      Usage()
      return
    }
    factory195 := thrift.NewSimpleJSONProtocolFactory()
    jsProt196 := factory195.GetProtocol(mbTrans193)
    argvalue0 := meta.NewAddHostsReq()
    err197 := argvalue0.Read(jsProt196)
    if err197 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AddHosts(value0))
    fmt.Print("\n")
    break
  case "addHostsIntoZone":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AddHostsIntoZone requires 1 args")
      flag.Usage()
    }
    arg198 := flag.Arg(1)
    mbTrans199 := thrift.NewMemoryBufferLen(len(arg198))
    defer mbTrans199.Close()
    _, err200 := mbTrans199.WriteString(arg198)
    if err200 != nil {
      Usage()
      return
    }
    factory201 := thrift.NewSimpleJSONProtocolFactory()
    jsProt202 := factory201.GetProtocol(mbTrans199)
    argvalue0 := meta.NewAddHostsIntoZoneReq()
    err203 := argvalue0.Read(jsProt202)
    if err203 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AddHostsIntoZone(value0))
    fmt.Print("\n")
    break
  case "dropHosts":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropHosts requires 1 args")
      flag.Usage()
    }
    arg204 := flag.Arg(1)
    mbTrans205 := thrift.NewMemoryBufferLen(len(arg204))
    defer mbTrans205.Close()
    _, err206 := mbTrans205.WriteString(arg204)
    if err206 != nil {
      Usage()
      return
    }
    factory207 := thrift.NewSimpleJSONProtocolFactory()
    jsProt208 := factory207.GetProtocol(mbTrans205)
    argvalue0 := meta.NewDropHostsReq()
    err209 := argvalue0.Read(jsProt208)
    if err209 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropHosts(value0))
    fmt.Print("\n")
    break
  case "listHosts":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListHosts requires 1 args")
      flag.Usage()
    }
    arg210 := flag.Arg(1)
    mbTrans211 := thrift.NewMemoryBufferLen(len(arg210))
    defer mbTrans211.Close()
    _, err212 := mbTrans211.WriteString(arg210)
    if err212 != nil {
      Usage()
      return
    }
    factory213 := thrift.NewSimpleJSONProtocolFactory()
    jsProt214 := factory213.GetProtocol(mbTrans211)
    argvalue0 := meta.NewListHostsReq()
    err215 := argvalue0.Read(jsProt214)
    if err215 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListHosts(value0))
    fmt.Print("\n")
    break
  case "getPartsAlloc":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetPartsAlloc requires 1 args")
      flag.Usage()
    }
    arg216 := flag.Arg(1)
    mbTrans217 := thrift.NewMemoryBufferLen(len(arg216))
    defer mbTrans217.Close()
    _, err218 := mbTrans217.WriteString(arg216)
    if err218 != nil {
      Usage()
      return
    }
    factory219 := thrift.NewSimpleJSONProtocolFactory()
    jsProt220 := factory219.GetProtocol(mbTrans217)
    argvalue0 := meta.NewGetPartsAllocReq()
    err221 := argvalue0.Read(jsProt220)
    if err221 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetPartsAlloc(value0))
    fmt.Print("\n")
    break
  case "listParts":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListParts requires 1 args")
      flag.Usage()
    }
    arg222 := flag.Arg(1)
    mbTrans223 := thrift.NewMemoryBufferLen(len(arg222))
    defer mbTrans223.Close()
    _, err224 := mbTrans223.WriteString(arg222)
    if err224 != nil {
      Usage()
      return
    }
    factory225 := thrift.NewSimpleJSONProtocolFactory()
    jsProt226 := factory225.GetProtocol(mbTrans223)
    argvalue0 := meta.NewListPartsReq()
    err227 := argvalue0.Read(jsProt226)
    if err227 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListParts(value0))
    fmt.Print("\n")
    break
  case "multiPut":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "MultiPut requires 1 args")
      flag.Usage()
    }
    arg228 := flag.Arg(1)
    mbTrans229 := thrift.NewMemoryBufferLen(len(arg228))
    defer mbTrans229.Close()
    _, err230 := mbTrans229.WriteString(arg228)
    if err230 != nil {
      Usage()
      return
    }
    factory231 := thrift.NewSimpleJSONProtocolFactory()
    jsProt232 := factory231.GetProtocol(mbTrans229)
    argvalue0 := meta.NewMultiPutReq()
    err233 := argvalue0.Read(jsProt232)
    if err233 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.MultiPut(value0))
    fmt.Print("\n")
    break
  case "get":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "Get requires 1 args")
      flag.Usage()
    }
    arg234 := flag.Arg(1)
    mbTrans235 := thrift.NewMemoryBufferLen(len(arg234))
    defer mbTrans235.Close()
    _, err236 := mbTrans235.WriteString(arg234)
    if err236 != nil {
      Usage()
      return
    }
    factory237 := thrift.NewSimpleJSONProtocolFactory()
    jsProt238 := factory237.GetProtocol(mbTrans235)
    argvalue0 := meta.NewGetReq()
    err239 := argvalue0.Read(jsProt238)
    if err239 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.Get(value0))
    fmt.Print("\n")
    break
  case "multiGet":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "MultiGet requires 1 args")
      flag.Usage()
    }
    arg240 := flag.Arg(1)
    mbTrans241 := thrift.NewMemoryBufferLen(len(arg240))
    defer mbTrans241.Close()
    _, err242 := mbTrans241.WriteString(arg240)
    if err242 != nil {
      Usage()
      return
    }
    factory243 := thrift.NewSimpleJSONProtocolFactory()
    jsProt244 := factory243.GetProtocol(mbTrans241)
    argvalue0 := meta.NewMultiGetReq()
    err245 := argvalue0.Read(jsProt244)
    if err245 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.MultiGet(value0))
    fmt.Print("\n")
    break
  case "remove":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "Remove requires 1 args")
      flag.Usage()
    }
    arg246 := flag.Arg(1)
    mbTrans247 := thrift.NewMemoryBufferLen(len(arg246))
    defer mbTrans247.Close()
    _, err248 := mbTrans247.WriteString(arg246)
    if err248 != nil {
      Usage()
      return
    }
    factory249 := thrift.NewSimpleJSONProtocolFactory()
    jsProt250 := factory249.GetProtocol(mbTrans247)
    argvalue0 := meta.NewRemoveReq()
    err251 := argvalue0.Read(jsProt250)
    if err251 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.Remove(value0))
    fmt.Print("\n")
    break
  case "removeRange":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RemoveRange requires 1 args")
      flag.Usage()
    }
    arg252 := flag.Arg(1)
    mbTrans253 := thrift.NewMemoryBufferLen(len(arg252))
    defer mbTrans253.Close()
    _, err254 := mbTrans253.WriteString(arg252)
    if err254 != nil {
      Usage()
      return
    }
    factory255 := thrift.NewSimpleJSONProtocolFactory()
    jsProt256 := factory255.GetProtocol(mbTrans253)
    argvalue0 := meta.NewRemoveRangeReq()
    err257 := argvalue0.Read(jsProt256)
    if err257 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RemoveRange(value0))
    fmt.Print("\n")
    break
  case "scan":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "Scan requires 1 args")
      flag.Usage()
    }
    arg258 := flag.Arg(1)
    mbTrans259 := thrift.NewMemoryBufferLen(len(arg258))
    defer mbTrans259.Close()
    _, err260 := mbTrans259.WriteString(arg258)
    if err260 != nil {
      Usage()
      return
    }
    factory261 := thrift.NewSimpleJSONProtocolFactory()
    jsProt262 := factory261.GetProtocol(mbTrans259)
    argvalue0 := meta.NewScanReq()
    err263 := argvalue0.Read(jsProt262)
    if err263 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.Scan(value0))
    fmt.Print("\n")
    break
  case "createTagIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateTagIndex requires 1 args")
      flag.Usage()
    }
    arg264 := flag.Arg(1)
    mbTrans265 := thrift.NewMemoryBufferLen(len(arg264))
    defer mbTrans265.Close()
    _, err266 := mbTrans265.WriteString(arg264)
    if err266 != nil {
      Usage()
      return
    }
    factory267 := thrift.NewSimpleJSONProtocolFactory()
    jsProt268 := factory267.GetProtocol(mbTrans265)
    argvalue0 := meta.NewCreateTagIndexReq()
    err269 := argvalue0.Read(jsProt268)
    if err269 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateTagIndex(value0))
    fmt.Print("\n")
    break
  case "dropTagIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropTagIndex requires 1 args")
      flag.Usage()
    }
    arg270 := flag.Arg(1)
    mbTrans271 := thrift.NewMemoryBufferLen(len(arg270))
    defer mbTrans271.Close()
    _, err272 := mbTrans271.WriteString(arg270)
    if err272 != nil {
      Usage()
      return
    }
    factory273 := thrift.NewSimpleJSONProtocolFactory()
    jsProt274 := factory273.GetProtocol(mbTrans271)
    argvalue0 := meta.NewDropTagIndexReq()
    err275 := argvalue0.Read(jsProt274)
    if err275 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropTagIndex(value0))
    fmt.Print("\n")
    break
  case "getTagIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetTagIndex requires 1 args")
      flag.Usage()
    }
    arg276 := flag.Arg(1)
    mbTrans277 := thrift.NewMemoryBufferLen(len(arg276))
    defer mbTrans277.Close()
    _, err278 := mbTrans277.WriteString(arg276)
    if err278 != nil {
      Usage()
      return
    }
    factory279 := thrift.NewSimpleJSONProtocolFactory()
    jsProt280 := factory279.GetProtocol(mbTrans277)
    argvalue0 := meta.NewGetTagIndexReq()
    err281 := argvalue0.Read(jsProt280)
    if err281 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetTagIndex(value0))
    fmt.Print("\n")
    break
  case "listTagIndexes":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListTagIndexes requires 1 args")
      flag.Usage()
    }
    arg282 := flag.Arg(1)
    mbTrans283 := thrift.NewMemoryBufferLen(len(arg282))
    defer mbTrans283.Close()
    _, err284 := mbTrans283.WriteString(arg282)
    if err284 != nil {
      Usage()
      return
    }
    factory285 := thrift.NewSimpleJSONProtocolFactory()
    jsProt286 := factory285.GetProtocol(mbTrans283)
    argvalue0 := meta.NewListTagIndexesReq()
    err287 := argvalue0.Read(jsProt286)
    if err287 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListTagIndexes(value0))
    fmt.Print("\n")
    break
  case "rebuildTagIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RebuildTagIndex requires 1 args")
      flag.Usage()
    }
    arg288 := flag.Arg(1)
    mbTrans289 := thrift.NewMemoryBufferLen(len(arg288))
    defer mbTrans289.Close()
    _, err290 := mbTrans289.WriteString(arg288)
    if err290 != nil {
      Usage()
      return
    }
    factory291 := thrift.NewSimpleJSONProtocolFactory()
    jsProt292 := factory291.GetProtocol(mbTrans289)
    argvalue0 := meta.NewRebuildIndexReq()
    err293 := argvalue0.Read(jsProt292)
    if err293 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RebuildTagIndex(value0))
    fmt.Print("\n")
    break
  case "listTagIndexStatus":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListTagIndexStatus requires 1 args")
      flag.Usage()
    }
    arg294 := flag.Arg(1)
    mbTrans295 := thrift.NewMemoryBufferLen(len(arg294))
    defer mbTrans295.Close()
    _, err296 := mbTrans295.WriteString(arg294)
    if err296 != nil {
      Usage()
      return
    }
    factory297 := thrift.NewSimpleJSONProtocolFactory()
    jsProt298 := factory297.GetProtocol(mbTrans295)
    argvalue0 := meta.NewListIndexStatusReq()
    err299 := argvalue0.Read(jsProt298)
    if err299 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListTagIndexStatus(value0))
    fmt.Print("\n")
    break
  case "createEdgeIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateEdgeIndex requires 1 args")
      flag.Usage()
    }
    arg300 := flag.Arg(1)
    mbTrans301 := thrift.NewMemoryBufferLen(len(arg300))
    defer mbTrans301.Close()
    _, err302 := mbTrans301.WriteString(arg300)
    if err302 != nil {
      Usage()
      return
    }
    factory303 := thrift.NewSimpleJSONProtocolFactory()
    jsProt304 := factory303.GetProtocol(mbTrans301)
    argvalue0 := meta.NewCreateEdgeIndexReq()
    err305 := argvalue0.Read(jsProt304)
    if err305 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateEdgeIndex(value0))
    fmt.Print("\n")
    break
  case "dropEdgeIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropEdgeIndex requires 1 args")
      flag.Usage()
    }
    arg306 := flag.Arg(1)
    mbTrans307 := thrift.NewMemoryBufferLen(len(arg306))
    defer mbTrans307.Close()
    _, err308 := mbTrans307.WriteString(arg306)
    if err308 != nil {
      Usage()
      return
    }
    factory309 := thrift.NewSimpleJSONProtocolFactory()
    jsProt310 := factory309.GetProtocol(mbTrans307)
    argvalue0 := meta.NewDropEdgeIndexReq()
    err311 := argvalue0.Read(jsProt310)
    if err311 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropEdgeIndex(value0))
    fmt.Print("\n")
    break
  case "getEdgeIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetEdgeIndex requires 1 args")
      flag.Usage()
    }
    arg312 := flag.Arg(1)
    mbTrans313 := thrift.NewMemoryBufferLen(len(arg312))
    defer mbTrans313.Close()
    _, err314 := mbTrans313.WriteString(arg312)
    if err314 != nil {
      Usage()
      return
    }
    factory315 := thrift.NewSimpleJSONProtocolFactory()
    jsProt316 := factory315.GetProtocol(mbTrans313)
    argvalue0 := meta.NewGetEdgeIndexReq()
    err317 := argvalue0.Read(jsProt316)
    if err317 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetEdgeIndex(value0))
    fmt.Print("\n")
    break
  case "listEdgeIndexes":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListEdgeIndexes requires 1 args")
      flag.Usage()
    }
    arg318 := flag.Arg(1)
    mbTrans319 := thrift.NewMemoryBufferLen(len(arg318))
    defer mbTrans319.Close()
    _, err320 := mbTrans319.WriteString(arg318)
    if err320 != nil {
      Usage()
      return
    }
    factory321 := thrift.NewSimpleJSONProtocolFactory()
    jsProt322 := factory321.GetProtocol(mbTrans319)
    argvalue0 := meta.NewListEdgeIndexesReq()
    err323 := argvalue0.Read(jsProt322)
    if err323 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListEdgeIndexes(value0))
    fmt.Print("\n")
    break
  case "rebuildEdgeIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RebuildEdgeIndex requires 1 args")
      flag.Usage()
    }
    arg324 := flag.Arg(1)
    mbTrans325 := thrift.NewMemoryBufferLen(len(arg324))
    defer mbTrans325.Close()
    _, err326 := mbTrans325.WriteString(arg324)
    if err326 != nil {
      Usage()
      return
    }
    factory327 := thrift.NewSimpleJSONProtocolFactory()
    jsProt328 := factory327.GetProtocol(mbTrans325)
    argvalue0 := meta.NewRebuildIndexReq()
    err329 := argvalue0.Read(jsProt328)
    if err329 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RebuildEdgeIndex(value0))
    fmt.Print("\n")
    break
  case "listEdgeIndexStatus":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListEdgeIndexStatus requires 1 args")
      flag.Usage()
    }
    arg330 := flag.Arg(1)
    mbTrans331 := thrift.NewMemoryBufferLen(len(arg330))
    defer mbTrans331.Close()
    _, err332 := mbTrans331.WriteString(arg330)
    if err332 != nil {
      Usage()
      return
    }
    factory333 := thrift.NewSimpleJSONProtocolFactory()
    jsProt334 := factory333.GetProtocol(mbTrans331)
    argvalue0 := meta.NewListIndexStatusReq()
    err335 := argvalue0.Read(jsProt334)
    if err335 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListEdgeIndexStatus(value0))
    fmt.Print("\n")
    break
  case "createUser":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateUser requires 1 args")
      flag.Usage()
    }
    arg336 := flag.Arg(1)
    mbTrans337 := thrift.NewMemoryBufferLen(len(arg336))
    defer mbTrans337.Close()
    _, err338 := mbTrans337.WriteString(arg336)
    if err338 != nil {
      Usage()
      return
    }
    factory339 := thrift.NewSimpleJSONProtocolFactory()
    jsProt340 := factory339.GetProtocol(mbTrans337)
    argvalue0 := meta.NewCreateUserReq()
    err341 := argvalue0.Read(jsProt340)
    if err341 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateUser(value0))
    fmt.Print("\n")
    break
  case "dropUser":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropUser requires 1 args")
      flag.Usage()
    }
    arg342 := flag.Arg(1)
    mbTrans343 := thrift.NewMemoryBufferLen(len(arg342))
    defer mbTrans343.Close()
    _, err344 := mbTrans343.WriteString(arg342)
    if err344 != nil {
      Usage()
      return
    }
    factory345 := thrift.NewSimpleJSONProtocolFactory()
    jsProt346 := factory345.GetProtocol(mbTrans343)
    argvalue0 := meta.NewDropUserReq()
    err347 := argvalue0.Read(jsProt346)
    if err347 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropUser(value0))
    fmt.Print("\n")
    break
  case "alterUser":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AlterUser requires 1 args")
      flag.Usage()
    }
    arg348 := flag.Arg(1)
    mbTrans349 := thrift.NewMemoryBufferLen(len(arg348))
    defer mbTrans349.Close()
    _, err350 := mbTrans349.WriteString(arg348)
    if err350 != nil {
      Usage()
      return
    }
    factory351 := thrift.NewSimpleJSONProtocolFactory()
    jsProt352 := factory351.GetProtocol(mbTrans349)
    argvalue0 := meta.NewAlterUserReq()
    err353 := argvalue0.Read(jsProt352)
    if err353 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AlterUser(value0))
    fmt.Print("\n")
    break
  case "grantRole":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GrantRole requires 1 args")
      flag.Usage()
    }
    arg354 := flag.Arg(1)
    mbTrans355 := thrift.NewMemoryBufferLen(len(arg354))
    defer mbTrans355.Close()
    _, err356 := mbTrans355.WriteString(arg354)
    if err356 != nil {
      Usage()
      return
    }
    factory357 := thrift.NewSimpleJSONProtocolFactory()
    jsProt358 := factory357.GetProtocol(mbTrans355)
    argvalue0 := meta.NewGrantRoleReq()
    err359 := argvalue0.Read(jsProt358)
    if err359 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GrantRole(value0))
    fmt.Print("\n")
    break
  case "revokeRole":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RevokeRole requires 1 args")
      flag.Usage()
    }
    arg360 := flag.Arg(1)
    mbTrans361 := thrift.NewMemoryBufferLen(len(arg360))
    defer mbTrans361.Close()
    _, err362 := mbTrans361.WriteString(arg360)
    if err362 != nil {
      Usage()
      return
    }
    factory363 := thrift.NewSimpleJSONProtocolFactory()
    jsProt364 := factory363.GetProtocol(mbTrans361)
    argvalue0 := meta.NewRevokeRoleReq()
    err365 := argvalue0.Read(jsProt364)
    if err365 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RevokeRole(value0))
    fmt.Print("\n")
    break
  case "listUsers":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListUsers requires 1 args")
      flag.Usage()
    }
    arg366 := flag.Arg(1)
    mbTrans367 := thrift.NewMemoryBufferLen(len(arg366))
    defer mbTrans367.Close()
    _, err368 := mbTrans367.WriteString(arg366)
    if err368 != nil {
      Usage()
      return
    }
    factory369 := thrift.NewSimpleJSONProtocolFactory()
    jsProt370 := factory369.GetProtocol(mbTrans367)
    argvalue0 := meta.NewListUsersReq()
    err371 := argvalue0.Read(jsProt370)
    if err371 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListUsers(value0))
    fmt.Print("\n")
    break
  case "listRoles":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListRoles requires 1 args")
      flag.Usage()
    }
    arg372 := flag.Arg(1)
    mbTrans373 := thrift.NewMemoryBufferLen(len(arg372))
    defer mbTrans373.Close()
    _, err374 := mbTrans373.WriteString(arg372)
    if err374 != nil {
      Usage()
      return
    }
    factory375 := thrift.NewSimpleJSONProtocolFactory()
    jsProt376 := factory375.GetProtocol(mbTrans373)
    argvalue0 := meta.NewListRolesReq()
    err377 := argvalue0.Read(jsProt376)
    if err377 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListRoles(value0))
    fmt.Print("\n")
    break
  case "getUserRoles":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetUserRoles requires 1 args")
      flag.Usage()
    }
    arg378 := flag.Arg(1)
    mbTrans379 := thrift.NewMemoryBufferLen(len(arg378))
    defer mbTrans379.Close()
    _, err380 := mbTrans379.WriteString(arg378)
    if err380 != nil {
      Usage()
      return
    }
    factory381 := thrift.NewSimpleJSONProtocolFactory()
    jsProt382 := factory381.GetProtocol(mbTrans379)
    argvalue0 := meta.NewGetUserRolesReq()
    err383 := argvalue0.Read(jsProt382)
    if err383 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetUserRoles(value0))
    fmt.Print("\n")
    break
  case "changePassword":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ChangePassword requires 1 args")
      flag.Usage()
    }
    arg384 := flag.Arg(1)
    mbTrans385 := thrift.NewMemoryBufferLen(len(arg384))
    defer mbTrans385.Close()
    _, err386 := mbTrans385.WriteString(arg384)
    if err386 != nil {
      Usage()
      return
    }
    factory387 := thrift.NewSimpleJSONProtocolFactory()
    jsProt388 := factory387.GetProtocol(mbTrans385)
    argvalue0 := meta.NewChangePasswordReq()
    err389 := argvalue0.Read(jsProt388)
    if err389 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ChangePassword(value0))
    fmt.Print("\n")
    break
  case "heartBeat":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "HeartBeat requires 1 args")
      flag.Usage()
    }
    arg390 := flag.Arg(1)
    mbTrans391 := thrift.NewMemoryBufferLen(len(arg390))
    defer mbTrans391.Close()
    _, err392 := mbTrans391.WriteString(arg390)
    if err392 != nil {
      Usage()
      return
    }
    factory393 := thrift.NewSimpleJSONProtocolFactory()
    jsProt394 := factory393.GetProtocol(mbTrans391)
    argvalue0 := meta.NewHBReq()
    err395 := argvalue0.Read(jsProt394)
    if err395 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.HeartBeat(value0))
    fmt.Print("\n")
    break
  case "regConfig":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RegConfig requires 1 args")
      flag.Usage()
    }
    arg396 := flag.Arg(1)
    mbTrans397 := thrift.NewMemoryBufferLen(len(arg396))
    defer mbTrans397.Close()
    _, err398 := mbTrans397.WriteString(arg396)
    if err398 != nil {
      Usage()
      return
    }
    factory399 := thrift.NewSimpleJSONProtocolFactory()
    jsProt400 := factory399.GetProtocol(mbTrans397)
    argvalue0 := meta.NewRegConfigReq()
    err401 := argvalue0.Read(jsProt400)
    if err401 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RegConfig(value0))
    fmt.Print("\n")
    break
  case "getConfig":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetConfig requires 1 args")
      flag.Usage()
    }
    arg402 := flag.Arg(1)
    mbTrans403 := thrift.NewMemoryBufferLen(len(arg402))
    defer mbTrans403.Close()
    _, err404 := mbTrans403.WriteString(arg402)
    if err404 != nil {
      Usage()
      return
    }
    factory405 := thrift.NewSimpleJSONProtocolFactory()
    jsProt406 := factory405.GetProtocol(mbTrans403)
    argvalue0 := meta.NewGetConfigReq()
    err407 := argvalue0.Read(jsProt406)
    if err407 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetConfig(value0))
    fmt.Print("\n")
    break
  case "setConfig":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "SetConfig requires 1 args")
      flag.Usage()
    }
    arg408 := flag.Arg(1)
    mbTrans409 := thrift.NewMemoryBufferLen(len(arg408))
    defer mbTrans409.Close()
    _, err410 := mbTrans409.WriteString(arg408)
    if err410 != nil {
      Usage()
      return
    }
    factory411 := thrift.NewSimpleJSONProtocolFactory()
    jsProt412 := factory411.GetProtocol(mbTrans409)
    argvalue0 := meta.NewSetConfigReq()
    err413 := argvalue0.Read(jsProt412)
    if err413 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.SetConfig(value0))
    fmt.Print("\n")
    break
  case "listConfigs":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListConfigs requires 1 args")
      flag.Usage()
    }
    arg414 := flag.Arg(1)
    mbTrans415 := thrift.NewMemoryBufferLen(len(arg414))
    defer mbTrans415.Close()
    _, err416 := mbTrans415.WriteString(arg414)
    if err416 != nil {
      Usage()
      return
    }
    factory417 := thrift.NewSimpleJSONProtocolFactory()
    jsProt418 := factory417.GetProtocol(mbTrans415)
    argvalue0 := meta.NewListConfigsReq()
    err419 := argvalue0.Read(jsProt418)
    if err419 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListConfigs(value0))
    fmt.Print("\n")
    break
  case "createSnapshot":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateSnapshot requires 1 args")
      flag.Usage()
    }
    arg420 := flag.Arg(1)
    mbTrans421 := thrift.NewMemoryBufferLen(len(arg420))
    defer mbTrans421.Close()
    _, err422 := mbTrans421.WriteString(arg420)
    if err422 != nil {
      Usage()
      return
    }
    factory423 := thrift.NewSimpleJSONProtocolFactory()
    jsProt424 := factory423.GetProtocol(mbTrans421)
    argvalue0 := meta.NewCreateSnapshotReq()
    err425 := argvalue0.Read(jsProt424)
    if err425 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateSnapshot(value0))
    fmt.Print("\n")
    break
  case "dropSnapshot":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropSnapshot requires 1 args")
      flag.Usage()
    }
    arg426 := flag.Arg(1)
    mbTrans427 := thrift.NewMemoryBufferLen(len(arg426))
    defer mbTrans427.Close()
    _, err428 := mbTrans427.WriteString(arg426)
    if err428 != nil {
      Usage()
      return
    }
    factory429 := thrift.NewSimpleJSONProtocolFactory()
    jsProt430 := factory429.GetProtocol(mbTrans427)
    argvalue0 := meta.NewDropSnapshotReq()
    err431 := argvalue0.Read(jsProt430)
    if err431 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropSnapshot(value0))
    fmt.Print("\n")
    break
  case "listSnapshots":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListSnapshots requires 1 args")
      flag.Usage()
    }
    arg432 := flag.Arg(1)
    mbTrans433 := thrift.NewMemoryBufferLen(len(arg432))
    defer mbTrans433.Close()
    _, err434 := mbTrans433.WriteString(arg432)
    if err434 != nil {
      Usage()
      return
    }
    factory435 := thrift.NewSimpleJSONProtocolFactory()
    jsProt436 := factory435.GetProtocol(mbTrans433)
    argvalue0 := meta.NewListSnapshotsReq()
    err437 := argvalue0.Read(jsProt436)
    if err437 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListSnapshots(value0))
    fmt.Print("\n")
    break
  case "runAdminJob":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RunAdminJob requires 1 args")
      flag.Usage()
    }
    arg438 := flag.Arg(1)
    mbTrans439 := thrift.NewMemoryBufferLen(len(arg438))
    defer mbTrans439.Close()
    _, err440 := mbTrans439.WriteString(arg438)
    if err440 != nil {
      Usage()
      return
    }
    factory441 := thrift.NewSimpleJSONProtocolFactory()
    jsProt442 := factory441.GetProtocol(mbTrans439)
    argvalue0 := meta.NewAdminJobReq()
    err443 := argvalue0.Read(jsProt442)
    if err443 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RunAdminJob(value0))
    fmt.Print("\n")
    break
  case "mergeZone":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "MergeZone requires 1 args")
      flag.Usage()
    }
    arg444 := flag.Arg(1)
    mbTrans445 := thrift.NewMemoryBufferLen(len(arg444))
    defer mbTrans445.Close()
    _, err446 := mbTrans445.WriteString(arg444)
    if err446 != nil {
      Usage()
      return
    }
    factory447 := thrift.NewSimpleJSONProtocolFactory()
    jsProt448 := factory447.GetProtocol(mbTrans445)
    argvalue0 := meta.NewMergeZoneReq()
    err449 := argvalue0.Read(jsProt448)
    if err449 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.MergeZone(value0))
    fmt.Print("\n")
    break
  case "dropZone":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropZone requires 1 args")
      flag.Usage()
    }
    arg450 := flag.Arg(1)
    mbTrans451 := thrift.NewMemoryBufferLen(len(arg450))
    defer mbTrans451.Close()
    _, err452 := mbTrans451.WriteString(arg450)
    if err452 != nil {
      Usage()
      return
    }
    factory453 := thrift.NewSimpleJSONProtocolFactory()
    jsProt454 := factory453.GetProtocol(mbTrans451)
    argvalue0 := meta.NewDropZoneReq()
    err455 := argvalue0.Read(jsProt454)
    if err455 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropZone(value0))
    fmt.Print("\n")
    break
  case "splitZone":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "SplitZone requires 1 args")
      flag.Usage()
    }
    arg456 := flag.Arg(1)
    mbTrans457 := thrift.NewMemoryBufferLen(len(arg456))
    defer mbTrans457.Close()
    _, err458 := mbTrans457.WriteString(arg456)
    if err458 != nil {
      Usage()
      return
    }
    factory459 := thrift.NewSimpleJSONProtocolFactory()
    jsProt460 := factory459.GetProtocol(mbTrans457)
    argvalue0 := meta.NewSplitZoneReq()
    err461 := argvalue0.Read(jsProt460)
    if err461 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.SplitZone(value0))
    fmt.Print("\n")
    break
  case "renameZone":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RenameZone requires 1 args")
      flag.Usage()
    }
    arg462 := flag.Arg(1)
    mbTrans463 := thrift.NewMemoryBufferLen(len(arg462))
    defer mbTrans463.Close()
    _, err464 := mbTrans463.WriteString(arg462)
    if err464 != nil {
      Usage()
      return
    }
    factory465 := thrift.NewSimpleJSONProtocolFactory()
    jsProt466 := factory465.GetProtocol(mbTrans463)
    argvalue0 := meta.NewRenameZoneReq()
    err467 := argvalue0.Read(jsProt466)
    if err467 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RenameZone(value0))
    fmt.Print("\n")
    break
  case "getZone":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetZone requires 1 args")
      flag.Usage()
    }
    arg468 := flag.Arg(1)
    mbTrans469 := thrift.NewMemoryBufferLen(len(arg468))
    defer mbTrans469.Close()
    _, err470 := mbTrans469.WriteString(arg468)
    if err470 != nil {
      Usage()
      return
    }
    factory471 := thrift.NewSimpleJSONProtocolFactory()
    jsProt472 := factory471.GetProtocol(mbTrans469)
    argvalue0 := meta.NewGetZoneReq()
    err473 := argvalue0.Read(jsProt472)
    if err473 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetZone(value0))
    fmt.Print("\n")
    break
  case "listZones":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListZones requires 1 args")
      flag.Usage()
    }
    arg474 := flag.Arg(1)
    mbTrans475 := thrift.NewMemoryBufferLen(len(arg474))
    defer mbTrans475.Close()
    _, err476 := mbTrans475.WriteString(arg474)
    if err476 != nil {
      Usage()
      return
    }
    factory477 := thrift.NewSimpleJSONProtocolFactory()
    jsProt478 := factory477.GetProtocol(mbTrans475)
    argvalue0 := meta.NewListZonesReq()
    err479 := argvalue0.Read(jsProt478)
    if err479 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListZones(value0))
    fmt.Print("\n")
    break
  case "createBackup":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateBackup requires 1 args")
      flag.Usage()
    }
    arg480 := flag.Arg(1)
    mbTrans481 := thrift.NewMemoryBufferLen(len(arg480))
    defer mbTrans481.Close()
    _, err482 := mbTrans481.WriteString(arg480)
    if err482 != nil {
      Usage()
      return
    }
    factory483 := thrift.NewSimpleJSONProtocolFactory()
    jsProt484 := factory483.GetProtocol(mbTrans481)
    argvalue0 := meta.NewCreateBackupReq()
    err485 := argvalue0.Read(jsProt484)
    if err485 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateBackup(value0))
    fmt.Print("\n")
    break
  case "restoreMeta":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RestoreMeta requires 1 args")
      flag.Usage()
    }
    arg486 := flag.Arg(1)
    mbTrans487 := thrift.NewMemoryBufferLen(len(arg486))
    defer mbTrans487.Close()
    _, err488 := mbTrans487.WriteString(arg486)
    if err488 != nil {
      Usage()
      return
    }
    factory489 := thrift.NewSimpleJSONProtocolFactory()
    jsProt490 := factory489.GetProtocol(mbTrans487)
    argvalue0 := meta.NewRestoreMetaReq()
    err491 := argvalue0.Read(jsProt490)
    if err491 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RestoreMeta(value0))
    fmt.Print("\n")
    break
  case "addListener":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AddListener requires 1 args")
      flag.Usage()
    }
    arg492 := flag.Arg(1)
    mbTrans493 := thrift.NewMemoryBufferLen(len(arg492))
    defer mbTrans493.Close()
    _, err494 := mbTrans493.WriteString(arg492)
    if err494 != nil {
      Usage()
      return
    }
    factory495 := thrift.NewSimpleJSONProtocolFactory()
    jsProt496 := factory495.GetProtocol(mbTrans493)
    argvalue0 := meta.NewAddListenerReq()
    err497 := argvalue0.Read(jsProt496)
    if err497 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AddListener(value0))
    fmt.Print("\n")
    break
  case "removeListener":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RemoveListener requires 1 args")
      flag.Usage()
    }
    arg498 := flag.Arg(1)
    mbTrans499 := thrift.NewMemoryBufferLen(len(arg498))
    defer mbTrans499.Close()
    _, err500 := mbTrans499.WriteString(arg498)
    if err500 != nil {
      Usage()
      return
    }
    factory501 := thrift.NewSimpleJSONProtocolFactory()
    jsProt502 := factory501.GetProtocol(mbTrans499)
    argvalue0 := meta.NewRemoveListenerReq()
    err503 := argvalue0.Read(jsProt502)
    if err503 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RemoveListener(value0))
    fmt.Print("\n")
    break
  case "listListener":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListListener requires 1 args")
      flag.Usage()
    }
    arg504 := flag.Arg(1)
    mbTrans505 := thrift.NewMemoryBufferLen(len(arg504))
    defer mbTrans505.Close()
    _, err506 := mbTrans505.WriteString(arg504)
    if err506 != nil {
      Usage()
      return
    }
    factory507 := thrift.NewSimpleJSONProtocolFactory()
    jsProt508 := factory507.GetProtocol(mbTrans505)
    argvalue0 := meta.NewListListenerReq()
    err509 := argvalue0.Read(jsProt508)
    if err509 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListListener(value0))
    fmt.Print("\n")
    break
  case "getStats":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetStats requires 1 args")
      flag.Usage()
    }
    arg510 := flag.Arg(1)
    mbTrans511 := thrift.NewMemoryBufferLen(len(arg510))
    defer mbTrans511.Close()
    _, err512 := mbTrans511.WriteString(arg510)
    if err512 != nil {
      Usage()
      return
    }
    factory513 := thrift.NewSimpleJSONProtocolFactory()
    jsProt514 := factory513.GetProtocol(mbTrans511)
    argvalue0 := meta.NewGetStatsReq()
    err515 := argvalue0.Read(jsProt514)
    if err515 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetStats(value0))
    fmt.Print("\n")
    break
  case "signInFTService":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "SignInFTService requires 1 args")
      flag.Usage()
    }
    arg516 := flag.Arg(1)
    mbTrans517 := thrift.NewMemoryBufferLen(len(arg516))
    defer mbTrans517.Close()
    _, err518 := mbTrans517.WriteString(arg516)
    if err518 != nil {
      Usage()
      return
    }
    factory519 := thrift.NewSimpleJSONProtocolFactory()
    jsProt520 := factory519.GetProtocol(mbTrans517)
    argvalue0 := meta.NewSignInFTServiceReq()
    err521 := argvalue0.Read(jsProt520)
    if err521 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.SignInFTService(value0))
    fmt.Print("\n")
    break
  case "signOutFTService":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "SignOutFTService requires 1 args")
      flag.Usage()
    }
    arg522 := flag.Arg(1)
    mbTrans523 := thrift.NewMemoryBufferLen(len(arg522))
    defer mbTrans523.Close()
    _, err524 := mbTrans523.WriteString(arg522)
    if err524 != nil {
      Usage()
      return
    }
    factory525 := thrift.NewSimpleJSONProtocolFactory()
    jsProt526 := factory525.GetProtocol(mbTrans523)
    argvalue0 := meta.NewSignOutFTServiceReq()
    err527 := argvalue0.Read(jsProt526)
    if err527 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.SignOutFTService(value0))
    fmt.Print("\n")
    break
  case "listFTClients":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListFTClients requires 1 args")
      flag.Usage()
    }
    arg528 := flag.Arg(1)
    mbTrans529 := thrift.NewMemoryBufferLen(len(arg528))
    defer mbTrans529.Close()
    _, err530 := mbTrans529.WriteString(arg528)
    if err530 != nil {
      Usage()
      return
    }
    factory531 := thrift.NewSimpleJSONProtocolFactory()
    jsProt532 := factory531.GetProtocol(mbTrans529)
    argvalue0 := meta.NewListFTClientsReq()
    err533 := argvalue0.Read(jsProt532)
    if err533 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListFTClients(value0))
    fmt.Print("\n")
    break
  case "createFTIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateFTIndex requires 1 args")
      flag.Usage()
    }
    arg534 := flag.Arg(1)
    mbTrans535 := thrift.NewMemoryBufferLen(len(arg534))
    defer mbTrans535.Close()
    _, err536 := mbTrans535.WriteString(arg534)
    if err536 != nil {
      Usage()
      return
    }
    factory537 := thrift.NewSimpleJSONProtocolFactory()
    jsProt538 := factory537.GetProtocol(mbTrans535)
    argvalue0 := meta.NewCreateFTIndexReq()
    err539 := argvalue0.Read(jsProt538)
    if err539 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateFTIndex(value0))
    fmt.Print("\n")
    break
  case "dropFTIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropFTIndex requires 1 args")
      flag.Usage()
    }
    arg540 := flag.Arg(1)
    mbTrans541 := thrift.NewMemoryBufferLen(len(arg540))
    defer mbTrans541.Close()
    _, err542 := mbTrans541.WriteString(arg540)
    if err542 != nil {
      Usage()
      return
    }
    factory543 := thrift.NewSimpleJSONProtocolFactory()
    jsProt544 := factory543.GetProtocol(mbTrans541)
    argvalue0 := meta.NewDropFTIndexReq()
    err545 := argvalue0.Read(jsProt544)
    if err545 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropFTIndex(value0))
    fmt.Print("\n")
    break
  case "listFTIndexes":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListFTIndexes requires 1 args")
      flag.Usage()
    }
    arg546 := flag.Arg(1)
    mbTrans547 := thrift.NewMemoryBufferLen(len(arg546))
    defer mbTrans547.Close()
    _, err548 := mbTrans547.WriteString(arg546)
    if err548 != nil {
      Usage()
      return
    }
    factory549 := thrift.NewSimpleJSONProtocolFactory()
    jsProt550 := factory549.GetProtocol(mbTrans547)
    argvalue0 := meta.NewListFTIndexesReq()
    err551 := argvalue0.Read(jsProt550)
    if err551 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListFTIndexes(value0))
    fmt.Print("\n")
    break
  case "createSession":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateSession requires 1 args")
      flag.Usage()
    }
    arg552 := flag.Arg(1)
    mbTrans553 := thrift.NewMemoryBufferLen(len(arg552))
    defer mbTrans553.Close()
    _, err554 := mbTrans553.WriteString(arg552)
    if err554 != nil {
      Usage()
      return
    }
    factory555 := thrift.NewSimpleJSONProtocolFactory()
    jsProt556 := factory555.GetProtocol(mbTrans553)
    argvalue0 := meta.NewCreateSessionReq()
    err557 := argvalue0.Read(jsProt556)
    if err557 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateSession(value0))
    fmt.Print("\n")
    break
  case "updateSessions":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "UpdateSessions requires 1 args")
      flag.Usage()
    }
    arg558 := flag.Arg(1)
    mbTrans559 := thrift.NewMemoryBufferLen(len(arg558))
    defer mbTrans559.Close()
    _, err560 := mbTrans559.WriteString(arg558)
    if err560 != nil {
      Usage()
      return
    }
    factory561 := thrift.NewSimpleJSONProtocolFactory()
    jsProt562 := factory561.GetProtocol(mbTrans559)
    argvalue0 := meta.NewUpdateSessionsReq()
    err563 := argvalue0.Read(jsProt562)
    if err563 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.UpdateSessions(value0))
    fmt.Print("\n")
    break
  case "listSessions":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListSessions requires 1 args")
      flag.Usage()
    }
    arg564 := flag.Arg(1)
    mbTrans565 := thrift.NewMemoryBufferLen(len(arg564))
    defer mbTrans565.Close()
    _, err566 := mbTrans565.WriteString(arg564)
    if err566 != nil {
      Usage()
      return
    }
    factory567 := thrift.NewSimpleJSONProtocolFactory()
    jsProt568 := factory567.GetProtocol(mbTrans565)
    argvalue0 := meta.NewListSessionsReq()
    err569 := argvalue0.Read(jsProt568)
    if err569 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListSessions(value0))
    fmt.Print("\n")
    break
  case "getSession":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetSession requires 1 args")
      flag.Usage()
    }
    arg570 := flag.Arg(1)
    mbTrans571 := thrift.NewMemoryBufferLen(len(arg570))
    defer mbTrans571.Close()
    _, err572 := mbTrans571.WriteString(arg570)
    if err572 != nil {
      Usage()
      return
    }
    factory573 := thrift.NewSimpleJSONProtocolFactory()
    jsProt574 := factory573.GetProtocol(mbTrans571)
    argvalue0 := meta.NewGetSessionReq()
    err575 := argvalue0.Read(jsProt574)
    if err575 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetSession(value0))
    fmt.Print("\n")
    break
  case "removeSession":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RemoveSession requires 1 args")
      flag.Usage()
    }
    arg576 := flag.Arg(1)
    mbTrans577 := thrift.NewMemoryBufferLen(len(arg576))
    defer mbTrans577.Close()
    _, err578 := mbTrans577.WriteString(arg576)
    if err578 != nil {
      Usage()
      return
    }
    factory579 := thrift.NewSimpleJSONProtocolFactory()
    jsProt580 := factory579.GetProtocol(mbTrans577)
    argvalue0 := meta.NewRemoveSessionReq()
    err581 := argvalue0.Read(jsProt580)
    if err581 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RemoveSession(value0))
    fmt.Print("\n")
    break
  case "killQuery":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "KillQuery requires 1 args")
      flag.Usage()
    }
    arg582 := flag.Arg(1)
    mbTrans583 := thrift.NewMemoryBufferLen(len(arg582))
    defer mbTrans583.Close()
    _, err584 := mbTrans583.WriteString(arg582)
    if err584 != nil {
      Usage()
      return
    }
    factory585 := thrift.NewSimpleJSONProtocolFactory()
    jsProt586 := factory585.GetProtocol(mbTrans583)
    argvalue0 := meta.NewKillQueryReq()
    err587 := argvalue0.Read(jsProt586)
    if err587 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.KillQuery(value0))
    fmt.Print("\n")
    break
  case "reportTaskFinish":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ReportTaskFinish requires 1 args")
      flag.Usage()
    }
    arg588 := flag.Arg(1)
    mbTrans589 := thrift.NewMemoryBufferLen(len(arg588))
    defer mbTrans589.Close()
    _, err590 := mbTrans589.WriteString(arg588)
    if err590 != nil {
      Usage()
      return
    }
    factory591 := thrift.NewSimpleJSONProtocolFactory()
    jsProt592 := factory591.GetProtocol(mbTrans589)
    argvalue0 := meta.NewReportTaskReq()
    err593 := argvalue0.Read(jsProt592)
    if err593 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ReportTaskFinish(value0))
    fmt.Print("\n")
    break
  case "listCluster":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListCluster requires 1 args")
      flag.Usage()
    }
    arg594 := flag.Arg(1)
    mbTrans595 := thrift.NewMemoryBufferLen(len(arg594))
    defer mbTrans595.Close()
    _, err596 := mbTrans595.WriteString(arg594)
    if err596 != nil {
      Usage()
      return
    }
    factory597 := thrift.NewSimpleJSONProtocolFactory()
    jsProt598 := factory597.GetProtocol(mbTrans595)
    argvalue0 := meta.NewListClusterInfoReq()
    err599 := argvalue0.Read(jsProt598)
    if err599 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListCluster(value0))
    fmt.Print("\n")
    break
  case "getMetaDirInfo":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetMetaDirInfo requires 1 args")
      flag.Usage()
    }
    arg600 := flag.Arg(1)
    mbTrans601 := thrift.NewMemoryBufferLen(len(arg600))
    defer mbTrans601.Close()
    _, err602 := mbTrans601.WriteString(arg600)
    if err602 != nil {
      Usage()
      return
    }
    factory603 := thrift.NewSimpleJSONProtocolFactory()
    jsProt604 := factory603.GetProtocol(mbTrans601)
    argvalue0 := meta.NewGetMetaDirInfoReq()
    err605 := argvalue0.Read(jsProt604)
    if err605 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetMetaDirInfo(value0))
    fmt.Print("\n")
    break
  case "verifyClientVersion":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "VerifyClientVersion requires 1 args")
      flag.Usage()
    }
    arg606 := flag.Arg(1)
    mbTrans607 := thrift.NewMemoryBufferLen(len(arg606))
    defer mbTrans607.Close()
    _, err608 := mbTrans607.WriteString(arg606)
    if err608 != nil {
      Usage()
      return
    }
    factory609 := thrift.NewSimpleJSONProtocolFactory()
    jsProt610 := factory609.GetProtocol(mbTrans607)
    argvalue0 := meta.NewVerifyClientVersionReq()
    err611 := argvalue0.Read(jsProt610)
    if err611 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.VerifyClientVersion(value0))
    fmt.Print("\n")
    break
  case "":
    Usage()
    break
  default:
    fmt.Fprintln(os.Stderr, "Invalid function ", cmd)
  }
}
