// Autogenerated by Thrift Compiler (facebook)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
// @generated

package main

import (
        "flag"
        "fmt"
        "math"
        "net"
        "net/url"
        "os"
        "strconv"
        "strings"
        thrift "github.com/facebook/fbthrift/thrift/lib/go/thrift"
        "../../github.com/vesoft-inc/nebula-go/v2/nebula/meta"
)

func Usage() {
  fmt.Fprintln(os.Stderr, "Usage of ", os.Args[0], " [-h host:port] [-u url] [-f[ramed]] function [arg1 [arg2...]]:")
  flag.PrintDefaults()
  fmt.Fprintln(os.Stderr, "\nFunctions:")
  fmt.Fprintln(os.Stderr, "  ExecResp createSpace(CreateSpaceReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropSpace(DropSpaceReq req)")
  fmt.Fprintln(os.Stderr, "  GetSpaceResp getSpace(GetSpaceReq req)")
  fmt.Fprintln(os.Stderr, "  ListSpacesResp listSpaces(ListSpacesReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createSpaceAs(CreateSpaceAsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createTag(CreateTagReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp alterTag(AlterTagReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropTag(DropTagReq req)")
  fmt.Fprintln(os.Stderr, "  GetTagResp getTag(GetTagReq req)")
  fmt.Fprintln(os.Stderr, "  ListTagsResp listTags(ListTagsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createEdge(CreateEdgeReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp alterEdge(AlterEdgeReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropEdge(DropEdgeReq req)")
  fmt.Fprintln(os.Stderr, "  GetEdgeResp getEdge(GetEdgeReq req)")
  fmt.Fprintln(os.Stderr, "  ListEdgesResp listEdges(ListEdgesReq req)")
  fmt.Fprintln(os.Stderr, "  ListHostsResp listHosts(ListHostsReq req)")
  fmt.Fprintln(os.Stderr, "  GetPartsAllocResp getPartsAlloc(GetPartsAllocReq req)")
  fmt.Fprintln(os.Stderr, "  ListPartsResp listParts(ListPartsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp multiPut(MultiPutReq req)")
  fmt.Fprintln(os.Stderr, "  GetResp get(GetReq req)")
  fmt.Fprintln(os.Stderr, "  MultiGetResp multiGet(MultiGetReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp remove(RemoveReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp removeRange(RemoveRangeReq req)")
  fmt.Fprintln(os.Stderr, "  ScanResp scan(ScanReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createTagIndex(CreateTagIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropTagIndex(DropTagIndexReq req)")
  fmt.Fprintln(os.Stderr, "  GetTagIndexResp getTagIndex(GetTagIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ListTagIndexesResp listTagIndexes(ListTagIndexesReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp rebuildTagIndex(RebuildIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ListIndexStatusResp listTagIndexStatus(ListIndexStatusReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createEdgeIndex(CreateEdgeIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropEdgeIndex(DropEdgeIndexReq req)")
  fmt.Fprintln(os.Stderr, "  GetEdgeIndexResp getEdgeIndex(GetEdgeIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ListEdgeIndexesResp listEdgeIndexes(ListEdgeIndexesReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp rebuildEdgeIndex(RebuildIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ListIndexStatusResp listEdgeIndexStatus(ListIndexStatusReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createUser(CreateUserReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropUser(DropUserReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp alterUser(AlterUserReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp grantRole(GrantRoleReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp revokeRole(RevokeRoleReq req)")
  fmt.Fprintln(os.Stderr, "  ListUsersResp listUsers(ListUsersReq req)")
  fmt.Fprintln(os.Stderr, "  ListRolesResp listRoles(ListRolesReq req)")
  fmt.Fprintln(os.Stderr, "  ListRolesResp getUserRoles(GetUserRolesReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp changePassword(ChangePasswordReq req)")
  fmt.Fprintln(os.Stderr, "  HBResp heartBeat(HBReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp regConfig(RegConfigReq req)")
  fmt.Fprintln(os.Stderr, "  GetConfigResp getConfig(GetConfigReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp setConfig(SetConfigReq req)")
  fmt.Fprintln(os.Stderr, "  ListConfigsResp listConfigs(ListConfigsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createSnapshot(CreateSnapshotReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropSnapshot(DropSnapshotReq req)")
  fmt.Fprintln(os.Stderr, "  ListSnapshotsResp listSnapshots(ListSnapshotsReq req)")
  fmt.Fprintln(os.Stderr, "  AdminJobResp runAdminJob(AdminJobReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp addZone(AddZoneReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropZone(DropZoneReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp addHostIntoZone(AddHostIntoZoneReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropHostFromZone(DropHostFromZoneReq req)")
  fmt.Fprintln(os.Stderr, "  GetZoneResp getZone(GetZoneReq req)")
  fmt.Fprintln(os.Stderr, "  ListZonesResp listZones(ListZonesReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp addGroup(AddGroupReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropGroup(DropGroupReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp addZoneIntoGroup(AddZoneIntoGroupReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropZoneFromGroup(DropZoneFromGroupReq req)")
  fmt.Fprintln(os.Stderr, "  GetGroupResp getGroup(GetGroupReq req)")
  fmt.Fprintln(os.Stderr, "  ListGroupsResp listGroups(ListGroupsReq req)")
  fmt.Fprintln(os.Stderr, "  CreateBackupResp createBackup(CreateBackupReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp restoreMeta(RestoreMetaReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp addListener(AddListenerReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp removeListener(RemoveListenerReq req)")
  fmt.Fprintln(os.Stderr, "  ListListenerResp listListener(ListListenerReq req)")
  fmt.Fprintln(os.Stderr, "  GetStatsResp getStats(GetStatsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp signInFTService(SignInFTServiceReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp signOutFTService(SignOutFTServiceReq req)")
  fmt.Fprintln(os.Stderr, "  ListFTClientsResp listFTClients(ListFTClientsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createFTIndex(CreateFTIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropFTIndex(DropFTIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ListFTIndexesResp listFTIndexes(ListFTIndexesReq req)")
  fmt.Fprintln(os.Stderr, "  CreateSessionResp createSession(CreateSessionReq req)")
  fmt.Fprintln(os.Stderr, "  UpdateSessionsResp updateSessions(UpdateSessionsReq req)")
  fmt.Fprintln(os.Stderr, "  ListSessionsResp listSessions(ListSessionsReq req)")
  fmt.Fprintln(os.Stderr, "  GetSessionResp getSession(GetSessionReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp removeSession(RemoveSessionReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp killQuery(KillQueryReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp reportTaskFinish(ReportTaskReq req)")
  fmt.Fprintln(os.Stderr, "  ListClusterInfoResp listCluster(ListClusterInfoReq req)")
  fmt.Fprintln(os.Stderr, "  GetMetaDirInfoResp getMetaDirInfo(GetMetaDirInfoReq req)")
  fmt.Fprintln(os.Stderr, "  VerifyClientVersionResp verifyClientVersion(VerifyClientVersionReq req)")
  fmt.Fprintln(os.Stderr)
  os.Exit(0)
}

func main() {
  flag.Usage = Usage
  var host string
  var port int
  var protocol string
  var urlString string
  var framed bool
  var useHttp bool
  var parsedUrl url.URL
  var trans thrift.Transport
  _ = strconv.Atoi
  _ = math.Abs
  flag.Usage = Usage
  flag.StringVar(&host, "h", "localhost", "Specify host")
  flag.IntVar(&port, "p", 9090, "Specify port")
  flag.StringVar(&protocol, "P", "binary", "Specify the protocol (binary, compact, simplejson, json)")
  flag.StringVar(&urlString, "u", "", "Specify the url")
  flag.BoolVar(&framed, "framed", false, "Use framed transport")
  flag.BoolVar(&useHttp, "http", false, "Use http")
  flag.Parse()
  
  if len(urlString) > 0 {
    parsedUrl, err := url.Parse(urlString)
    if err != nil {
      fmt.Fprintln(os.Stderr, "Error parsing URL: ", err)
      flag.Usage()
    }
    host = parsedUrl.Host
    useHttp = len(parsedUrl.Scheme) <= 0 || parsedUrl.Scheme == "http"
  } else if useHttp {
    _, err := url.Parse(fmt.Sprint("http://", host, ":", port))
    if err != nil {
      fmt.Fprintln(os.Stderr, "Error parsing URL: ", err)
      flag.Usage()
    }
  }
  
  cmd := flag.Arg(0)
  var err error
  if useHttp {
    trans, err = thrift.NewHTTPPostClient(parsedUrl.String())
  } else {
    portStr := fmt.Sprint(port)
    if strings.Contains(host, ":") {
           host, portStr, err = net.SplitHostPort(host)
           if err != nil {
                   fmt.Fprintln(os.Stderr, "error with host:", err)
                   os.Exit(1)
           }
    }
    trans, err = thrift.NewSocket(thrift.SocketAddr(net.JoinHostPort(host, portStr)))
    if err != nil {
      fmt.Fprintln(os.Stderr, "error resolving address:", err)
      os.Exit(1)
    }
    if framed {
      trans = thrift.NewFramedTransport(trans)
    }
  }
  if err != nil {
    fmt.Fprintln(os.Stderr, "Error creating transport", err)
    os.Exit(1)
  }
  defer trans.Close()
  var protocolFactory thrift.ProtocolFactory
  switch protocol {
  case "compact":
    protocolFactory = thrift.NewCompactProtocolFactory()
    break
  case "simplejson":
    protocolFactory = thrift.NewSimpleJSONProtocolFactory()
    break
  case "json":
    protocolFactory = thrift.NewJSONProtocolFactory()
    break
  case "binary", "":
    protocolFactory = thrift.NewBinaryProtocolFactoryDefault()
    break
  default:
    fmt.Fprintln(os.Stderr, "Invalid protocol specified: ", protocol)
    Usage()
    os.Exit(1)
  }
  client := meta.NewMetaServiceClientFactory(trans, protocolFactory)
  if err := trans.Open(); err != nil {
    fmt.Fprintln(os.Stderr, "Error opening socket to ", host, ":", port, " ", err)
    os.Exit(1)
  }
  
  switch cmd {
  case "createSpace":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateSpace requires 1 args")
      flag.Usage()
    }
    arg97 := flag.Arg(1)
    mbTrans98 := thrift.NewMemoryBufferLen(len(arg97))
    defer mbTrans98.Close()
    _, err99 := mbTrans98.WriteString(arg97)
    if err99 != nil {
      Usage()
      return
    }
    factory100 := thrift.NewSimpleJSONProtocolFactory()
    jsProt101 := factory100.GetProtocol(mbTrans98)
    argvalue0 := meta.NewCreateSpaceReq()
    err102 := argvalue0.Read(jsProt101)
    if err102 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateSpace(value0))
    fmt.Print("\n")
    break
  case "dropSpace":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropSpace requires 1 args")
      flag.Usage()
    }
    arg103 := flag.Arg(1)
    mbTrans104 := thrift.NewMemoryBufferLen(len(arg103))
    defer mbTrans104.Close()
    _, err105 := mbTrans104.WriteString(arg103)
    if err105 != nil {
      Usage()
      return
    }
    factory106 := thrift.NewSimpleJSONProtocolFactory()
    jsProt107 := factory106.GetProtocol(mbTrans104)
    argvalue0 := meta.NewDropSpaceReq()
    err108 := argvalue0.Read(jsProt107)
    if err108 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropSpace(value0))
    fmt.Print("\n")
    break
  case "getSpace":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetSpace requires 1 args")
      flag.Usage()
    }
    arg109 := flag.Arg(1)
    mbTrans110 := thrift.NewMemoryBufferLen(len(arg109))
    defer mbTrans110.Close()
    _, err111 := mbTrans110.WriteString(arg109)
    if err111 != nil {
      Usage()
      return
    }
    factory112 := thrift.NewSimpleJSONProtocolFactory()
    jsProt113 := factory112.GetProtocol(mbTrans110)
    argvalue0 := meta.NewGetSpaceReq()
    err114 := argvalue0.Read(jsProt113)
    if err114 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetSpace(value0))
    fmt.Print("\n")
    break
  case "listSpaces":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListSpaces requires 1 args")
      flag.Usage()
    }
    arg115 := flag.Arg(1)
    mbTrans116 := thrift.NewMemoryBufferLen(len(arg115))
    defer mbTrans116.Close()
    _, err117 := mbTrans116.WriteString(arg115)
    if err117 != nil {
      Usage()
      return
    }
    factory118 := thrift.NewSimpleJSONProtocolFactory()
    jsProt119 := factory118.GetProtocol(mbTrans116)
    argvalue0 := meta.NewListSpacesReq()
    err120 := argvalue0.Read(jsProt119)
    if err120 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListSpaces(value0))
    fmt.Print("\n")
    break
  case "createSpaceAs":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateSpaceAs requires 1 args")
      flag.Usage()
    }
    arg121 := flag.Arg(1)
    mbTrans122 := thrift.NewMemoryBufferLen(len(arg121))
    defer mbTrans122.Close()
    _, err123 := mbTrans122.WriteString(arg121)
    if err123 != nil {
      Usage()
      return
    }
    factory124 := thrift.NewSimpleJSONProtocolFactory()
    jsProt125 := factory124.GetProtocol(mbTrans122)
    argvalue0 := meta.NewCreateSpaceAsReq()
    err126 := argvalue0.Read(jsProt125)
    if err126 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateSpaceAs(value0))
    fmt.Print("\n")
    break
  case "createTag":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateTag requires 1 args")
      flag.Usage()
    }
    arg127 := flag.Arg(1)
    mbTrans128 := thrift.NewMemoryBufferLen(len(arg127))
    defer mbTrans128.Close()
    _, err129 := mbTrans128.WriteString(arg127)
    if err129 != nil {
      Usage()
      return
    }
    factory130 := thrift.NewSimpleJSONProtocolFactory()
    jsProt131 := factory130.GetProtocol(mbTrans128)
    argvalue0 := meta.NewCreateTagReq()
    err132 := argvalue0.Read(jsProt131)
    if err132 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateTag(value0))
    fmt.Print("\n")
    break
  case "alterTag":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AlterTag requires 1 args")
      flag.Usage()
    }
    arg133 := flag.Arg(1)
    mbTrans134 := thrift.NewMemoryBufferLen(len(arg133))
    defer mbTrans134.Close()
    _, err135 := mbTrans134.WriteString(arg133)
    if err135 != nil {
      Usage()
      return
    }
    factory136 := thrift.NewSimpleJSONProtocolFactory()
    jsProt137 := factory136.GetProtocol(mbTrans134)
    argvalue0 := meta.NewAlterTagReq()
    err138 := argvalue0.Read(jsProt137)
    if err138 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AlterTag(value0))
    fmt.Print("\n")
    break
  case "dropTag":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropTag requires 1 args")
      flag.Usage()
    }
    arg139 := flag.Arg(1)
    mbTrans140 := thrift.NewMemoryBufferLen(len(arg139))
    defer mbTrans140.Close()
    _, err141 := mbTrans140.WriteString(arg139)
    if err141 != nil {
      Usage()
      return
    }
    factory142 := thrift.NewSimpleJSONProtocolFactory()
    jsProt143 := factory142.GetProtocol(mbTrans140)
    argvalue0 := meta.NewDropTagReq()
    err144 := argvalue0.Read(jsProt143)
    if err144 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropTag(value0))
    fmt.Print("\n")
    break
  case "getTag":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetTag requires 1 args")
      flag.Usage()
    }
    arg145 := flag.Arg(1)
    mbTrans146 := thrift.NewMemoryBufferLen(len(arg145))
    defer mbTrans146.Close()
    _, err147 := mbTrans146.WriteString(arg145)
    if err147 != nil {
      Usage()
      return
    }
    factory148 := thrift.NewSimpleJSONProtocolFactory()
    jsProt149 := factory148.GetProtocol(mbTrans146)
    argvalue0 := meta.NewGetTagReq()
    err150 := argvalue0.Read(jsProt149)
    if err150 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetTag(value0))
    fmt.Print("\n")
    break
  case "listTags":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListTags requires 1 args")
      flag.Usage()
    }
    arg151 := flag.Arg(1)
    mbTrans152 := thrift.NewMemoryBufferLen(len(arg151))
    defer mbTrans152.Close()
    _, err153 := mbTrans152.WriteString(arg151)
    if err153 != nil {
      Usage()
      return
    }
    factory154 := thrift.NewSimpleJSONProtocolFactory()
    jsProt155 := factory154.GetProtocol(mbTrans152)
    argvalue0 := meta.NewListTagsReq()
    err156 := argvalue0.Read(jsProt155)
    if err156 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListTags(value0))
    fmt.Print("\n")
    break
  case "createEdge":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateEdge requires 1 args")
      flag.Usage()
    }
    arg157 := flag.Arg(1)
    mbTrans158 := thrift.NewMemoryBufferLen(len(arg157))
    defer mbTrans158.Close()
    _, err159 := mbTrans158.WriteString(arg157)
    if err159 != nil {
      Usage()
      return
    }
    factory160 := thrift.NewSimpleJSONProtocolFactory()
    jsProt161 := factory160.GetProtocol(mbTrans158)
    argvalue0 := meta.NewCreateEdgeReq()
    err162 := argvalue0.Read(jsProt161)
    if err162 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateEdge(value0))
    fmt.Print("\n")
    break
  case "alterEdge":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AlterEdge requires 1 args")
      flag.Usage()
    }
    arg163 := flag.Arg(1)
    mbTrans164 := thrift.NewMemoryBufferLen(len(arg163))
    defer mbTrans164.Close()
    _, err165 := mbTrans164.WriteString(arg163)
    if err165 != nil {
      Usage()
      return
    }
    factory166 := thrift.NewSimpleJSONProtocolFactory()
    jsProt167 := factory166.GetProtocol(mbTrans164)
    argvalue0 := meta.NewAlterEdgeReq()
    err168 := argvalue0.Read(jsProt167)
    if err168 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AlterEdge(value0))
    fmt.Print("\n")
    break
  case "dropEdge":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropEdge requires 1 args")
      flag.Usage()
    }
    arg169 := flag.Arg(1)
    mbTrans170 := thrift.NewMemoryBufferLen(len(arg169))
    defer mbTrans170.Close()
    _, err171 := mbTrans170.WriteString(arg169)
    if err171 != nil {
      Usage()
      return
    }
    factory172 := thrift.NewSimpleJSONProtocolFactory()
    jsProt173 := factory172.GetProtocol(mbTrans170)
    argvalue0 := meta.NewDropEdgeReq()
    err174 := argvalue0.Read(jsProt173)
    if err174 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropEdge(value0))
    fmt.Print("\n")
    break
  case "getEdge":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetEdge requires 1 args")
      flag.Usage()
    }
    arg175 := flag.Arg(1)
    mbTrans176 := thrift.NewMemoryBufferLen(len(arg175))
    defer mbTrans176.Close()
    _, err177 := mbTrans176.WriteString(arg175)
    if err177 != nil {
      Usage()
      return
    }
    factory178 := thrift.NewSimpleJSONProtocolFactory()
    jsProt179 := factory178.GetProtocol(mbTrans176)
    argvalue0 := meta.NewGetEdgeReq()
    err180 := argvalue0.Read(jsProt179)
    if err180 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetEdge(value0))
    fmt.Print("\n")
    break
  case "listEdges":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListEdges requires 1 args")
      flag.Usage()
    }
    arg181 := flag.Arg(1)
    mbTrans182 := thrift.NewMemoryBufferLen(len(arg181))
    defer mbTrans182.Close()
    _, err183 := mbTrans182.WriteString(arg181)
    if err183 != nil {
      Usage()
      return
    }
    factory184 := thrift.NewSimpleJSONProtocolFactory()
    jsProt185 := factory184.GetProtocol(mbTrans182)
    argvalue0 := meta.NewListEdgesReq()
    err186 := argvalue0.Read(jsProt185)
    if err186 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListEdges(value0))
    fmt.Print("\n")
    break
  case "listHosts":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListHosts requires 1 args")
      flag.Usage()
    }
    arg187 := flag.Arg(1)
    mbTrans188 := thrift.NewMemoryBufferLen(len(arg187))
    defer mbTrans188.Close()
    _, err189 := mbTrans188.WriteString(arg187)
    if err189 != nil {
      Usage()
      return
    }
    factory190 := thrift.NewSimpleJSONProtocolFactory()
    jsProt191 := factory190.GetProtocol(mbTrans188)
    argvalue0 := meta.NewListHostsReq()
    err192 := argvalue0.Read(jsProt191)
    if err192 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListHosts(value0))
    fmt.Print("\n")
    break
  case "getPartsAlloc":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetPartsAlloc requires 1 args")
      flag.Usage()
    }
    arg193 := flag.Arg(1)
    mbTrans194 := thrift.NewMemoryBufferLen(len(arg193))
    defer mbTrans194.Close()
    _, err195 := mbTrans194.WriteString(arg193)
    if err195 != nil {
      Usage()
      return
    }
    factory196 := thrift.NewSimpleJSONProtocolFactory()
    jsProt197 := factory196.GetProtocol(mbTrans194)
    argvalue0 := meta.NewGetPartsAllocReq()
    err198 := argvalue0.Read(jsProt197)
    if err198 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetPartsAlloc(value0))
    fmt.Print("\n")
    break
  case "listParts":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListParts requires 1 args")
      flag.Usage()
    }
    arg199 := flag.Arg(1)
    mbTrans200 := thrift.NewMemoryBufferLen(len(arg199))
    defer mbTrans200.Close()
    _, err201 := mbTrans200.WriteString(arg199)
    if err201 != nil {
      Usage()
      return
    }
    factory202 := thrift.NewSimpleJSONProtocolFactory()
    jsProt203 := factory202.GetProtocol(mbTrans200)
    argvalue0 := meta.NewListPartsReq()
    err204 := argvalue0.Read(jsProt203)
    if err204 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListParts(value0))
    fmt.Print("\n")
    break
  case "multiPut":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "MultiPut requires 1 args")
      flag.Usage()
    }
    arg205 := flag.Arg(1)
    mbTrans206 := thrift.NewMemoryBufferLen(len(arg205))
    defer mbTrans206.Close()
    _, err207 := mbTrans206.WriteString(arg205)
    if err207 != nil {
      Usage()
      return
    }
    factory208 := thrift.NewSimpleJSONProtocolFactory()
    jsProt209 := factory208.GetProtocol(mbTrans206)
    argvalue0 := meta.NewMultiPutReq()
    err210 := argvalue0.Read(jsProt209)
    if err210 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.MultiPut(value0))
    fmt.Print("\n")
    break
  case "get":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "Get requires 1 args")
      flag.Usage()
    }
    arg211 := flag.Arg(1)
    mbTrans212 := thrift.NewMemoryBufferLen(len(arg211))
    defer mbTrans212.Close()
    _, err213 := mbTrans212.WriteString(arg211)
    if err213 != nil {
      Usage()
      return
    }
    factory214 := thrift.NewSimpleJSONProtocolFactory()
    jsProt215 := factory214.GetProtocol(mbTrans212)
    argvalue0 := meta.NewGetReq()
    err216 := argvalue0.Read(jsProt215)
    if err216 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.Get(value0))
    fmt.Print("\n")
    break
  case "multiGet":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "MultiGet requires 1 args")
      flag.Usage()
    }
    arg217 := flag.Arg(1)
    mbTrans218 := thrift.NewMemoryBufferLen(len(arg217))
    defer mbTrans218.Close()
    _, err219 := mbTrans218.WriteString(arg217)
    if err219 != nil {
      Usage()
      return
    }
    factory220 := thrift.NewSimpleJSONProtocolFactory()
    jsProt221 := factory220.GetProtocol(mbTrans218)
    argvalue0 := meta.NewMultiGetReq()
    err222 := argvalue0.Read(jsProt221)
    if err222 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.MultiGet(value0))
    fmt.Print("\n")
    break
  case "remove":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "Remove requires 1 args")
      flag.Usage()
    }
    arg223 := flag.Arg(1)
    mbTrans224 := thrift.NewMemoryBufferLen(len(arg223))
    defer mbTrans224.Close()
    _, err225 := mbTrans224.WriteString(arg223)
    if err225 != nil {
      Usage()
      return
    }
    factory226 := thrift.NewSimpleJSONProtocolFactory()
    jsProt227 := factory226.GetProtocol(mbTrans224)
    argvalue0 := meta.NewRemoveReq()
    err228 := argvalue0.Read(jsProt227)
    if err228 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.Remove(value0))
    fmt.Print("\n")
    break
  case "removeRange":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RemoveRange requires 1 args")
      flag.Usage()
    }
    arg229 := flag.Arg(1)
    mbTrans230 := thrift.NewMemoryBufferLen(len(arg229))
    defer mbTrans230.Close()
    _, err231 := mbTrans230.WriteString(arg229)
    if err231 != nil {
      Usage()
      return
    }
    factory232 := thrift.NewSimpleJSONProtocolFactory()
    jsProt233 := factory232.GetProtocol(mbTrans230)
    argvalue0 := meta.NewRemoveRangeReq()
    err234 := argvalue0.Read(jsProt233)
    if err234 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RemoveRange(value0))
    fmt.Print("\n")
    break
  case "scan":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "Scan requires 1 args")
      flag.Usage()
    }
    arg235 := flag.Arg(1)
    mbTrans236 := thrift.NewMemoryBufferLen(len(arg235))
    defer mbTrans236.Close()
    _, err237 := mbTrans236.WriteString(arg235)
    if err237 != nil {
      Usage()
      return
    }
    factory238 := thrift.NewSimpleJSONProtocolFactory()
    jsProt239 := factory238.GetProtocol(mbTrans236)
    argvalue0 := meta.NewScanReq()
    err240 := argvalue0.Read(jsProt239)
    if err240 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.Scan(value0))
    fmt.Print("\n")
    break
  case "createTagIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateTagIndex requires 1 args")
      flag.Usage()
    }
    arg241 := flag.Arg(1)
    mbTrans242 := thrift.NewMemoryBufferLen(len(arg241))
    defer mbTrans242.Close()
    _, err243 := mbTrans242.WriteString(arg241)
    if err243 != nil {
      Usage()
      return
    }
    factory244 := thrift.NewSimpleJSONProtocolFactory()
    jsProt245 := factory244.GetProtocol(mbTrans242)
    argvalue0 := meta.NewCreateTagIndexReq()
    err246 := argvalue0.Read(jsProt245)
    if err246 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateTagIndex(value0))
    fmt.Print("\n")
    break
  case "dropTagIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropTagIndex requires 1 args")
      flag.Usage()
    }
    arg247 := flag.Arg(1)
    mbTrans248 := thrift.NewMemoryBufferLen(len(arg247))
    defer mbTrans248.Close()
    _, err249 := mbTrans248.WriteString(arg247)
    if err249 != nil {
      Usage()
      return
    }
    factory250 := thrift.NewSimpleJSONProtocolFactory()
    jsProt251 := factory250.GetProtocol(mbTrans248)
    argvalue0 := meta.NewDropTagIndexReq()
    err252 := argvalue0.Read(jsProt251)
    if err252 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropTagIndex(value0))
    fmt.Print("\n")
    break
  case "getTagIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetTagIndex requires 1 args")
      flag.Usage()
    }
    arg253 := flag.Arg(1)
    mbTrans254 := thrift.NewMemoryBufferLen(len(arg253))
    defer mbTrans254.Close()
    _, err255 := mbTrans254.WriteString(arg253)
    if err255 != nil {
      Usage()
      return
    }
    factory256 := thrift.NewSimpleJSONProtocolFactory()
    jsProt257 := factory256.GetProtocol(mbTrans254)
    argvalue0 := meta.NewGetTagIndexReq()
    err258 := argvalue0.Read(jsProt257)
    if err258 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetTagIndex(value0))
    fmt.Print("\n")
    break
  case "listTagIndexes":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListTagIndexes requires 1 args")
      flag.Usage()
    }
    arg259 := flag.Arg(1)
    mbTrans260 := thrift.NewMemoryBufferLen(len(arg259))
    defer mbTrans260.Close()
    _, err261 := mbTrans260.WriteString(arg259)
    if err261 != nil {
      Usage()
      return
    }
    factory262 := thrift.NewSimpleJSONProtocolFactory()
    jsProt263 := factory262.GetProtocol(mbTrans260)
    argvalue0 := meta.NewListTagIndexesReq()
    err264 := argvalue0.Read(jsProt263)
    if err264 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListTagIndexes(value0))
    fmt.Print("\n")
    break
  case "rebuildTagIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RebuildTagIndex requires 1 args")
      flag.Usage()
    }
    arg265 := flag.Arg(1)
    mbTrans266 := thrift.NewMemoryBufferLen(len(arg265))
    defer mbTrans266.Close()
    _, err267 := mbTrans266.WriteString(arg265)
    if err267 != nil {
      Usage()
      return
    }
    factory268 := thrift.NewSimpleJSONProtocolFactory()
    jsProt269 := factory268.GetProtocol(mbTrans266)
    argvalue0 := meta.NewRebuildIndexReq()
    err270 := argvalue0.Read(jsProt269)
    if err270 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RebuildTagIndex(value0))
    fmt.Print("\n")
    break
  case "listTagIndexStatus":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListTagIndexStatus requires 1 args")
      flag.Usage()
    }
    arg271 := flag.Arg(1)
    mbTrans272 := thrift.NewMemoryBufferLen(len(arg271))
    defer mbTrans272.Close()
    _, err273 := mbTrans272.WriteString(arg271)
    if err273 != nil {
      Usage()
      return
    }
    factory274 := thrift.NewSimpleJSONProtocolFactory()
    jsProt275 := factory274.GetProtocol(mbTrans272)
    argvalue0 := meta.NewListIndexStatusReq()
    err276 := argvalue0.Read(jsProt275)
    if err276 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListTagIndexStatus(value0))
    fmt.Print("\n")
    break
  case "createEdgeIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateEdgeIndex requires 1 args")
      flag.Usage()
    }
    arg277 := flag.Arg(1)
    mbTrans278 := thrift.NewMemoryBufferLen(len(arg277))
    defer mbTrans278.Close()
    _, err279 := mbTrans278.WriteString(arg277)
    if err279 != nil {
      Usage()
      return
    }
    factory280 := thrift.NewSimpleJSONProtocolFactory()
    jsProt281 := factory280.GetProtocol(mbTrans278)
    argvalue0 := meta.NewCreateEdgeIndexReq()
    err282 := argvalue0.Read(jsProt281)
    if err282 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateEdgeIndex(value0))
    fmt.Print("\n")
    break
  case "dropEdgeIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropEdgeIndex requires 1 args")
      flag.Usage()
    }
    arg283 := flag.Arg(1)
    mbTrans284 := thrift.NewMemoryBufferLen(len(arg283))
    defer mbTrans284.Close()
    _, err285 := mbTrans284.WriteString(arg283)
    if err285 != nil {
      Usage()
      return
    }
    factory286 := thrift.NewSimpleJSONProtocolFactory()
    jsProt287 := factory286.GetProtocol(mbTrans284)
    argvalue0 := meta.NewDropEdgeIndexReq()
    err288 := argvalue0.Read(jsProt287)
    if err288 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropEdgeIndex(value0))
    fmt.Print("\n")
    break
  case "getEdgeIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetEdgeIndex requires 1 args")
      flag.Usage()
    }
    arg289 := flag.Arg(1)
    mbTrans290 := thrift.NewMemoryBufferLen(len(arg289))
    defer mbTrans290.Close()
    _, err291 := mbTrans290.WriteString(arg289)
    if err291 != nil {
      Usage()
      return
    }
    factory292 := thrift.NewSimpleJSONProtocolFactory()
    jsProt293 := factory292.GetProtocol(mbTrans290)
    argvalue0 := meta.NewGetEdgeIndexReq()
    err294 := argvalue0.Read(jsProt293)
    if err294 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetEdgeIndex(value0))
    fmt.Print("\n")
    break
  case "listEdgeIndexes":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListEdgeIndexes requires 1 args")
      flag.Usage()
    }
    arg295 := flag.Arg(1)
    mbTrans296 := thrift.NewMemoryBufferLen(len(arg295))
    defer mbTrans296.Close()
    _, err297 := mbTrans296.WriteString(arg295)
    if err297 != nil {
      Usage()
      return
    }
    factory298 := thrift.NewSimpleJSONProtocolFactory()
    jsProt299 := factory298.GetProtocol(mbTrans296)
    argvalue0 := meta.NewListEdgeIndexesReq()
    err300 := argvalue0.Read(jsProt299)
    if err300 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListEdgeIndexes(value0))
    fmt.Print("\n")
    break
  case "rebuildEdgeIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RebuildEdgeIndex requires 1 args")
      flag.Usage()
    }
    arg301 := flag.Arg(1)
    mbTrans302 := thrift.NewMemoryBufferLen(len(arg301))
    defer mbTrans302.Close()
    _, err303 := mbTrans302.WriteString(arg301)
    if err303 != nil {
      Usage()
      return
    }
    factory304 := thrift.NewSimpleJSONProtocolFactory()
    jsProt305 := factory304.GetProtocol(mbTrans302)
    argvalue0 := meta.NewRebuildIndexReq()
    err306 := argvalue0.Read(jsProt305)
    if err306 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RebuildEdgeIndex(value0))
    fmt.Print("\n")
    break
  case "listEdgeIndexStatus":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListEdgeIndexStatus requires 1 args")
      flag.Usage()
    }
    arg307 := flag.Arg(1)
    mbTrans308 := thrift.NewMemoryBufferLen(len(arg307))
    defer mbTrans308.Close()
    _, err309 := mbTrans308.WriteString(arg307)
    if err309 != nil {
      Usage()
      return
    }
    factory310 := thrift.NewSimpleJSONProtocolFactory()
    jsProt311 := factory310.GetProtocol(mbTrans308)
    argvalue0 := meta.NewListIndexStatusReq()
    err312 := argvalue0.Read(jsProt311)
    if err312 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListEdgeIndexStatus(value0))
    fmt.Print("\n")
    break
  case "createUser":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateUser requires 1 args")
      flag.Usage()
    }
    arg313 := flag.Arg(1)
    mbTrans314 := thrift.NewMemoryBufferLen(len(arg313))
    defer mbTrans314.Close()
    _, err315 := mbTrans314.WriteString(arg313)
    if err315 != nil {
      Usage()
      return
    }
    factory316 := thrift.NewSimpleJSONProtocolFactory()
    jsProt317 := factory316.GetProtocol(mbTrans314)
    argvalue0 := meta.NewCreateUserReq()
    err318 := argvalue0.Read(jsProt317)
    if err318 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateUser(value0))
    fmt.Print("\n")
    break
  case "dropUser":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropUser requires 1 args")
      flag.Usage()
    }
    arg319 := flag.Arg(1)
    mbTrans320 := thrift.NewMemoryBufferLen(len(arg319))
    defer mbTrans320.Close()
    _, err321 := mbTrans320.WriteString(arg319)
    if err321 != nil {
      Usage()
      return
    }
    factory322 := thrift.NewSimpleJSONProtocolFactory()
    jsProt323 := factory322.GetProtocol(mbTrans320)
    argvalue0 := meta.NewDropUserReq()
    err324 := argvalue0.Read(jsProt323)
    if err324 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropUser(value0))
    fmt.Print("\n")
    break
  case "alterUser":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AlterUser requires 1 args")
      flag.Usage()
    }
    arg325 := flag.Arg(1)
    mbTrans326 := thrift.NewMemoryBufferLen(len(arg325))
    defer mbTrans326.Close()
    _, err327 := mbTrans326.WriteString(arg325)
    if err327 != nil {
      Usage()
      return
    }
    factory328 := thrift.NewSimpleJSONProtocolFactory()
    jsProt329 := factory328.GetProtocol(mbTrans326)
    argvalue0 := meta.NewAlterUserReq()
    err330 := argvalue0.Read(jsProt329)
    if err330 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AlterUser(value0))
    fmt.Print("\n")
    break
  case "grantRole":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GrantRole requires 1 args")
      flag.Usage()
    }
    arg331 := flag.Arg(1)
    mbTrans332 := thrift.NewMemoryBufferLen(len(arg331))
    defer mbTrans332.Close()
    _, err333 := mbTrans332.WriteString(arg331)
    if err333 != nil {
      Usage()
      return
    }
    factory334 := thrift.NewSimpleJSONProtocolFactory()
    jsProt335 := factory334.GetProtocol(mbTrans332)
    argvalue0 := meta.NewGrantRoleReq()
    err336 := argvalue0.Read(jsProt335)
    if err336 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GrantRole(value0))
    fmt.Print("\n")
    break
  case "revokeRole":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RevokeRole requires 1 args")
      flag.Usage()
    }
    arg337 := flag.Arg(1)
    mbTrans338 := thrift.NewMemoryBufferLen(len(arg337))
    defer mbTrans338.Close()
    _, err339 := mbTrans338.WriteString(arg337)
    if err339 != nil {
      Usage()
      return
    }
    factory340 := thrift.NewSimpleJSONProtocolFactory()
    jsProt341 := factory340.GetProtocol(mbTrans338)
    argvalue0 := meta.NewRevokeRoleReq()
    err342 := argvalue0.Read(jsProt341)
    if err342 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RevokeRole(value0))
    fmt.Print("\n")
    break
  case "listUsers":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListUsers requires 1 args")
      flag.Usage()
    }
    arg343 := flag.Arg(1)
    mbTrans344 := thrift.NewMemoryBufferLen(len(arg343))
    defer mbTrans344.Close()
    _, err345 := mbTrans344.WriteString(arg343)
    if err345 != nil {
      Usage()
      return
    }
    factory346 := thrift.NewSimpleJSONProtocolFactory()
    jsProt347 := factory346.GetProtocol(mbTrans344)
    argvalue0 := meta.NewListUsersReq()
    err348 := argvalue0.Read(jsProt347)
    if err348 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListUsers(value0))
    fmt.Print("\n")
    break
  case "listRoles":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListRoles requires 1 args")
      flag.Usage()
    }
    arg349 := flag.Arg(1)
    mbTrans350 := thrift.NewMemoryBufferLen(len(arg349))
    defer mbTrans350.Close()
    _, err351 := mbTrans350.WriteString(arg349)
    if err351 != nil {
      Usage()
      return
    }
    factory352 := thrift.NewSimpleJSONProtocolFactory()
    jsProt353 := factory352.GetProtocol(mbTrans350)
    argvalue0 := meta.NewListRolesReq()
    err354 := argvalue0.Read(jsProt353)
    if err354 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListRoles(value0))
    fmt.Print("\n")
    break
  case "getUserRoles":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetUserRoles requires 1 args")
      flag.Usage()
    }
    arg355 := flag.Arg(1)
    mbTrans356 := thrift.NewMemoryBufferLen(len(arg355))
    defer mbTrans356.Close()
    _, err357 := mbTrans356.WriteString(arg355)
    if err357 != nil {
      Usage()
      return
    }
    factory358 := thrift.NewSimpleJSONProtocolFactory()
    jsProt359 := factory358.GetProtocol(mbTrans356)
    argvalue0 := meta.NewGetUserRolesReq()
    err360 := argvalue0.Read(jsProt359)
    if err360 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetUserRoles(value0))
    fmt.Print("\n")
    break
  case "changePassword":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ChangePassword requires 1 args")
      flag.Usage()
    }
    arg361 := flag.Arg(1)
    mbTrans362 := thrift.NewMemoryBufferLen(len(arg361))
    defer mbTrans362.Close()
    _, err363 := mbTrans362.WriteString(arg361)
    if err363 != nil {
      Usage()
      return
    }
    factory364 := thrift.NewSimpleJSONProtocolFactory()
    jsProt365 := factory364.GetProtocol(mbTrans362)
    argvalue0 := meta.NewChangePasswordReq()
    err366 := argvalue0.Read(jsProt365)
    if err366 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ChangePassword(value0))
    fmt.Print("\n")
    break
  case "heartBeat":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "HeartBeat requires 1 args")
      flag.Usage()
    }
    arg367 := flag.Arg(1)
    mbTrans368 := thrift.NewMemoryBufferLen(len(arg367))
    defer mbTrans368.Close()
    _, err369 := mbTrans368.WriteString(arg367)
    if err369 != nil {
      Usage()
      return
    }
    factory370 := thrift.NewSimpleJSONProtocolFactory()
    jsProt371 := factory370.GetProtocol(mbTrans368)
    argvalue0 := meta.NewHBReq()
    err372 := argvalue0.Read(jsProt371)
    if err372 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.HeartBeat(value0))
    fmt.Print("\n")
    break
  case "regConfig":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RegConfig requires 1 args")
      flag.Usage()
    }
    arg373 := flag.Arg(1)
    mbTrans374 := thrift.NewMemoryBufferLen(len(arg373))
    defer mbTrans374.Close()
    _, err375 := mbTrans374.WriteString(arg373)
    if err375 != nil {
      Usage()
      return
    }
    factory376 := thrift.NewSimpleJSONProtocolFactory()
    jsProt377 := factory376.GetProtocol(mbTrans374)
    argvalue0 := meta.NewRegConfigReq()
    err378 := argvalue0.Read(jsProt377)
    if err378 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RegConfig(value0))
    fmt.Print("\n")
    break
  case "getConfig":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetConfig requires 1 args")
      flag.Usage()
    }
    arg379 := flag.Arg(1)
    mbTrans380 := thrift.NewMemoryBufferLen(len(arg379))
    defer mbTrans380.Close()
    _, err381 := mbTrans380.WriteString(arg379)
    if err381 != nil {
      Usage()
      return
    }
    factory382 := thrift.NewSimpleJSONProtocolFactory()
    jsProt383 := factory382.GetProtocol(mbTrans380)
    argvalue0 := meta.NewGetConfigReq()
    err384 := argvalue0.Read(jsProt383)
    if err384 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetConfig(value0))
    fmt.Print("\n")
    break
  case "setConfig":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "SetConfig requires 1 args")
      flag.Usage()
    }
    arg385 := flag.Arg(1)
    mbTrans386 := thrift.NewMemoryBufferLen(len(arg385))
    defer mbTrans386.Close()
    _, err387 := mbTrans386.WriteString(arg385)
    if err387 != nil {
      Usage()
      return
    }
    factory388 := thrift.NewSimpleJSONProtocolFactory()
    jsProt389 := factory388.GetProtocol(mbTrans386)
    argvalue0 := meta.NewSetConfigReq()
    err390 := argvalue0.Read(jsProt389)
    if err390 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.SetConfig(value0))
    fmt.Print("\n")
    break
  case "listConfigs":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListConfigs requires 1 args")
      flag.Usage()
    }
    arg391 := flag.Arg(1)
    mbTrans392 := thrift.NewMemoryBufferLen(len(arg391))
    defer mbTrans392.Close()
    _, err393 := mbTrans392.WriteString(arg391)
    if err393 != nil {
      Usage()
      return
    }
    factory394 := thrift.NewSimpleJSONProtocolFactory()
    jsProt395 := factory394.GetProtocol(mbTrans392)
    argvalue0 := meta.NewListConfigsReq()
    err396 := argvalue0.Read(jsProt395)
    if err396 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListConfigs(value0))
    fmt.Print("\n")
    break
  case "createSnapshot":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateSnapshot requires 1 args")
      flag.Usage()
    }
    arg397 := flag.Arg(1)
    mbTrans398 := thrift.NewMemoryBufferLen(len(arg397))
    defer mbTrans398.Close()
    _, err399 := mbTrans398.WriteString(arg397)
    if err399 != nil {
      Usage()
      return
    }
    factory400 := thrift.NewSimpleJSONProtocolFactory()
    jsProt401 := factory400.GetProtocol(mbTrans398)
    argvalue0 := meta.NewCreateSnapshotReq()
    err402 := argvalue0.Read(jsProt401)
    if err402 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateSnapshot(value0))
    fmt.Print("\n")
    break
  case "dropSnapshot":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropSnapshot requires 1 args")
      flag.Usage()
    }
    arg403 := flag.Arg(1)
    mbTrans404 := thrift.NewMemoryBufferLen(len(arg403))
    defer mbTrans404.Close()
    _, err405 := mbTrans404.WriteString(arg403)
    if err405 != nil {
      Usage()
      return
    }
    factory406 := thrift.NewSimpleJSONProtocolFactory()
    jsProt407 := factory406.GetProtocol(mbTrans404)
    argvalue0 := meta.NewDropSnapshotReq()
    err408 := argvalue0.Read(jsProt407)
    if err408 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropSnapshot(value0))
    fmt.Print("\n")
    break
  case "listSnapshots":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListSnapshots requires 1 args")
      flag.Usage()
    }
    arg409 := flag.Arg(1)
    mbTrans410 := thrift.NewMemoryBufferLen(len(arg409))
    defer mbTrans410.Close()
    _, err411 := mbTrans410.WriteString(arg409)
    if err411 != nil {
      Usage()
      return
    }
    factory412 := thrift.NewSimpleJSONProtocolFactory()
    jsProt413 := factory412.GetProtocol(mbTrans410)
    argvalue0 := meta.NewListSnapshotsReq()
    err414 := argvalue0.Read(jsProt413)
    if err414 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListSnapshots(value0))
    fmt.Print("\n")
    break
  case "runAdminJob":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RunAdminJob requires 1 args")
      flag.Usage()
    }
    arg415 := flag.Arg(1)
    mbTrans416 := thrift.NewMemoryBufferLen(len(arg415))
    defer mbTrans416.Close()
    _, err417 := mbTrans416.WriteString(arg415)
    if err417 != nil {
      Usage()
      return
    }
    factory418 := thrift.NewSimpleJSONProtocolFactory()
    jsProt419 := factory418.GetProtocol(mbTrans416)
    argvalue0 := meta.NewAdminJobReq()
    err420 := argvalue0.Read(jsProt419)
    if err420 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RunAdminJob(value0))
    fmt.Print("\n")
    break
  case "addZone":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AddZone requires 1 args")
      flag.Usage()
    }
    arg421 := flag.Arg(1)
    mbTrans422 := thrift.NewMemoryBufferLen(len(arg421))
    defer mbTrans422.Close()
    _, err423 := mbTrans422.WriteString(arg421)
    if err423 != nil {
      Usage()
      return
    }
    factory424 := thrift.NewSimpleJSONProtocolFactory()
    jsProt425 := factory424.GetProtocol(mbTrans422)
    argvalue0 := meta.NewAddZoneReq()
    err426 := argvalue0.Read(jsProt425)
    if err426 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AddZone(value0))
    fmt.Print("\n")
    break
  case "dropZone":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropZone requires 1 args")
      flag.Usage()
    }
    arg427 := flag.Arg(1)
    mbTrans428 := thrift.NewMemoryBufferLen(len(arg427))
    defer mbTrans428.Close()
    _, err429 := mbTrans428.WriteString(arg427)
    if err429 != nil {
      Usage()
      return
    }
    factory430 := thrift.NewSimpleJSONProtocolFactory()
    jsProt431 := factory430.GetProtocol(mbTrans428)
    argvalue0 := meta.NewDropZoneReq()
    err432 := argvalue0.Read(jsProt431)
    if err432 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropZone(value0))
    fmt.Print("\n")
    break
  case "addHostIntoZone":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AddHostIntoZone requires 1 args")
      flag.Usage()
    }
    arg433 := flag.Arg(1)
    mbTrans434 := thrift.NewMemoryBufferLen(len(arg433))
    defer mbTrans434.Close()
    _, err435 := mbTrans434.WriteString(arg433)
    if err435 != nil {
      Usage()
      return
    }
    factory436 := thrift.NewSimpleJSONProtocolFactory()
    jsProt437 := factory436.GetProtocol(mbTrans434)
    argvalue0 := meta.NewAddHostIntoZoneReq()
    err438 := argvalue0.Read(jsProt437)
    if err438 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AddHostIntoZone(value0))
    fmt.Print("\n")
    break
  case "dropHostFromZone":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropHostFromZone requires 1 args")
      flag.Usage()
    }
    arg439 := flag.Arg(1)
    mbTrans440 := thrift.NewMemoryBufferLen(len(arg439))
    defer mbTrans440.Close()
    _, err441 := mbTrans440.WriteString(arg439)
    if err441 != nil {
      Usage()
      return
    }
    factory442 := thrift.NewSimpleJSONProtocolFactory()
    jsProt443 := factory442.GetProtocol(mbTrans440)
    argvalue0 := meta.NewDropHostFromZoneReq()
    err444 := argvalue0.Read(jsProt443)
    if err444 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropHostFromZone(value0))
    fmt.Print("\n")
    break
  case "getZone":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetZone requires 1 args")
      flag.Usage()
    }
    arg445 := flag.Arg(1)
    mbTrans446 := thrift.NewMemoryBufferLen(len(arg445))
    defer mbTrans446.Close()
    _, err447 := mbTrans446.WriteString(arg445)
    if err447 != nil {
      Usage()
      return
    }
    factory448 := thrift.NewSimpleJSONProtocolFactory()
    jsProt449 := factory448.GetProtocol(mbTrans446)
    argvalue0 := meta.NewGetZoneReq()
    err450 := argvalue0.Read(jsProt449)
    if err450 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetZone(value0))
    fmt.Print("\n")
    break
  case "listZones":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListZones requires 1 args")
      flag.Usage()
    }
    arg451 := flag.Arg(1)
    mbTrans452 := thrift.NewMemoryBufferLen(len(arg451))
    defer mbTrans452.Close()
    _, err453 := mbTrans452.WriteString(arg451)
    if err453 != nil {
      Usage()
      return
    }
    factory454 := thrift.NewSimpleJSONProtocolFactory()
    jsProt455 := factory454.GetProtocol(mbTrans452)
    argvalue0 := meta.NewListZonesReq()
    err456 := argvalue0.Read(jsProt455)
    if err456 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListZones(value0))
    fmt.Print("\n")
    break
  case "addGroup":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AddGroup requires 1 args")
      flag.Usage()
    }
    arg457 := flag.Arg(1)
    mbTrans458 := thrift.NewMemoryBufferLen(len(arg457))
    defer mbTrans458.Close()
    _, err459 := mbTrans458.WriteString(arg457)
    if err459 != nil {
      Usage()
      return
    }
    factory460 := thrift.NewSimpleJSONProtocolFactory()
    jsProt461 := factory460.GetProtocol(mbTrans458)
    argvalue0 := meta.NewAddGroupReq()
    err462 := argvalue0.Read(jsProt461)
    if err462 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AddGroup(value0))
    fmt.Print("\n")
    break
  case "dropGroup":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropGroup requires 1 args")
      flag.Usage()
    }
    arg463 := flag.Arg(1)
    mbTrans464 := thrift.NewMemoryBufferLen(len(arg463))
    defer mbTrans464.Close()
    _, err465 := mbTrans464.WriteString(arg463)
    if err465 != nil {
      Usage()
      return
    }
    factory466 := thrift.NewSimpleJSONProtocolFactory()
    jsProt467 := factory466.GetProtocol(mbTrans464)
    argvalue0 := meta.NewDropGroupReq()
    err468 := argvalue0.Read(jsProt467)
    if err468 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropGroup(value0))
    fmt.Print("\n")
    break
  case "addZoneIntoGroup":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AddZoneIntoGroup requires 1 args")
      flag.Usage()
    }
    arg469 := flag.Arg(1)
    mbTrans470 := thrift.NewMemoryBufferLen(len(arg469))
    defer mbTrans470.Close()
    _, err471 := mbTrans470.WriteString(arg469)
    if err471 != nil {
      Usage()
      return
    }
    factory472 := thrift.NewSimpleJSONProtocolFactory()
    jsProt473 := factory472.GetProtocol(mbTrans470)
    argvalue0 := meta.NewAddZoneIntoGroupReq()
    err474 := argvalue0.Read(jsProt473)
    if err474 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AddZoneIntoGroup(value0))
    fmt.Print("\n")
    break
  case "dropZoneFromGroup":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropZoneFromGroup requires 1 args")
      flag.Usage()
    }
    arg475 := flag.Arg(1)
    mbTrans476 := thrift.NewMemoryBufferLen(len(arg475))
    defer mbTrans476.Close()
    _, err477 := mbTrans476.WriteString(arg475)
    if err477 != nil {
      Usage()
      return
    }
    factory478 := thrift.NewSimpleJSONProtocolFactory()
    jsProt479 := factory478.GetProtocol(mbTrans476)
    argvalue0 := meta.NewDropZoneFromGroupReq()
    err480 := argvalue0.Read(jsProt479)
    if err480 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropZoneFromGroup(value0))
    fmt.Print("\n")
    break
  case "getGroup":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetGroup requires 1 args")
      flag.Usage()
    }
    arg481 := flag.Arg(1)
    mbTrans482 := thrift.NewMemoryBufferLen(len(arg481))
    defer mbTrans482.Close()
    _, err483 := mbTrans482.WriteString(arg481)
    if err483 != nil {
      Usage()
      return
    }
    factory484 := thrift.NewSimpleJSONProtocolFactory()
    jsProt485 := factory484.GetProtocol(mbTrans482)
    argvalue0 := meta.NewGetGroupReq()
    err486 := argvalue0.Read(jsProt485)
    if err486 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetGroup(value0))
    fmt.Print("\n")
    break
  case "listGroups":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListGroups requires 1 args")
      flag.Usage()
    }
    arg487 := flag.Arg(1)
    mbTrans488 := thrift.NewMemoryBufferLen(len(arg487))
    defer mbTrans488.Close()
    _, err489 := mbTrans488.WriteString(arg487)
    if err489 != nil {
      Usage()
      return
    }
    factory490 := thrift.NewSimpleJSONProtocolFactory()
    jsProt491 := factory490.GetProtocol(mbTrans488)
    argvalue0 := meta.NewListGroupsReq()
    err492 := argvalue0.Read(jsProt491)
    if err492 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListGroups(value0))
    fmt.Print("\n")
    break
  case "createBackup":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateBackup requires 1 args")
      flag.Usage()
    }
    arg493 := flag.Arg(1)
    mbTrans494 := thrift.NewMemoryBufferLen(len(arg493))
    defer mbTrans494.Close()
    _, err495 := mbTrans494.WriteString(arg493)
    if err495 != nil {
      Usage()
      return
    }
    factory496 := thrift.NewSimpleJSONProtocolFactory()
    jsProt497 := factory496.GetProtocol(mbTrans494)
    argvalue0 := meta.NewCreateBackupReq()
    err498 := argvalue0.Read(jsProt497)
    if err498 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateBackup(value0))
    fmt.Print("\n")
    break
  case "restoreMeta":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RestoreMeta requires 1 args")
      flag.Usage()
    }
    arg499 := flag.Arg(1)
    mbTrans500 := thrift.NewMemoryBufferLen(len(arg499))
    defer mbTrans500.Close()
    _, err501 := mbTrans500.WriteString(arg499)
    if err501 != nil {
      Usage()
      return
    }
    factory502 := thrift.NewSimpleJSONProtocolFactory()
    jsProt503 := factory502.GetProtocol(mbTrans500)
    argvalue0 := meta.NewRestoreMetaReq()
    err504 := argvalue0.Read(jsProt503)
    if err504 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RestoreMeta(value0))
    fmt.Print("\n")
    break
  case "addListener":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AddListener requires 1 args")
      flag.Usage()
    }
    arg505 := flag.Arg(1)
    mbTrans506 := thrift.NewMemoryBufferLen(len(arg505))
    defer mbTrans506.Close()
    _, err507 := mbTrans506.WriteString(arg505)
    if err507 != nil {
      Usage()
      return
    }
    factory508 := thrift.NewSimpleJSONProtocolFactory()
    jsProt509 := factory508.GetProtocol(mbTrans506)
    argvalue0 := meta.NewAddListenerReq()
    err510 := argvalue0.Read(jsProt509)
    if err510 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AddListener(value0))
    fmt.Print("\n")
    break
  case "removeListener":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RemoveListener requires 1 args")
      flag.Usage()
    }
    arg511 := flag.Arg(1)
    mbTrans512 := thrift.NewMemoryBufferLen(len(arg511))
    defer mbTrans512.Close()
    _, err513 := mbTrans512.WriteString(arg511)
    if err513 != nil {
      Usage()
      return
    }
    factory514 := thrift.NewSimpleJSONProtocolFactory()
    jsProt515 := factory514.GetProtocol(mbTrans512)
    argvalue0 := meta.NewRemoveListenerReq()
    err516 := argvalue0.Read(jsProt515)
    if err516 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RemoveListener(value0))
    fmt.Print("\n")
    break
  case "listListener":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListListener requires 1 args")
      flag.Usage()
    }
    arg517 := flag.Arg(1)
    mbTrans518 := thrift.NewMemoryBufferLen(len(arg517))
    defer mbTrans518.Close()
    _, err519 := mbTrans518.WriteString(arg517)
    if err519 != nil {
      Usage()
      return
    }
    factory520 := thrift.NewSimpleJSONProtocolFactory()
    jsProt521 := factory520.GetProtocol(mbTrans518)
    argvalue0 := meta.NewListListenerReq()
    err522 := argvalue0.Read(jsProt521)
    if err522 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListListener(value0))
    fmt.Print("\n")
    break
  case "getStats":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetStats requires 1 args")
      flag.Usage()
    }
    arg523 := flag.Arg(1)
    mbTrans524 := thrift.NewMemoryBufferLen(len(arg523))
    defer mbTrans524.Close()
    _, err525 := mbTrans524.WriteString(arg523)
    if err525 != nil {
      Usage()
      return
    }
    factory526 := thrift.NewSimpleJSONProtocolFactory()
    jsProt527 := factory526.GetProtocol(mbTrans524)
    argvalue0 := meta.NewGetStatsReq()
    err528 := argvalue0.Read(jsProt527)
    if err528 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetStats(value0))
    fmt.Print("\n")
    break
  case "signInFTService":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "SignInFTService requires 1 args")
      flag.Usage()
    }
    arg529 := flag.Arg(1)
    mbTrans530 := thrift.NewMemoryBufferLen(len(arg529))
    defer mbTrans530.Close()
    _, err531 := mbTrans530.WriteString(arg529)
    if err531 != nil {
      Usage()
      return
    }
    factory532 := thrift.NewSimpleJSONProtocolFactory()
    jsProt533 := factory532.GetProtocol(mbTrans530)
    argvalue0 := meta.NewSignInFTServiceReq()
    err534 := argvalue0.Read(jsProt533)
    if err534 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.SignInFTService(value0))
    fmt.Print("\n")
    break
  case "signOutFTService":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "SignOutFTService requires 1 args")
      flag.Usage()
    }
    arg535 := flag.Arg(1)
    mbTrans536 := thrift.NewMemoryBufferLen(len(arg535))
    defer mbTrans536.Close()
    _, err537 := mbTrans536.WriteString(arg535)
    if err537 != nil {
      Usage()
      return
    }
    factory538 := thrift.NewSimpleJSONProtocolFactory()
    jsProt539 := factory538.GetProtocol(mbTrans536)
    argvalue0 := meta.NewSignOutFTServiceReq()
    err540 := argvalue0.Read(jsProt539)
    if err540 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.SignOutFTService(value0))
    fmt.Print("\n")
    break
  case "listFTClients":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListFTClients requires 1 args")
      flag.Usage()
    }
    arg541 := flag.Arg(1)
    mbTrans542 := thrift.NewMemoryBufferLen(len(arg541))
    defer mbTrans542.Close()
    _, err543 := mbTrans542.WriteString(arg541)
    if err543 != nil {
      Usage()
      return
    }
    factory544 := thrift.NewSimpleJSONProtocolFactory()
    jsProt545 := factory544.GetProtocol(mbTrans542)
    argvalue0 := meta.NewListFTClientsReq()
    err546 := argvalue0.Read(jsProt545)
    if err546 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListFTClients(value0))
    fmt.Print("\n")
    break
  case "createFTIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateFTIndex requires 1 args")
      flag.Usage()
    }
    arg547 := flag.Arg(1)
    mbTrans548 := thrift.NewMemoryBufferLen(len(arg547))
    defer mbTrans548.Close()
    _, err549 := mbTrans548.WriteString(arg547)
    if err549 != nil {
      Usage()
      return
    }
    factory550 := thrift.NewSimpleJSONProtocolFactory()
    jsProt551 := factory550.GetProtocol(mbTrans548)
    argvalue0 := meta.NewCreateFTIndexReq()
    err552 := argvalue0.Read(jsProt551)
    if err552 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateFTIndex(value0))
    fmt.Print("\n")
    break
  case "dropFTIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropFTIndex requires 1 args")
      flag.Usage()
    }
    arg553 := flag.Arg(1)
    mbTrans554 := thrift.NewMemoryBufferLen(len(arg553))
    defer mbTrans554.Close()
    _, err555 := mbTrans554.WriteString(arg553)
    if err555 != nil {
      Usage()
      return
    }
    factory556 := thrift.NewSimpleJSONProtocolFactory()
    jsProt557 := factory556.GetProtocol(mbTrans554)
    argvalue0 := meta.NewDropFTIndexReq()
    err558 := argvalue0.Read(jsProt557)
    if err558 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropFTIndex(value0))
    fmt.Print("\n")
    break
  case "listFTIndexes":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListFTIndexes requires 1 args")
      flag.Usage()
    }
    arg559 := flag.Arg(1)
    mbTrans560 := thrift.NewMemoryBufferLen(len(arg559))
    defer mbTrans560.Close()
    _, err561 := mbTrans560.WriteString(arg559)
    if err561 != nil {
      Usage()
      return
    }
    factory562 := thrift.NewSimpleJSONProtocolFactory()
    jsProt563 := factory562.GetProtocol(mbTrans560)
    argvalue0 := meta.NewListFTIndexesReq()
    err564 := argvalue0.Read(jsProt563)
    if err564 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListFTIndexes(value0))
    fmt.Print("\n")
    break
  case "createSession":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateSession requires 1 args")
      flag.Usage()
    }
    arg565 := flag.Arg(1)
    mbTrans566 := thrift.NewMemoryBufferLen(len(arg565))
    defer mbTrans566.Close()
    _, err567 := mbTrans566.WriteString(arg565)
    if err567 != nil {
      Usage()
      return
    }
    factory568 := thrift.NewSimpleJSONProtocolFactory()
    jsProt569 := factory568.GetProtocol(mbTrans566)
    argvalue0 := meta.NewCreateSessionReq()
    err570 := argvalue0.Read(jsProt569)
    if err570 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateSession(value0))
    fmt.Print("\n")
    break
  case "updateSessions":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "UpdateSessions requires 1 args")
      flag.Usage()
    }
    arg571 := flag.Arg(1)
    mbTrans572 := thrift.NewMemoryBufferLen(len(arg571))
    defer mbTrans572.Close()
    _, err573 := mbTrans572.WriteString(arg571)
    if err573 != nil {
      Usage()
      return
    }
    factory574 := thrift.NewSimpleJSONProtocolFactory()
    jsProt575 := factory574.GetProtocol(mbTrans572)
    argvalue0 := meta.NewUpdateSessionsReq()
    err576 := argvalue0.Read(jsProt575)
    if err576 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.UpdateSessions(value0))
    fmt.Print("\n")
    break
  case "listSessions":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListSessions requires 1 args")
      flag.Usage()
    }
    arg577 := flag.Arg(1)
    mbTrans578 := thrift.NewMemoryBufferLen(len(arg577))
    defer mbTrans578.Close()
    _, err579 := mbTrans578.WriteString(arg577)
    if err579 != nil {
      Usage()
      return
    }
    factory580 := thrift.NewSimpleJSONProtocolFactory()
    jsProt581 := factory580.GetProtocol(mbTrans578)
    argvalue0 := meta.NewListSessionsReq()
    err582 := argvalue0.Read(jsProt581)
    if err582 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListSessions(value0))
    fmt.Print("\n")
    break
  case "getSession":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetSession requires 1 args")
      flag.Usage()
    }
    arg583 := flag.Arg(1)
    mbTrans584 := thrift.NewMemoryBufferLen(len(arg583))
    defer mbTrans584.Close()
    _, err585 := mbTrans584.WriteString(arg583)
    if err585 != nil {
      Usage()
      return
    }
    factory586 := thrift.NewSimpleJSONProtocolFactory()
    jsProt587 := factory586.GetProtocol(mbTrans584)
    argvalue0 := meta.NewGetSessionReq()
    err588 := argvalue0.Read(jsProt587)
    if err588 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetSession(value0))
    fmt.Print("\n")
    break
  case "removeSession":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RemoveSession requires 1 args")
      flag.Usage()
    }
    arg589 := flag.Arg(1)
    mbTrans590 := thrift.NewMemoryBufferLen(len(arg589))
    defer mbTrans590.Close()
    _, err591 := mbTrans590.WriteString(arg589)
    if err591 != nil {
      Usage()
      return
    }
    factory592 := thrift.NewSimpleJSONProtocolFactory()
    jsProt593 := factory592.GetProtocol(mbTrans590)
    argvalue0 := meta.NewRemoveSessionReq()
    err594 := argvalue0.Read(jsProt593)
    if err594 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RemoveSession(value0))
    fmt.Print("\n")
    break
  case "killQuery":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "KillQuery requires 1 args")
      flag.Usage()
    }
    arg595 := flag.Arg(1)
    mbTrans596 := thrift.NewMemoryBufferLen(len(arg595))
    defer mbTrans596.Close()
    _, err597 := mbTrans596.WriteString(arg595)
    if err597 != nil {
      Usage()
      return
    }
    factory598 := thrift.NewSimpleJSONProtocolFactory()
    jsProt599 := factory598.GetProtocol(mbTrans596)
    argvalue0 := meta.NewKillQueryReq()
    err600 := argvalue0.Read(jsProt599)
    if err600 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.KillQuery(value0))
    fmt.Print("\n")
    break
  case "reportTaskFinish":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ReportTaskFinish requires 1 args")
      flag.Usage()
    }
    arg601 := flag.Arg(1)
    mbTrans602 := thrift.NewMemoryBufferLen(len(arg601))
    defer mbTrans602.Close()
    _, err603 := mbTrans602.WriteString(arg601)
    if err603 != nil {
      Usage()
      return
    }
    factory604 := thrift.NewSimpleJSONProtocolFactory()
    jsProt605 := factory604.GetProtocol(mbTrans602)
    argvalue0 := meta.NewReportTaskReq()
    err606 := argvalue0.Read(jsProt605)
    if err606 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ReportTaskFinish(value0))
    fmt.Print("\n")
    break
  case "listCluster":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListCluster requires 1 args")
      flag.Usage()
    }
    arg607 := flag.Arg(1)
    mbTrans608 := thrift.NewMemoryBufferLen(len(arg607))
    defer mbTrans608.Close()
    _, err609 := mbTrans608.WriteString(arg607)
    if err609 != nil {
      Usage()
      return
    }
    factory610 := thrift.NewSimpleJSONProtocolFactory()
    jsProt611 := factory610.GetProtocol(mbTrans608)
    argvalue0 := meta.NewListClusterInfoReq()
    err612 := argvalue0.Read(jsProt611)
    if err612 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListCluster(value0))
    fmt.Print("\n")
    break
  case "getMetaDirInfo":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetMetaDirInfo requires 1 args")
      flag.Usage()
    }
    arg613 := flag.Arg(1)
    mbTrans614 := thrift.NewMemoryBufferLen(len(arg613))
    defer mbTrans614.Close()
    _, err615 := mbTrans614.WriteString(arg613)
    if err615 != nil {
      Usage()
      return
    }
    factory616 := thrift.NewSimpleJSONProtocolFactory()
    jsProt617 := factory616.GetProtocol(mbTrans614)
    argvalue0 := meta.NewGetMetaDirInfoReq()
    err618 := argvalue0.Read(jsProt617)
    if err618 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetMetaDirInfo(value0))
    fmt.Print("\n")
    break
  case "verifyClientVersion":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "VerifyClientVersion requires 1 args")
      flag.Usage()
    }
    arg619 := flag.Arg(1)
    mbTrans620 := thrift.NewMemoryBufferLen(len(arg619))
    defer mbTrans620.Close()
    _, err621 := mbTrans620.WriteString(arg619)
    if err621 != nil {
      Usage()
      return
    }
    factory622 := thrift.NewSimpleJSONProtocolFactory()
    jsProt623 := factory622.GetProtocol(mbTrans620)
    argvalue0 := meta.NewVerifyClientVersionReq()
    err624 := argvalue0.Read(jsProt623)
    if err624 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.VerifyClientVersion(value0))
    fmt.Print("\n")
    break
  case "":
    Usage()
    break
  default:
    fmt.Fprintln(os.Stderr, "Invalid function ", cmd)
  }
}
