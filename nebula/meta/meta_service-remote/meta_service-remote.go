// Autogenerated by Thrift Compiler (facebook)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
// @generated

package main

import (
        "flag"
        "fmt"
        "math"
        "net"
        "net/url"
        "os"
        "strconv"
        "strings"
        thrift "github.com/facebook/fbthrift/thrift/lib/go/thrift"
        "../../github.com/vesoft-inc/nebula-go/v2/nebula/meta"
)

func Usage() {
  fmt.Fprintln(os.Stderr, "Usage of ", os.Args[0], " [-h host:port] [-u url] [-f[ramed]] function [arg1 [arg2...]]:")
  flag.PrintDefaults()
  fmt.Fprintln(os.Stderr, "\nFunctions:")
  fmt.Fprintln(os.Stderr, "  ExecResp createSpace(CreateSpaceReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropSpace(DropSpaceReq req)")
  fmt.Fprintln(os.Stderr, "  GetSpaceResp getSpace(GetSpaceReq req)")
  fmt.Fprintln(os.Stderr, "  ListSpacesResp listSpaces(ListSpacesReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createSpaceAs(CreateSpaceAsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createTag(CreateTagReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp alterTag(AlterTagReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropTag(DropTagReq req)")
  fmt.Fprintln(os.Stderr, "  GetTagResp getTag(GetTagReq req)")
  fmt.Fprintln(os.Stderr, "  ListTagsResp listTags(ListTagsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createEdge(CreateEdgeReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp alterEdge(AlterEdgeReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropEdge(DropEdgeReq req)")
  fmt.Fprintln(os.Stderr, "  GetEdgeResp getEdge(GetEdgeReq req)")
  fmt.Fprintln(os.Stderr, "  ListEdgesResp listEdges(ListEdgesReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp addHosts(AddHostsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp addHostsIntoZone(AddHostsIntoZoneReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropHosts(DropHostsReq req)")
  fmt.Fprintln(os.Stderr, "  ListHostsResp listHosts(ListHostsReq req)")
  fmt.Fprintln(os.Stderr, "  GetPartsAllocResp getPartsAlloc(GetPartsAllocReq req)")
  fmt.Fprintln(os.Stderr, "  ListPartsResp listParts(ListPartsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp multiPut(MultiPutReq req)")
  fmt.Fprintln(os.Stderr, "  GetResp get(GetReq req)")
  fmt.Fprintln(os.Stderr, "  MultiGetResp multiGet(MultiGetReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp remove(RemoveReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp removeRange(RemoveRangeReq req)")
  fmt.Fprintln(os.Stderr, "  ScanResp scan(ScanReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createTagIndex(CreateTagIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropTagIndex(DropTagIndexReq req)")
  fmt.Fprintln(os.Stderr, "  GetTagIndexResp getTagIndex(GetTagIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ListTagIndexesResp listTagIndexes(ListTagIndexesReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp rebuildTagIndex(RebuildIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ListIndexStatusResp listTagIndexStatus(ListIndexStatusReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createEdgeIndex(CreateEdgeIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropEdgeIndex(DropEdgeIndexReq req)")
  fmt.Fprintln(os.Stderr, "  GetEdgeIndexResp getEdgeIndex(GetEdgeIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ListEdgeIndexesResp listEdgeIndexes(ListEdgeIndexesReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp rebuildEdgeIndex(RebuildIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ListIndexStatusResp listEdgeIndexStatus(ListIndexStatusReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createUser(CreateUserReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropUser(DropUserReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp alterUser(AlterUserReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp grantRole(GrantRoleReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp revokeRole(RevokeRoleReq req)")
  fmt.Fprintln(os.Stderr, "  ListUsersResp listUsers(ListUsersReq req)")
  fmt.Fprintln(os.Stderr, "  ListRolesResp listRoles(ListRolesReq req)")
  fmt.Fprintln(os.Stderr, "  ListRolesResp getUserRoles(GetUserRolesReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp changePassword(ChangePasswordReq req)")
  fmt.Fprintln(os.Stderr, "  HBResp heartBeat(HBReq req)")
  fmt.Fprintln(os.Stderr, "  AgentHBResp agentHeartbeat(AgentHBReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp regConfig(RegConfigReq req)")
  fmt.Fprintln(os.Stderr, "  GetConfigResp getConfig(GetConfigReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp setConfig(SetConfigReq req)")
  fmt.Fprintln(os.Stderr, "  ListConfigsResp listConfigs(ListConfigsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createSnapshot(CreateSnapshotReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropSnapshot(DropSnapshotReq req)")
  fmt.Fprintln(os.Stderr, "  ListSnapshotsResp listSnapshots(ListSnapshotsReq req)")
  fmt.Fprintln(os.Stderr, "  AdminJobResp runAdminJob(AdminJobReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp mergeZone(MergeZoneReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropZone(DropZoneReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp splitZone(SplitZoneReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp renameZone(RenameZoneReq req)")
  fmt.Fprintln(os.Stderr, "  GetZoneResp getZone(GetZoneReq req)")
  fmt.Fprintln(os.Stderr, "  ListZonesResp listZones(ListZonesReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp addListener(AddListenerReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp removeListener(RemoveListenerReq req)")
  fmt.Fprintln(os.Stderr, "  ListListenerResp listListener(ListListenerReq req)")
  fmt.Fprintln(os.Stderr, "  GetStatsResp getStats(GetStatsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp signInFTService(SignInFTServiceReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp signOutFTService(SignOutFTServiceReq req)")
  fmt.Fprintln(os.Stderr, "  ListFTClientsResp listFTClients(ListFTClientsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createFTIndex(CreateFTIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropFTIndex(DropFTIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ListFTIndexesResp listFTIndexes(ListFTIndexesReq req)")
  fmt.Fprintln(os.Stderr, "  CreateSessionResp createSession(CreateSessionReq req)")
  fmt.Fprintln(os.Stderr, "  UpdateSessionsResp updateSessions(UpdateSessionsReq req)")
  fmt.Fprintln(os.Stderr, "  ListSessionsResp listSessions(ListSessionsReq req)")
  fmt.Fprintln(os.Stderr, "  GetSessionResp getSession(GetSessionReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp removeSession(RemoveSessionReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp killQuery(KillQueryReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp reportTaskFinish(ReportTaskReq req)")
  fmt.Fprintln(os.Stderr, "  CreateBackupResp createBackup(CreateBackupReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp restoreMeta(RestoreMetaReq req)")
  fmt.Fprintln(os.Stderr, "  ListClusterInfoResp listCluster(ListClusterInfoReq req)")
  fmt.Fprintln(os.Stderr, "  GetMetaDirInfoResp getMetaDirInfo(GetMetaDirInfoReq req)")
  fmt.Fprintln(os.Stderr, "  VerifyClientVersionResp verifyClientVersion(VerifyClientVersionReq req)")
  fmt.Fprintln(os.Stderr)
  os.Exit(0)
}

func main() {
  flag.Usage = Usage
  var host string
  var port int
  var protocol string
  var urlString string
  var framed bool
  var useHttp bool
  var parsedUrl url.URL
  var trans thrift.Transport
  _ = strconv.Atoi
  _ = math.Abs
  flag.Usage = Usage
  flag.StringVar(&host, "h", "localhost", "Specify host")
  flag.IntVar(&port, "p", 9090, "Specify port")
  flag.StringVar(&protocol, "P", "binary", "Specify the protocol (binary, compact, simplejson, json)")
  flag.StringVar(&urlString, "u", "", "Specify the url")
  flag.BoolVar(&framed, "framed", false, "Use framed transport")
  flag.BoolVar(&useHttp, "http", false, "Use http")
  flag.Parse()
  
  if len(urlString) > 0 {
    parsedUrl, err := url.Parse(urlString)
    if err != nil {
      fmt.Fprintln(os.Stderr, "Error parsing URL: ", err)
      flag.Usage()
    }
    host = parsedUrl.Host
    useHttp = len(parsedUrl.Scheme) <= 0 || parsedUrl.Scheme == "http"
  } else if useHttp {
    _, err := url.Parse(fmt.Sprint("http://", host, ":", port))
    if err != nil {
      fmt.Fprintln(os.Stderr, "Error parsing URL: ", err)
      flag.Usage()
    }
  }
  
  cmd := flag.Arg(0)
  var err error
  if useHttp {
    trans, err = thrift.NewHTTPPostClient(parsedUrl.String())
  } else {
    portStr := fmt.Sprint(port)
    if strings.Contains(host, ":") {
           host, portStr, err = net.SplitHostPort(host)
           if err != nil {
                   fmt.Fprintln(os.Stderr, "error with host:", err)
                   os.Exit(1)
           }
    }
    trans, err = thrift.NewSocket(thrift.SocketAddr(net.JoinHostPort(host, portStr)))
    if err != nil {
      fmt.Fprintln(os.Stderr, "error resolving address:", err)
      os.Exit(1)
    }
    if framed {
      trans = thrift.NewFramedTransport(trans)
    }
  }
  if err != nil {
    fmt.Fprintln(os.Stderr, "Error creating transport", err)
    os.Exit(1)
  }
  defer trans.Close()
  var protocolFactory thrift.ProtocolFactory
  switch protocol {
  case "compact":
    protocolFactory = thrift.NewCompactProtocolFactory()
    break
  case "simplejson":
    protocolFactory = thrift.NewSimpleJSONProtocolFactory()
    break
  case "json":
    protocolFactory = thrift.NewJSONProtocolFactory()
    break
  case "binary", "":
    protocolFactory = thrift.NewBinaryProtocolFactoryDefault()
    break
  default:
    fmt.Fprintln(os.Stderr, "Invalid protocol specified: ", protocol)
    Usage()
    os.Exit(1)
  }
  client := meta.NewMetaServiceClientFactory(trans, protocolFactory)
  if err := trans.Open(); err != nil {
    fmt.Fprintln(os.Stderr, "Error opening socket to ", host, ":", port, " ", err)
    os.Exit(1)
  }
  
  switch cmd {
  case "createSpace":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateSpace requires 1 args")
      flag.Usage()
    }
    arg104 := flag.Arg(1)
    mbTrans105 := thrift.NewMemoryBufferLen(len(arg104))
    defer mbTrans105.Close()
    _, err106 := mbTrans105.WriteString(arg104)
    if err106 != nil {
      Usage()
      return
    }
    factory107 := thrift.NewSimpleJSONProtocolFactory()
    jsProt108 := factory107.GetProtocol(mbTrans105)
    argvalue0 := meta.NewCreateSpaceReq()
    err109 := argvalue0.Read(jsProt108)
    if err109 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateSpace(value0))
    fmt.Print("\n")
    break
  case "dropSpace":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropSpace requires 1 args")
      flag.Usage()
    }
    arg114 := flag.Arg(1)
    mbTrans115 := thrift.NewMemoryBufferLen(len(arg114))
    defer mbTrans115.Close()
    _, err116 := mbTrans115.WriteString(arg114)
    if err116 != nil {
      Usage()
      return
    }
    factory113 := thrift.NewSimpleJSONProtocolFactory()
    jsProt114 := factory113.GetProtocol(mbTrans111)
    argvalue0 := meta.NewDropSpaceReq()
    err115 := argvalue0.Read(jsProt114)
    if err115 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropSpace(value0))
    fmt.Print("\n")
    break
  case "getSpace":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetSpace requires 1 args")
      flag.Usage()
    }
    arg120 := flag.Arg(1)
    mbTrans121 := thrift.NewMemoryBufferLen(len(arg120))
    defer mbTrans121.Close()
    _, err122 := mbTrans121.WriteString(arg120)
    if err122 != nil {
      Usage()
      return
    }
    factory119 := thrift.NewSimpleJSONProtocolFactory()
    jsProt120 := factory119.GetProtocol(mbTrans117)
    argvalue0 := meta.NewGetSpaceReq()
    err121 := argvalue0.Read(jsProt120)
    if err121 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetSpace(value0))
    fmt.Print("\n")
    break
  case "listSpaces":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListSpaces requires 1 args")
      flag.Usage()
    }
    arg126 := flag.Arg(1)
    mbTrans127 := thrift.NewMemoryBufferLen(len(arg126))
    defer mbTrans127.Close()
    _, err128 := mbTrans127.WriteString(arg126)
    if err128 != nil {
      Usage()
      return
    }
    factory125 := thrift.NewSimpleJSONProtocolFactory()
    jsProt126 := factory125.GetProtocol(mbTrans123)
    argvalue0 := meta.NewListSpacesReq()
    err127 := argvalue0.Read(jsProt126)
    if err127 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListSpaces(value0))
    fmt.Print("\n")
    break
  case "createSpaceAs":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateSpaceAs requires 1 args")
      flag.Usage()
    }
    arg132 := flag.Arg(1)
    mbTrans133 := thrift.NewMemoryBufferLen(len(arg132))
    defer mbTrans133.Close()
    _, err134 := mbTrans133.WriteString(arg132)
    if err134 != nil {
      Usage()
      return
    }
    factory131 := thrift.NewSimpleJSONProtocolFactory()
    jsProt132 := factory131.GetProtocol(mbTrans129)
    argvalue0 := meta.NewCreateSpaceAsReq()
    err133 := argvalue0.Read(jsProt132)
    if err133 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateSpaceAs(value0))
    fmt.Print("\n")
    break
  case "createTag":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateTag requires 1 args")
      flag.Usage()
    }
    arg138 := flag.Arg(1)
    mbTrans139 := thrift.NewMemoryBufferLen(len(arg138))
    defer mbTrans139.Close()
    _, err140 := mbTrans139.WriteString(arg138)
    if err140 != nil {
      Usage()
      return
    }
    factory137 := thrift.NewSimpleJSONProtocolFactory()
    jsProt138 := factory137.GetProtocol(mbTrans135)
    argvalue0 := meta.NewCreateTagReq()
    err139 := argvalue0.Read(jsProt138)
    if err139 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateTag(value0))
    fmt.Print("\n")
    break
  case "alterTag":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AlterTag requires 1 args")
      flag.Usage()
    }
    arg144 := flag.Arg(1)
    mbTrans145 := thrift.NewMemoryBufferLen(len(arg144))
    defer mbTrans145.Close()
    _, err146 := mbTrans145.WriteString(arg144)
    if err146 != nil {
      Usage()
      return
    }
    factory143 := thrift.NewSimpleJSONProtocolFactory()
    jsProt144 := factory143.GetProtocol(mbTrans141)
    argvalue0 := meta.NewAlterTagReq()
    err145 := argvalue0.Read(jsProt144)
    if err145 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AlterTag(value0))
    fmt.Print("\n")
    break
  case "dropTag":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropTag requires 1 args")
      flag.Usage()
    }
    arg150 := flag.Arg(1)
    mbTrans151 := thrift.NewMemoryBufferLen(len(arg150))
    defer mbTrans151.Close()
    _, err152 := mbTrans151.WriteString(arg150)
    if err152 != nil {
      Usage()
      return
    }
    factory149 := thrift.NewSimpleJSONProtocolFactory()
    jsProt150 := factory149.GetProtocol(mbTrans147)
    argvalue0 := meta.NewDropTagReq()
    err151 := argvalue0.Read(jsProt150)
    if err151 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropTag(value0))
    fmt.Print("\n")
    break
  case "getTag":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetTag requires 1 args")
      flag.Usage()
    }
    arg156 := flag.Arg(1)
    mbTrans157 := thrift.NewMemoryBufferLen(len(arg156))
    defer mbTrans157.Close()
    _, err158 := mbTrans157.WriteString(arg156)
    if err158 != nil {
      Usage()
      return
    }
    factory155 := thrift.NewSimpleJSONProtocolFactory()
    jsProt156 := factory155.GetProtocol(mbTrans153)
    argvalue0 := meta.NewGetTagReq()
    err157 := argvalue0.Read(jsProt156)
    if err157 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetTag(value0))
    fmt.Print("\n")
    break
  case "listTags":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListTags requires 1 args")
      flag.Usage()
    }
    arg162 := flag.Arg(1)
    mbTrans163 := thrift.NewMemoryBufferLen(len(arg162))
    defer mbTrans163.Close()
    _, err164 := mbTrans163.WriteString(arg162)
    if err164 != nil {
      Usage()
      return
    }
    factory161 := thrift.NewSimpleJSONProtocolFactory()
    jsProt162 := factory161.GetProtocol(mbTrans159)
    argvalue0 := meta.NewListTagsReq()
    err163 := argvalue0.Read(jsProt162)
    if err163 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListTags(value0))
    fmt.Print("\n")
    break
  case "createEdge":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateEdge requires 1 args")
      flag.Usage()
    }
    arg168 := flag.Arg(1)
    mbTrans169 := thrift.NewMemoryBufferLen(len(arg168))
    defer mbTrans169.Close()
    _, err170 := mbTrans169.WriteString(arg168)
    if err170 != nil {
      Usage()
      return
    }
    factory167 := thrift.NewSimpleJSONProtocolFactory()
    jsProt168 := factory167.GetProtocol(mbTrans165)
    argvalue0 := meta.NewCreateEdgeReq()
    err169 := argvalue0.Read(jsProt168)
    if err169 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateEdge(value0))
    fmt.Print("\n")
    break
  case "alterEdge":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AlterEdge requires 1 args")
      flag.Usage()
    }
    arg174 := flag.Arg(1)
    mbTrans175 := thrift.NewMemoryBufferLen(len(arg174))
    defer mbTrans175.Close()
    _, err176 := mbTrans175.WriteString(arg174)
    if err176 != nil {
      Usage()
      return
    }
    factory173 := thrift.NewSimpleJSONProtocolFactory()
    jsProt174 := factory173.GetProtocol(mbTrans171)
    argvalue0 := meta.NewAlterEdgeReq()
    err175 := argvalue0.Read(jsProt174)
    if err175 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AlterEdge(value0))
    fmt.Print("\n")
    break
  case "dropEdge":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropEdge requires 1 args")
      flag.Usage()
    }
    arg180 := flag.Arg(1)
    mbTrans181 := thrift.NewMemoryBufferLen(len(arg180))
    defer mbTrans181.Close()
    _, err182 := mbTrans181.WriteString(arg180)
    if err182 != nil {
      Usage()
      return
    }
    factory179 := thrift.NewSimpleJSONProtocolFactory()
    jsProt180 := factory179.GetProtocol(mbTrans177)
    argvalue0 := meta.NewDropEdgeReq()
    err181 := argvalue0.Read(jsProt180)
    if err181 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropEdge(value0))
    fmt.Print("\n")
    break
  case "getEdge":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetEdge requires 1 args")
      flag.Usage()
    }
    arg186 := flag.Arg(1)
    mbTrans187 := thrift.NewMemoryBufferLen(len(arg186))
    defer mbTrans187.Close()
    _, err188 := mbTrans187.WriteString(arg186)
    if err188 != nil {
      Usage()
      return
    }
    factory185 := thrift.NewSimpleJSONProtocolFactory()
    jsProt186 := factory185.GetProtocol(mbTrans183)
    argvalue0 := meta.NewGetEdgeReq()
    err187 := argvalue0.Read(jsProt186)
    if err187 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetEdge(value0))
    fmt.Print("\n")
    break
  case "listEdges":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListEdges requires 1 args")
      flag.Usage()
    }
    arg210 := flag.Arg(1)
    mbTrans211 := thrift.NewMemoryBufferLen(len(arg210))
    defer mbTrans211.Close()
    _, err212 := mbTrans211.WriteString(arg210)
    if err212 != nil {
      Usage()
      return
    }
    factory191 := thrift.NewSimpleJSONProtocolFactory()
    jsProt192 := factory191.GetProtocol(mbTrans189)
    argvalue0 := meta.NewListEdgesReq()
    err193 := argvalue0.Read(jsProt192)
    if err193 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListEdges(value0))
    fmt.Print("\n")
    break
  case "addHosts":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AddHosts requires 1 args")
      flag.Usage()
    }
    arg216 := flag.Arg(1)
    mbTrans217 := thrift.NewMemoryBufferLen(len(arg216))
    defer mbTrans217.Close()
    _, err218 := mbTrans217.WriteString(arg216)
    if err218 != nil {
      Usage()
      return
    }
    factory197 := thrift.NewSimpleJSONProtocolFactory()
    jsProt198 := factory197.GetProtocol(mbTrans195)
    argvalue0 := meta.NewAddHostsReq()
    err199 := argvalue0.Read(jsProt198)
    if err199 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AddHosts(value0))
    fmt.Print("\n")
    break
  case "addHostsIntoZone":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AddHostsIntoZone requires 1 args")
      flag.Usage()
    }
    arg222 := flag.Arg(1)
    mbTrans223 := thrift.NewMemoryBufferLen(len(arg222))
    defer mbTrans223.Close()
    _, err224 := mbTrans223.WriteString(arg222)
    if err224 != nil {
      Usage()
      return
    }
    factory203 := thrift.NewSimpleJSONProtocolFactory()
    jsProt204 := factory203.GetProtocol(mbTrans201)
    argvalue0 := meta.NewAddHostsIntoZoneReq()
    err205 := argvalue0.Read(jsProt204)
    if err205 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AddHostsIntoZone(value0))
    fmt.Print("\n")
    break
  case "dropHosts":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropHosts requires 1 args")
      flag.Usage()
    }
    arg228 := flag.Arg(1)
    mbTrans229 := thrift.NewMemoryBufferLen(len(arg228))
    defer mbTrans229.Close()
    _, err230 := mbTrans229.WriteString(arg228)
    if err230 != nil {
      Usage()
      return
    }
    factory209 := thrift.NewSimpleJSONProtocolFactory()
    jsProt210 := factory209.GetProtocol(mbTrans207)
    argvalue0 := meta.NewDropHostsReq()
    err211 := argvalue0.Read(jsProt210)
    if err211 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropHosts(value0))
    fmt.Print("\n")
    break
  case "listHosts":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListHosts requires 1 args")
      flag.Usage()
    }
    arg234 := flag.Arg(1)
    mbTrans235 := thrift.NewMemoryBufferLen(len(arg234))
    defer mbTrans235.Close()
    _, err236 := mbTrans235.WriteString(arg234)
    if err236 != nil {
      Usage()
      return
    }
    factory215 := thrift.NewSimpleJSONProtocolFactory()
    jsProt216 := factory215.GetProtocol(mbTrans213)
    argvalue0 := meta.NewListHostsReq()
    err217 := argvalue0.Read(jsProt216)
    if err217 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListHosts(value0))
    fmt.Print("\n")
    break
  case "getPartsAlloc":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetPartsAlloc requires 1 args")
      flag.Usage()
    }
    arg240 := flag.Arg(1)
    mbTrans241 := thrift.NewMemoryBufferLen(len(arg240))
    defer mbTrans241.Close()
    _, err242 := mbTrans241.WriteString(arg240)
    if err242 != nil {
      Usage()
      return
    }
    factory221 := thrift.NewSimpleJSONProtocolFactory()
    jsProt222 := factory221.GetProtocol(mbTrans219)
    argvalue0 := meta.NewGetPartsAllocReq()
    err223 := argvalue0.Read(jsProt222)
    if err223 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetPartsAlloc(value0))
    fmt.Print("\n")
    break
  case "listParts":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListParts requires 1 args")
      flag.Usage()
    }
    arg246 := flag.Arg(1)
    mbTrans247 := thrift.NewMemoryBufferLen(len(arg246))
    defer mbTrans247.Close()
    _, err248 := mbTrans247.WriteString(arg246)
    if err248 != nil {
      Usage()
      return
    }
    factory227 := thrift.NewSimpleJSONProtocolFactory()
    jsProt228 := factory227.GetProtocol(mbTrans225)
    argvalue0 := meta.NewListPartsReq()
    err229 := argvalue0.Read(jsProt228)
    if err229 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListParts(value0))
    fmt.Print("\n")
    break
  case "multiPut":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "MultiPut requires 1 args")
      flag.Usage()
    }
    arg252 := flag.Arg(1)
    mbTrans253 := thrift.NewMemoryBufferLen(len(arg252))
    defer mbTrans253.Close()
    _, err254 := mbTrans253.WriteString(arg252)
    if err254 != nil {
      Usage()
      return
    }
    factory233 := thrift.NewSimpleJSONProtocolFactory()
    jsProt234 := factory233.GetProtocol(mbTrans231)
    argvalue0 := meta.NewMultiPutReq()
    err235 := argvalue0.Read(jsProt234)
    if err235 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.MultiPut(value0))
    fmt.Print("\n")
    break
  case "get":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "Get requires 1 args")
      flag.Usage()
    }
    arg258 := flag.Arg(1)
    mbTrans259 := thrift.NewMemoryBufferLen(len(arg258))
    defer mbTrans259.Close()
    _, err260 := mbTrans259.WriteString(arg258)
    if err260 != nil {
      Usage()
      return
    }
    factory239 := thrift.NewSimpleJSONProtocolFactory()
    jsProt240 := factory239.GetProtocol(mbTrans237)
    argvalue0 := meta.NewGetReq()
    err241 := argvalue0.Read(jsProt240)
    if err241 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.Get(value0))
    fmt.Print("\n")
    break
  case "multiGet":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "MultiGet requires 1 args")
      flag.Usage()
    }
    arg264 := flag.Arg(1)
    mbTrans265 := thrift.NewMemoryBufferLen(len(arg264))
    defer mbTrans265.Close()
    _, err266 := mbTrans265.WriteString(arg264)
    if err266 != nil {
      Usage()
      return
    }
    factory245 := thrift.NewSimpleJSONProtocolFactory()
    jsProt246 := factory245.GetProtocol(mbTrans243)
    argvalue0 := meta.NewMultiGetReq()
    err247 := argvalue0.Read(jsProt246)
    if err247 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.MultiGet(value0))
    fmt.Print("\n")
    break
  case "remove":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "Remove requires 1 args")
      flag.Usage()
    }
    arg270 := flag.Arg(1)
    mbTrans271 := thrift.NewMemoryBufferLen(len(arg270))
    defer mbTrans271.Close()
    _, err272 := mbTrans271.WriteString(arg270)
    if err272 != nil {
      Usage()
      return
    }
    factory251 := thrift.NewSimpleJSONProtocolFactory()
    jsProt252 := factory251.GetProtocol(mbTrans249)
    argvalue0 := meta.NewRemoveReq()
    err253 := argvalue0.Read(jsProt252)
    if err253 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.Remove(value0))
    fmt.Print("\n")
    break
  case "removeRange":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RemoveRange requires 1 args")
      flag.Usage()
    }
    arg276 := flag.Arg(1)
    mbTrans277 := thrift.NewMemoryBufferLen(len(arg276))
    defer mbTrans277.Close()
    _, err278 := mbTrans277.WriteString(arg276)
    if err278 != nil {
      Usage()
      return
    }
    factory257 := thrift.NewSimpleJSONProtocolFactory()
    jsProt258 := factory257.GetProtocol(mbTrans255)
    argvalue0 := meta.NewRemoveRangeReq()
    err259 := argvalue0.Read(jsProt258)
    if err259 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RemoveRange(value0))
    fmt.Print("\n")
    break
  case "scan":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "Scan requires 1 args")
      flag.Usage()
    }
    arg282 := flag.Arg(1)
    mbTrans283 := thrift.NewMemoryBufferLen(len(arg282))
    defer mbTrans283.Close()
    _, err284 := mbTrans283.WriteString(arg282)
    if err284 != nil {
      Usage()
      return
    }
    factory263 := thrift.NewSimpleJSONProtocolFactory()
    jsProt264 := factory263.GetProtocol(mbTrans261)
    argvalue0 := meta.NewScanReq()
    err265 := argvalue0.Read(jsProt264)
    if err265 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.Scan(value0))
    fmt.Print("\n")
    break
  case "createTagIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateTagIndex requires 1 args")
      flag.Usage()
    }
    arg288 := flag.Arg(1)
    mbTrans289 := thrift.NewMemoryBufferLen(len(arg288))
    defer mbTrans289.Close()
    _, err290 := mbTrans289.WriteString(arg288)
    if err290 != nil {
      Usage()
      return
    }
    factory269 := thrift.NewSimpleJSONProtocolFactory()
    jsProt270 := factory269.GetProtocol(mbTrans267)
    argvalue0 := meta.NewCreateTagIndexReq()
    err271 := argvalue0.Read(jsProt270)
    if err271 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateTagIndex(value0))
    fmt.Print("\n")
    break
  case "dropTagIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropTagIndex requires 1 args")
      flag.Usage()
    }
    arg294 := flag.Arg(1)
    mbTrans295 := thrift.NewMemoryBufferLen(len(arg294))
    defer mbTrans295.Close()
    _, err296 := mbTrans295.WriteString(arg294)
    if err296 != nil {
      Usage()
      return
    }
    factory275 := thrift.NewSimpleJSONProtocolFactory()
    jsProt276 := factory275.GetProtocol(mbTrans273)
    argvalue0 := meta.NewDropTagIndexReq()
    err277 := argvalue0.Read(jsProt276)
    if err277 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropTagIndex(value0))
    fmt.Print("\n")
    break
  case "getTagIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetTagIndex requires 1 args")
      flag.Usage()
    }
    arg300 := flag.Arg(1)
    mbTrans301 := thrift.NewMemoryBufferLen(len(arg300))
    defer mbTrans301.Close()
    _, err302 := mbTrans301.WriteString(arg300)
    if err302 != nil {
      Usage()
      return
    }
    factory281 := thrift.NewSimpleJSONProtocolFactory()
    jsProt282 := factory281.GetProtocol(mbTrans279)
    argvalue0 := meta.NewGetTagIndexReq()
    err283 := argvalue0.Read(jsProt282)
    if err283 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetTagIndex(value0))
    fmt.Print("\n")
    break
  case "listTagIndexes":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListTagIndexes requires 1 args")
      flag.Usage()
    }
    arg306 := flag.Arg(1)
    mbTrans307 := thrift.NewMemoryBufferLen(len(arg306))
    defer mbTrans307.Close()
    _, err308 := mbTrans307.WriteString(arg306)
    if err308 != nil {
      Usage()
      return
    }
    factory287 := thrift.NewSimpleJSONProtocolFactory()
    jsProt288 := factory287.GetProtocol(mbTrans285)
    argvalue0 := meta.NewListTagIndexesReq()
    err289 := argvalue0.Read(jsProt288)
    if err289 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListTagIndexes(value0))
    fmt.Print("\n")
    break
  case "rebuildTagIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RebuildTagIndex requires 1 args")
      flag.Usage()
    }
    arg312 := flag.Arg(1)
    mbTrans313 := thrift.NewMemoryBufferLen(len(arg312))
    defer mbTrans313.Close()
    _, err314 := mbTrans313.WriteString(arg312)
    if err314 != nil {
      Usage()
      return
    }
    factory293 := thrift.NewSimpleJSONProtocolFactory()
    jsProt294 := factory293.GetProtocol(mbTrans291)
    argvalue0 := meta.NewRebuildIndexReq()
    err295 := argvalue0.Read(jsProt294)
    if err295 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RebuildTagIndex(value0))
    fmt.Print("\n")
    break
  case "listTagIndexStatus":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListTagIndexStatus requires 1 args")
      flag.Usage()
    }
    arg318 := flag.Arg(1)
    mbTrans319 := thrift.NewMemoryBufferLen(len(arg318))
    defer mbTrans319.Close()
    _, err320 := mbTrans319.WriteString(arg318)
    if err320 != nil {
      Usage()
      return
    }
    factory299 := thrift.NewSimpleJSONProtocolFactory()
    jsProt300 := factory299.GetProtocol(mbTrans297)
    argvalue0 := meta.NewListIndexStatusReq()
    err301 := argvalue0.Read(jsProt300)
    if err301 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListTagIndexStatus(value0))
    fmt.Print("\n")
    break
  case "createEdgeIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateEdgeIndex requires 1 args")
      flag.Usage()
    }
    arg324 := flag.Arg(1)
    mbTrans325 := thrift.NewMemoryBufferLen(len(arg324))
    defer mbTrans325.Close()
    _, err326 := mbTrans325.WriteString(arg324)
    if err326 != nil {
      Usage()
      return
    }
    factory305 := thrift.NewSimpleJSONProtocolFactory()
    jsProt306 := factory305.GetProtocol(mbTrans303)
    argvalue0 := meta.NewCreateEdgeIndexReq()
    err307 := argvalue0.Read(jsProt306)
    if err307 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateEdgeIndex(value0))
    fmt.Print("\n")
    break
  case "dropEdgeIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropEdgeIndex requires 1 args")
      flag.Usage()
    }
    arg330 := flag.Arg(1)
    mbTrans331 := thrift.NewMemoryBufferLen(len(arg330))
    defer mbTrans331.Close()
    _, err332 := mbTrans331.WriteString(arg330)
    if err332 != nil {
      Usage()
      return
    }
    factory311 := thrift.NewSimpleJSONProtocolFactory()
    jsProt312 := factory311.GetProtocol(mbTrans309)
    argvalue0 := meta.NewDropEdgeIndexReq()
    err313 := argvalue0.Read(jsProt312)
    if err313 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropEdgeIndex(value0))
    fmt.Print("\n")
    break
  case "getEdgeIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetEdgeIndex requires 1 args")
      flag.Usage()
    }
    arg336 := flag.Arg(1)
    mbTrans337 := thrift.NewMemoryBufferLen(len(arg336))
    defer mbTrans337.Close()
    _, err338 := mbTrans337.WriteString(arg336)
    if err338 != nil {
      Usage()
      return
    }
    factory317 := thrift.NewSimpleJSONProtocolFactory()
    jsProt318 := factory317.GetProtocol(mbTrans315)
    argvalue0 := meta.NewGetEdgeIndexReq()
    err319 := argvalue0.Read(jsProt318)
    if err319 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetEdgeIndex(value0))
    fmt.Print("\n")
    break
  case "listEdgeIndexes":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListEdgeIndexes requires 1 args")
      flag.Usage()
    }
    arg342 := flag.Arg(1)
    mbTrans343 := thrift.NewMemoryBufferLen(len(arg342))
    defer mbTrans343.Close()
    _, err344 := mbTrans343.WriteString(arg342)
    if err344 != nil {
      Usage()
      return
    }
    factory323 := thrift.NewSimpleJSONProtocolFactory()
    jsProt324 := factory323.GetProtocol(mbTrans321)
    argvalue0 := meta.NewListEdgeIndexesReq()
    err325 := argvalue0.Read(jsProt324)
    if err325 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListEdgeIndexes(value0))
    fmt.Print("\n")
    break
  case "rebuildEdgeIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RebuildEdgeIndex requires 1 args")
      flag.Usage()
    }
    arg348 := flag.Arg(1)
    mbTrans349 := thrift.NewMemoryBufferLen(len(arg348))
    defer mbTrans349.Close()
    _, err350 := mbTrans349.WriteString(arg348)
    if err350 != nil {
      Usage()
      return
    }
    factory329 := thrift.NewSimpleJSONProtocolFactory()
    jsProt330 := factory329.GetProtocol(mbTrans327)
    argvalue0 := meta.NewRebuildIndexReq()
    err331 := argvalue0.Read(jsProt330)
    if err331 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RebuildEdgeIndex(value0))
    fmt.Print("\n")
    break
  case "listEdgeIndexStatus":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListEdgeIndexStatus requires 1 args")
      flag.Usage()
    }
    arg354 := flag.Arg(1)
    mbTrans355 := thrift.NewMemoryBufferLen(len(arg354))
    defer mbTrans355.Close()
    _, err356 := mbTrans355.WriteString(arg354)
    if err356 != nil {
      Usage()
      return
    }
    factory335 := thrift.NewSimpleJSONProtocolFactory()
    jsProt336 := factory335.GetProtocol(mbTrans333)
    argvalue0 := meta.NewListIndexStatusReq()
    err337 := argvalue0.Read(jsProt336)
    if err337 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListEdgeIndexStatus(value0))
    fmt.Print("\n")
    break
  case "createUser":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateUser requires 1 args")
      flag.Usage()
    }
    arg360 := flag.Arg(1)
    mbTrans361 := thrift.NewMemoryBufferLen(len(arg360))
    defer mbTrans361.Close()
    _, err362 := mbTrans361.WriteString(arg360)
    if err362 != nil {
      Usage()
      return
    }
    factory341 := thrift.NewSimpleJSONProtocolFactory()
    jsProt342 := factory341.GetProtocol(mbTrans339)
    argvalue0 := meta.NewCreateUserReq()
    err343 := argvalue0.Read(jsProt342)
    if err343 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateUser(value0))
    fmt.Print("\n")
    break
  case "dropUser":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropUser requires 1 args")
      flag.Usage()
    }
    arg366 := flag.Arg(1)
    mbTrans367 := thrift.NewMemoryBufferLen(len(arg366))
    defer mbTrans367.Close()
    _, err368 := mbTrans367.WriteString(arg366)
    if err368 != nil {
      Usage()
      return
    }
    factory347 := thrift.NewSimpleJSONProtocolFactory()
    jsProt348 := factory347.GetProtocol(mbTrans345)
    argvalue0 := meta.NewDropUserReq()
    err349 := argvalue0.Read(jsProt348)
    if err349 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropUser(value0))
    fmt.Print("\n")
    break
  case "alterUser":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AlterUser requires 1 args")
      flag.Usage()
    }
    arg372 := flag.Arg(1)
    mbTrans373 := thrift.NewMemoryBufferLen(len(arg372))
    defer mbTrans373.Close()
    _, err374 := mbTrans373.WriteString(arg372)
    if err374 != nil {
      Usage()
      return
    }
    factory353 := thrift.NewSimpleJSONProtocolFactory()
    jsProt354 := factory353.GetProtocol(mbTrans351)
    argvalue0 := meta.NewAlterUserReq()
    err355 := argvalue0.Read(jsProt354)
    if err355 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AlterUser(value0))
    fmt.Print("\n")
    break
  case "grantRole":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GrantRole requires 1 args")
      flag.Usage()
    }
    arg378 := flag.Arg(1)
    mbTrans379 := thrift.NewMemoryBufferLen(len(arg378))
    defer mbTrans379.Close()
    _, err380 := mbTrans379.WriteString(arg378)
    if err380 != nil {
      Usage()
      return
    }
    factory359 := thrift.NewSimpleJSONProtocolFactory()
    jsProt360 := factory359.GetProtocol(mbTrans357)
    argvalue0 := meta.NewGrantRoleReq()
    err361 := argvalue0.Read(jsProt360)
    if err361 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GrantRole(value0))
    fmt.Print("\n")
    break
  case "revokeRole":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RevokeRole requires 1 args")
      flag.Usage()
    }
    arg384 := flag.Arg(1)
    mbTrans385 := thrift.NewMemoryBufferLen(len(arg384))
    defer mbTrans385.Close()
    _, err386 := mbTrans385.WriteString(arg384)
    if err386 != nil {
      Usage()
      return
    }
    factory365 := thrift.NewSimpleJSONProtocolFactory()
    jsProt366 := factory365.GetProtocol(mbTrans363)
    argvalue0 := meta.NewRevokeRoleReq()
    err367 := argvalue0.Read(jsProt366)
    if err367 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RevokeRole(value0))
    fmt.Print("\n")
    break
  case "listUsers":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListUsers requires 1 args")
      flag.Usage()
    }
    arg390 := flag.Arg(1)
    mbTrans391 := thrift.NewMemoryBufferLen(len(arg390))
    defer mbTrans391.Close()
    _, err392 := mbTrans391.WriteString(arg390)
    if err392 != nil {
      Usage()
      return
    }
    factory371 := thrift.NewSimpleJSONProtocolFactory()
    jsProt372 := factory371.GetProtocol(mbTrans369)
    argvalue0 := meta.NewListUsersReq()
    err373 := argvalue0.Read(jsProt372)
    if err373 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListUsers(value0))
    fmt.Print("\n")
    break
  case "listRoles":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListRoles requires 1 args")
      flag.Usage()
    }
    arg396 := flag.Arg(1)
    mbTrans397 := thrift.NewMemoryBufferLen(len(arg396))
    defer mbTrans397.Close()
    _, err398 := mbTrans397.WriteString(arg396)
    if err398 != nil {
      Usage()
      return
    }
    factory377 := thrift.NewSimpleJSONProtocolFactory()
    jsProt378 := factory377.GetProtocol(mbTrans375)
    argvalue0 := meta.NewListRolesReq()
    err379 := argvalue0.Read(jsProt378)
    if err379 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListRoles(value0))
    fmt.Print("\n")
    break
  case "getUserRoles":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetUserRoles requires 1 args")
      flag.Usage()
    }
    arg402 := flag.Arg(1)
    mbTrans403 := thrift.NewMemoryBufferLen(len(arg402))
    defer mbTrans403.Close()
    _, err404 := mbTrans403.WriteString(arg402)
    if err404 != nil {
      Usage()
      return
    }
    factory383 := thrift.NewSimpleJSONProtocolFactory()
    jsProt384 := factory383.GetProtocol(mbTrans381)
    argvalue0 := meta.NewGetUserRolesReq()
    err385 := argvalue0.Read(jsProt384)
    if err385 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetUserRoles(value0))
    fmt.Print("\n")
    break
  case "changePassword":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ChangePassword requires 1 args")
      flag.Usage()
    }
    arg408 := flag.Arg(1)
    mbTrans409 := thrift.NewMemoryBufferLen(len(arg408))
    defer mbTrans409.Close()
    _, err410 := mbTrans409.WriteString(arg408)
    if err410 != nil {
      Usage()
      return
    }
    factory389 := thrift.NewSimpleJSONProtocolFactory()
    jsProt390 := factory389.GetProtocol(mbTrans387)
    argvalue0 := meta.NewChangePasswordReq()
    err391 := argvalue0.Read(jsProt390)
    if err391 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ChangePassword(value0))
    fmt.Print("\n")
    break
  case "heartBeat":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "HeartBeat requires 1 args")
      flag.Usage()
    }
    arg414 := flag.Arg(1)
    mbTrans415 := thrift.NewMemoryBufferLen(len(arg414))
    defer mbTrans415.Close()
    _, err416 := mbTrans415.WriteString(arg414)
    if err416 != nil {
      Usage()
      return
    }
    factory395 := thrift.NewSimpleJSONProtocolFactory()
    jsProt396 := factory395.GetProtocol(mbTrans393)
    argvalue0 := meta.NewHBReq()
    err397 := argvalue0.Read(jsProt396)
    if err397 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.HeartBeat(value0))
    fmt.Print("\n")
    break
  case "agentHeartbeat":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AgentHeartbeat requires 1 args")
      flag.Usage()
    }
    arg420 := flag.Arg(1)
    mbTrans421 := thrift.NewMemoryBufferLen(len(arg420))
    defer mbTrans421.Close()
    _, err422 := mbTrans421.WriteString(arg420)
    if err422 != nil {
      Usage()
      return
    }
    factory401 := thrift.NewSimpleJSONProtocolFactory()
    jsProt402 := factory401.GetProtocol(mbTrans399)
    argvalue0 := meta.NewAgentHBReq()
    err403 := argvalue0.Read(jsProt402)
    if err403 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AgentHeartbeat(value0))
    fmt.Print("\n")
    break
  case "regConfig":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RegConfig requires 1 args")
      flag.Usage()
    }
    arg426 := flag.Arg(1)
    mbTrans427 := thrift.NewMemoryBufferLen(len(arg426))
    defer mbTrans427.Close()
    _, err428 := mbTrans427.WriteString(arg426)
    if err428 != nil {
      Usage()
      return
    }
    factory407 := thrift.NewSimpleJSONProtocolFactory()
    jsProt408 := factory407.GetProtocol(mbTrans405)
    argvalue0 := meta.NewRegConfigReq()
    err409 := argvalue0.Read(jsProt408)
    if err409 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RegConfig(value0))
    fmt.Print("\n")
    break
  case "getConfig":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetConfig requires 1 args")
      flag.Usage()
    }
    arg432 := flag.Arg(1)
    mbTrans433 := thrift.NewMemoryBufferLen(len(arg432))
    defer mbTrans433.Close()
    _, err434 := mbTrans433.WriteString(arg432)
    if err434 != nil {
      Usage()
      return
    }
    factory413 := thrift.NewSimpleJSONProtocolFactory()
    jsProt414 := factory413.GetProtocol(mbTrans411)
    argvalue0 := meta.NewGetConfigReq()
    err415 := argvalue0.Read(jsProt414)
    if err415 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetConfig(value0))
    fmt.Print("\n")
    break
  case "setConfig":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "SetConfig requires 1 args")
      flag.Usage()
    }
    arg438 := flag.Arg(1)
    mbTrans439 := thrift.NewMemoryBufferLen(len(arg438))
    defer mbTrans439.Close()
    _, err440 := mbTrans439.WriteString(arg438)
    if err440 != nil {
      Usage()
      return
    }
    factory419 := thrift.NewSimpleJSONProtocolFactory()
    jsProt420 := factory419.GetProtocol(mbTrans417)
    argvalue0 := meta.NewSetConfigReq()
    err421 := argvalue0.Read(jsProt420)
    if err421 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.SetConfig(value0))
    fmt.Print("\n")
    break
  case "listConfigs":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListConfigs requires 1 args")
      flag.Usage()
    }
    arg444 := flag.Arg(1)
    mbTrans445 := thrift.NewMemoryBufferLen(len(arg444))
    defer mbTrans445.Close()
    _, err446 := mbTrans445.WriteString(arg444)
    if err446 != nil {
      Usage()
      return
    }
    factory425 := thrift.NewSimpleJSONProtocolFactory()
    jsProt426 := factory425.GetProtocol(mbTrans423)
    argvalue0 := meta.NewListConfigsReq()
    err427 := argvalue0.Read(jsProt426)
    if err427 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListConfigs(value0))
    fmt.Print("\n")
    break
  case "createSnapshot":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateSnapshot requires 1 args")
      flag.Usage()
    }
    arg450 := flag.Arg(1)
    mbTrans451 := thrift.NewMemoryBufferLen(len(arg450))
    defer mbTrans451.Close()
    _, err452 := mbTrans451.WriteString(arg450)
    if err452 != nil {
      Usage()
      return
    }
    factory431 := thrift.NewSimpleJSONProtocolFactory()
    jsProt432 := factory431.GetProtocol(mbTrans429)
    argvalue0 := meta.NewCreateSnapshotReq()
    err433 := argvalue0.Read(jsProt432)
    if err433 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateSnapshot(value0))
    fmt.Print("\n")
    break
  case "dropSnapshot":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropSnapshot requires 1 args")
      flag.Usage()
    }
    arg456 := flag.Arg(1)
    mbTrans457 := thrift.NewMemoryBufferLen(len(arg456))
    defer mbTrans457.Close()
    _, err458 := mbTrans457.WriteString(arg456)
    if err458 != nil {
      Usage()
      return
    }
    factory437 := thrift.NewSimpleJSONProtocolFactory()
    jsProt438 := factory437.GetProtocol(mbTrans435)
    argvalue0 := meta.NewDropSnapshotReq()
    err439 := argvalue0.Read(jsProt438)
    if err439 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropSnapshot(value0))
    fmt.Print("\n")
    break
  case "listSnapshots":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListSnapshots requires 1 args")
      flag.Usage()
    }
    arg462 := flag.Arg(1)
    mbTrans463 := thrift.NewMemoryBufferLen(len(arg462))
    defer mbTrans463.Close()
    _, err464 := mbTrans463.WriteString(arg462)
    if err464 != nil {
      Usage()
      return
    }
    factory443 := thrift.NewSimpleJSONProtocolFactory()
    jsProt444 := factory443.GetProtocol(mbTrans441)
    argvalue0 := meta.NewListSnapshotsReq()
    err445 := argvalue0.Read(jsProt444)
    if err445 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListSnapshots(value0))
    fmt.Print("\n")
    break
  case "runAdminJob":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RunAdminJob requires 1 args")
      flag.Usage()
    }
    arg468 := flag.Arg(1)
    mbTrans469 := thrift.NewMemoryBufferLen(len(arg468))
    defer mbTrans469.Close()
    _, err470 := mbTrans469.WriteString(arg468)
    if err470 != nil {
      Usage()
      return
    }
    factory449 := thrift.NewSimpleJSONProtocolFactory()
    jsProt450 := factory449.GetProtocol(mbTrans447)
    argvalue0 := meta.NewAdminJobReq()
    err451 := argvalue0.Read(jsProt450)
    if err451 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RunAdminJob(value0))
    fmt.Print("\n")
    break
  case "mergeZone":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "MergeZone requires 1 args")
      flag.Usage()
    }
    arg474 := flag.Arg(1)
    mbTrans475 := thrift.NewMemoryBufferLen(len(arg474))
    defer mbTrans475.Close()
    _, err476 := mbTrans475.WriteString(arg474)
    if err476 != nil {
      Usage()
      return
    }
    factory455 := thrift.NewSimpleJSONProtocolFactory()
    jsProt456 := factory455.GetProtocol(mbTrans453)
    argvalue0 := meta.NewMergeZoneReq()
    err457 := argvalue0.Read(jsProt456)
    if err457 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.MergeZone(value0))
    fmt.Print("\n")
    break
  case "dropZone":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropZone requires 1 args")
      flag.Usage()
    }
    arg480 := flag.Arg(1)
    mbTrans481 := thrift.NewMemoryBufferLen(len(arg480))
    defer mbTrans481.Close()
    _, err482 := mbTrans481.WriteString(arg480)
    if err482 != nil {
      Usage()
      return
    }
    factory461 := thrift.NewSimpleJSONProtocolFactory()
    jsProt462 := factory461.GetProtocol(mbTrans459)
    argvalue0 := meta.NewDropZoneReq()
    err463 := argvalue0.Read(jsProt462)
    if err463 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropZone(value0))
    fmt.Print("\n")
    break
  case "splitZone":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "SplitZone requires 1 args")
      flag.Usage()
    }
    arg486 := flag.Arg(1)
    mbTrans487 := thrift.NewMemoryBufferLen(len(arg486))
    defer mbTrans487.Close()
    _, err488 := mbTrans487.WriteString(arg486)
    if err488 != nil {
      Usage()
      return
    }
    factory467 := thrift.NewSimpleJSONProtocolFactory()
    jsProt468 := factory467.GetProtocol(mbTrans465)
    argvalue0 := meta.NewSplitZoneReq()
    err469 := argvalue0.Read(jsProt468)
    if err469 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.SplitZone(value0))
    fmt.Print("\n")
    break
  case "renameZone":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RenameZone requires 1 args")
      flag.Usage()
    }
    arg492 := flag.Arg(1)
    mbTrans493 := thrift.NewMemoryBufferLen(len(arg492))
    defer mbTrans493.Close()
    _, err494 := mbTrans493.WriteString(arg492)
    if err494 != nil {
      Usage()
      return
    }
    factory473 := thrift.NewSimpleJSONProtocolFactory()
    jsProt474 := factory473.GetProtocol(mbTrans471)
    argvalue0 := meta.NewRenameZoneReq()
    err475 := argvalue0.Read(jsProt474)
    if err475 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RenameZone(value0))
    fmt.Print("\n")
    break
  case "getZone":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetZone requires 1 args")
      flag.Usage()
    }
    arg498 := flag.Arg(1)
    mbTrans499 := thrift.NewMemoryBufferLen(len(arg498))
    defer mbTrans499.Close()
    _, err500 := mbTrans499.WriteString(arg498)
    if err500 != nil {
      Usage()
      return
    }
    factory479 := thrift.NewSimpleJSONProtocolFactory()
    jsProt480 := factory479.GetProtocol(mbTrans477)
    argvalue0 := meta.NewGetZoneReq()
    err481 := argvalue0.Read(jsProt480)
    if err481 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetZone(value0))
    fmt.Print("\n")
    break
  case "listZones":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListZones requires 1 args")
      flag.Usage()
    }
    arg504 := flag.Arg(1)
    mbTrans505 := thrift.NewMemoryBufferLen(len(arg504))
    defer mbTrans505.Close()
    _, err506 := mbTrans505.WriteString(arg504)
    if err506 != nil {
      Usage()
      return
    }
    factory485 := thrift.NewSimpleJSONProtocolFactory()
    jsProt486 := factory485.GetProtocol(mbTrans483)
    argvalue0 := meta.NewListZonesReq()
    err487 := argvalue0.Read(jsProt486)
    if err487 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListZones(value0))
    fmt.Print("\n")
    break
  case "addListener":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AddListener requires 1 args")
      flag.Usage()
    }
    arg510 := flag.Arg(1)
    mbTrans511 := thrift.NewMemoryBufferLen(len(arg510))
    defer mbTrans511.Close()
    _, err512 := mbTrans511.WriteString(arg510)
    if err512 != nil {
      Usage()
      return
    }
    factory491 := thrift.NewSimpleJSONProtocolFactory()
    jsProt492 := factory491.GetProtocol(mbTrans489)
    argvalue0 := meta.NewAddListenerReq()
    err493 := argvalue0.Read(jsProt492)
    if err493 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AddListener(value0))
    fmt.Print("\n")
    break
  case "removeListener":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RemoveListener requires 1 args")
      flag.Usage()
    }
    arg516 := flag.Arg(1)
    mbTrans517 := thrift.NewMemoryBufferLen(len(arg516))
    defer mbTrans517.Close()
    _, err518 := mbTrans517.WriteString(arg516)
    if err518 != nil {
      Usage()
      return
    }
    factory497 := thrift.NewSimpleJSONProtocolFactory()
    jsProt498 := factory497.GetProtocol(mbTrans495)
    argvalue0 := meta.NewRemoveListenerReq()
    err499 := argvalue0.Read(jsProt498)
    if err499 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RemoveListener(value0))
    fmt.Print("\n")
    break
  case "listListener":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListListener requires 1 args")
      flag.Usage()
    }
    arg522 := flag.Arg(1)
    mbTrans523 := thrift.NewMemoryBufferLen(len(arg522))
    defer mbTrans523.Close()
    _, err524 := mbTrans523.WriteString(arg522)
    if err524 != nil {
      Usage()
      return
    }
    factory503 := thrift.NewSimpleJSONProtocolFactory()
    jsProt504 := factory503.GetProtocol(mbTrans501)
    argvalue0 := meta.NewListListenerReq()
    err505 := argvalue0.Read(jsProt504)
    if err505 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListListener(value0))
    fmt.Print("\n")
    break
  case "getStats":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetStats requires 1 args")
      flag.Usage()
    }
    arg528 := flag.Arg(1)
    mbTrans529 := thrift.NewMemoryBufferLen(len(arg528))
    defer mbTrans529.Close()
    _, err530 := mbTrans529.WriteString(arg528)
    if err530 != nil {
      Usage()
      return
    }
    factory509 := thrift.NewSimpleJSONProtocolFactory()
    jsProt510 := factory509.GetProtocol(mbTrans507)
    argvalue0 := meta.NewGetStatsReq()
    err511 := argvalue0.Read(jsProt510)
    if err511 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetStats(value0))
    fmt.Print("\n")
    break
  case "signInFTService":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "SignInFTService requires 1 args")
      flag.Usage()
    }
    arg534 := flag.Arg(1)
    mbTrans535 := thrift.NewMemoryBufferLen(len(arg534))
    defer mbTrans535.Close()
    _, err536 := mbTrans535.WriteString(arg534)
    if err536 != nil {
      Usage()
      return
    }
    factory515 := thrift.NewSimpleJSONProtocolFactory()
    jsProt516 := factory515.GetProtocol(mbTrans513)
    argvalue0 := meta.NewSignInFTServiceReq()
    err517 := argvalue0.Read(jsProt516)
    if err517 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.SignInFTService(value0))
    fmt.Print("\n")
    break
  case "signOutFTService":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "SignOutFTService requires 1 args")
      flag.Usage()
    }
    arg540 := flag.Arg(1)
    mbTrans541 := thrift.NewMemoryBufferLen(len(arg540))
    defer mbTrans541.Close()
    _, err542 := mbTrans541.WriteString(arg540)
    if err542 != nil {
      Usage()
      return
    }
    factory521 := thrift.NewSimpleJSONProtocolFactory()
    jsProt522 := factory521.GetProtocol(mbTrans519)
    argvalue0 := meta.NewSignOutFTServiceReq()
    err523 := argvalue0.Read(jsProt522)
    if err523 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.SignOutFTService(value0))
    fmt.Print("\n")
    break
  case "listFTClients":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListFTClients requires 1 args")
      flag.Usage()
    }
    arg546 := flag.Arg(1)
    mbTrans547 := thrift.NewMemoryBufferLen(len(arg546))
    defer mbTrans547.Close()
    _, err548 := mbTrans547.WriteString(arg546)
    if err548 != nil {
      Usage()
      return
    }
    factory527 := thrift.NewSimpleJSONProtocolFactory()
    jsProt528 := factory527.GetProtocol(mbTrans525)
    argvalue0 := meta.NewListFTClientsReq()
    err529 := argvalue0.Read(jsProt528)
    if err529 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListFTClients(value0))
    fmt.Print("\n")
    break
  case "createFTIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateFTIndex requires 1 args")
      flag.Usage()
    }
    arg552 := flag.Arg(1)
    mbTrans553 := thrift.NewMemoryBufferLen(len(arg552))
    defer mbTrans553.Close()
    _, err554 := mbTrans553.WriteString(arg552)
    if err554 != nil {
      Usage()
      return
    }
    factory533 := thrift.NewSimpleJSONProtocolFactory()
    jsProt534 := factory533.GetProtocol(mbTrans531)
    argvalue0 := meta.NewCreateFTIndexReq()
    err535 := argvalue0.Read(jsProt534)
    if err535 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateFTIndex(value0))
    fmt.Print("\n")
    break
  case "dropFTIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropFTIndex requires 1 args")
      flag.Usage()
    }
    arg558 := flag.Arg(1)
    mbTrans559 := thrift.NewMemoryBufferLen(len(arg558))
    defer mbTrans559.Close()
    _, err560 := mbTrans559.WriteString(arg558)
    if err560 != nil {
      Usage()
      return
    }
    factory539 := thrift.NewSimpleJSONProtocolFactory()
    jsProt540 := factory539.GetProtocol(mbTrans537)
    argvalue0 := meta.NewDropFTIndexReq()
    err541 := argvalue0.Read(jsProt540)
    if err541 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropFTIndex(value0))
    fmt.Print("\n")
    break
  case "listFTIndexes":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListFTIndexes requires 1 args")
      flag.Usage()
    }
    arg564 := flag.Arg(1)
    mbTrans565 := thrift.NewMemoryBufferLen(len(arg564))
    defer mbTrans565.Close()
    _, err566 := mbTrans565.WriteString(arg564)
    if err566 != nil {
      Usage()
      return
    }
    factory545 := thrift.NewSimpleJSONProtocolFactory()
    jsProt546 := factory545.GetProtocol(mbTrans543)
    argvalue0 := meta.NewListFTIndexesReq()
    err547 := argvalue0.Read(jsProt546)
    if err547 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListFTIndexes(value0))
    fmt.Print("\n")
    break
  case "createSession":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateSession requires 1 args")
      flag.Usage()
    }
    arg570 := flag.Arg(1)
    mbTrans571 := thrift.NewMemoryBufferLen(len(arg570))
    defer mbTrans571.Close()
    _, err572 := mbTrans571.WriteString(arg570)
    if err572 != nil {
      Usage()
      return
    }
    factory551 := thrift.NewSimpleJSONProtocolFactory()
    jsProt552 := factory551.GetProtocol(mbTrans549)
    argvalue0 := meta.NewCreateSessionReq()
    err553 := argvalue0.Read(jsProt552)
    if err553 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateSession(value0))
    fmt.Print("\n")
    break
  case "updateSessions":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "UpdateSessions requires 1 args")
      flag.Usage()
    }
    arg576 := flag.Arg(1)
    mbTrans577 := thrift.NewMemoryBufferLen(len(arg576))
    defer mbTrans577.Close()
    _, err578 := mbTrans577.WriteString(arg576)
    if err578 != nil {
      Usage()
      return
    }
    factory557 := thrift.NewSimpleJSONProtocolFactory()
    jsProt558 := factory557.GetProtocol(mbTrans555)
    argvalue0 := meta.NewUpdateSessionsReq()
    err559 := argvalue0.Read(jsProt558)
    if err559 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.UpdateSessions(value0))
    fmt.Print("\n")
    break
  case "listSessions":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListSessions requires 1 args")
      flag.Usage()
    }
    arg582 := flag.Arg(1)
    mbTrans583 := thrift.NewMemoryBufferLen(len(arg582))
    defer mbTrans583.Close()
    _, err584 := mbTrans583.WriteString(arg582)
    if err584 != nil {
      Usage()
      return
    }
    factory563 := thrift.NewSimpleJSONProtocolFactory()
    jsProt564 := factory563.GetProtocol(mbTrans561)
    argvalue0 := meta.NewListSessionsReq()
    err565 := argvalue0.Read(jsProt564)
    if err565 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListSessions(value0))
    fmt.Print("\n")
    break
  case "getSession":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetSession requires 1 args")
      flag.Usage()
    }
    arg588 := flag.Arg(1)
    mbTrans589 := thrift.NewMemoryBufferLen(len(arg588))
    defer mbTrans589.Close()
    _, err590 := mbTrans589.WriteString(arg588)
    if err590 != nil {
      Usage()
      return
    }
    factory569 := thrift.NewSimpleJSONProtocolFactory()
    jsProt570 := factory569.GetProtocol(mbTrans567)
    argvalue0 := meta.NewGetSessionReq()
    err571 := argvalue0.Read(jsProt570)
    if err571 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetSession(value0))
    fmt.Print("\n")
    break
  case "removeSession":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RemoveSession requires 1 args")
      flag.Usage()
    }
    arg594 := flag.Arg(1)
    mbTrans595 := thrift.NewMemoryBufferLen(len(arg594))
    defer mbTrans595.Close()
    _, err596 := mbTrans595.WriteString(arg594)
    if err596 != nil {
      Usage()
      return
    }
    factory575 := thrift.NewSimpleJSONProtocolFactory()
    jsProt576 := factory575.GetProtocol(mbTrans573)
    argvalue0 := meta.NewRemoveSessionReq()
    err577 := argvalue0.Read(jsProt576)
    if err577 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RemoveSession(value0))
    fmt.Print("\n")
    break
  case "killQuery":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "KillQuery requires 1 args")
      flag.Usage()
    }
    arg600 := flag.Arg(1)
    mbTrans601 := thrift.NewMemoryBufferLen(len(arg600))
    defer mbTrans601.Close()
    _, err602 := mbTrans601.WriteString(arg600)
    if err602 != nil {
      Usage()
      return
    }
    factory581 := thrift.NewSimpleJSONProtocolFactory()
    jsProt582 := factory581.GetProtocol(mbTrans579)
    argvalue0 := meta.NewKillQueryReq()
    err583 := argvalue0.Read(jsProt582)
    if err583 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.KillQuery(value0))
    fmt.Print("\n")
    break
  case "reportTaskFinish":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ReportTaskFinish requires 1 args")
      flag.Usage()
    }
    arg606 := flag.Arg(1)
    mbTrans607 := thrift.NewMemoryBufferLen(len(arg606))
    defer mbTrans607.Close()
    _, err608 := mbTrans607.WriteString(arg606)
    if err608 != nil {
      Usage()
      return
    }
    factory587 := thrift.NewSimpleJSONProtocolFactory()
    jsProt588 := factory587.GetProtocol(mbTrans585)
    argvalue0 := meta.NewReportTaskReq()
    err589 := argvalue0.Read(jsProt588)
    if err589 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ReportTaskFinish(value0))
    fmt.Print("\n")
    break
  case "createBackup":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateBackup requires 1 args")
      flag.Usage()
    }
    arg590 := flag.Arg(1)
    mbTrans591 := thrift.NewMemoryBufferLen(len(arg590))
    defer mbTrans591.Close()
    _, err592 := mbTrans591.WriteString(arg590)
    if err592 != nil {
      Usage()
      return
    }
    factory593 := thrift.NewSimpleJSONProtocolFactory()
    jsProt594 := factory593.GetProtocol(mbTrans591)
    argvalue0 := meta.NewCreateBackupReq()
    err595 := argvalue0.Read(jsProt594)
    if err595 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateBackup(value0))
    fmt.Print("\n")
    break
  case "restoreMeta":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RestoreMeta requires 1 args")
      flag.Usage()
    }
    arg596 := flag.Arg(1)
    mbTrans597 := thrift.NewMemoryBufferLen(len(arg596))
    defer mbTrans597.Close()
    _, err598 := mbTrans597.WriteString(arg596)
    if err598 != nil {
      Usage()
      return
    }
    factory599 := thrift.NewSimpleJSONProtocolFactory()
    jsProt600 := factory599.GetProtocol(mbTrans597)
    argvalue0 := meta.NewRestoreMetaReq()
    err601 := argvalue0.Read(jsProt600)
    if err601 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RestoreMeta(value0))
    fmt.Print("\n")
    break
  case "listCluster":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListCluster requires 1 args")
      flag.Usage()
    }
    arg602 := flag.Arg(1)
    mbTrans603 := thrift.NewMemoryBufferLen(len(arg602))
    defer mbTrans603.Close()
    _, err604 := mbTrans603.WriteString(arg602)
    if err604 != nil {
      Usage()
      return
    }
    factory605 := thrift.NewSimpleJSONProtocolFactory()
    jsProt606 := factory605.GetProtocol(mbTrans603)
    argvalue0 := meta.NewListClusterInfoReq()
    err607 := argvalue0.Read(jsProt606)
    if err607 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListCluster(value0))
    fmt.Print("\n")
    break
  case "getMetaDirInfo":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetMetaDirInfo requires 1 args")
      flag.Usage()
    }
    arg608 := flag.Arg(1)
    mbTrans609 := thrift.NewMemoryBufferLen(len(arg608))
    defer mbTrans609.Close()
    _, err610 := mbTrans609.WriteString(arg608)
    if err610 != nil {
      Usage()
      return
    }
    factory611 := thrift.NewSimpleJSONProtocolFactory()
    jsProt612 := factory611.GetProtocol(mbTrans609)
    argvalue0 := meta.NewGetMetaDirInfoReq()
    err613 := argvalue0.Read(jsProt612)
    if err613 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetMetaDirInfo(value0))
    fmt.Print("\n")
    break
  case "verifyClientVersion":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "VerifyClientVersion requires 1 args")
      flag.Usage()
    }
    arg614 := flag.Arg(1)
    mbTrans615 := thrift.NewMemoryBufferLen(len(arg614))
    defer mbTrans615.Close()
    _, err616 := mbTrans615.WriteString(arg614)
    if err616 != nil {
      Usage()
      return
    }
    factory617 := thrift.NewSimpleJSONProtocolFactory()
    jsProt618 := factory617.GetProtocol(mbTrans615)
    argvalue0 := meta.NewVerifyClientVersionReq()
    err619 := argvalue0.Read(jsProt618)
    if err619 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.VerifyClientVersion(value0))
    fmt.Print("\n")
    break
  case "":
    Usage()
    break
  default:
    fmt.Fprintln(os.Stderr, "Invalid function ", cmd)
  }
}
