// Autogenerated by Thrift Compiler (facebook)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
// @generated

package main

import (
        "flag"
        "fmt"
        "math"
        "net"
        "net/url"
        "os"
        "strconv"
        "strings"
        thrift "github.com/facebook/fbthrift/thrift/lib/go/thrift"
        "../../github.com/vesoft-inc/nebula-go/v3/nebula/meta"
)

func Usage() {
  fmt.Fprintln(os.Stderr, "Usage of ", os.Args[0], " [-h host:port] [-u url] [-f[ramed]] function [arg1 [arg2...]]:")
  flag.PrintDefaults()
  fmt.Fprintln(os.Stderr, "\nFunctions:")
  fmt.Fprintln(os.Stderr, "  ExecResp createSpace(CreateSpaceReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropSpace(DropSpaceReq req)")
  fmt.Fprintln(os.Stderr, "  GetSpaceResp getSpace(GetSpaceReq req)")
  fmt.Fprintln(os.Stderr, "  ListSpacesResp listSpaces(ListSpacesReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp alterSpace(AlterSpaceReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createSpaceAs(CreateSpaceAsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createTag(CreateTagReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp alterTag(AlterTagReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropTag(DropTagReq req)")
  fmt.Fprintln(os.Stderr, "  GetTagResp getTag(GetTagReq req)")
  fmt.Fprintln(os.Stderr, "  ListTagsResp listTags(ListTagsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createEdge(CreateEdgeReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp alterEdge(AlterEdgeReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropEdge(DropEdgeReq req)")
  fmt.Fprintln(os.Stderr, "  GetEdgeResp getEdge(GetEdgeReq req)")
  fmt.Fprintln(os.Stderr, "  ListEdgesResp listEdges(ListEdgesReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp addHosts(AddHostsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp addHostsIntoZone(AddHostsIntoZoneReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropHosts(DropHostsReq req)")
  fmt.Fprintln(os.Stderr, "  ListHostsResp listHosts(ListHostsReq req)")
  fmt.Fprintln(os.Stderr, "  GetPartsAllocResp getPartsAlloc(GetPartsAllocReq req)")
  fmt.Fprintln(os.Stderr, "  ListPartsResp listParts(ListPartsReq req)")
  fmt.Fprintln(os.Stderr, "  GetWorkerIdResp getWorkerId(GetWorkerIdReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp multiPut(MultiPutReq req)")
  fmt.Fprintln(os.Stderr, "  GetResp get(GetReq req)")
  fmt.Fprintln(os.Stderr, "  MultiGetResp multiGet(MultiGetReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp remove(RemoveReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp removeRange(RemoveRangeReq req)")
  fmt.Fprintln(os.Stderr, "  ScanResp scan(ScanReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createTagIndex(CreateTagIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropTagIndex(DropTagIndexReq req)")
  fmt.Fprintln(os.Stderr, "  GetTagIndexResp getTagIndex(GetTagIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ListTagIndexesResp listTagIndexes(ListTagIndexesReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp rebuildTagIndex(RebuildIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ListIndexStatusResp listTagIndexStatus(ListIndexStatusReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createEdgeIndex(CreateEdgeIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropEdgeIndex(DropEdgeIndexReq req)")
  fmt.Fprintln(os.Stderr, "  GetEdgeIndexResp getEdgeIndex(GetEdgeIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ListEdgeIndexesResp listEdgeIndexes(ListEdgeIndexesReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp rebuildEdgeIndex(RebuildIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ListIndexStatusResp listEdgeIndexStatus(ListIndexStatusReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createUser(CreateUserReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropUser(DropUserReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp alterUser(AlterUserReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp grantRole(GrantRoleReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp revokeRole(RevokeRoleReq req)")
  fmt.Fprintln(os.Stderr, "  ListUsersResp listUsers(ListUsersReq req)")
  fmt.Fprintln(os.Stderr, "  ListRolesResp listRoles(ListRolesReq req)")
  fmt.Fprintln(os.Stderr, "  ListRolesResp getUserRoles(GetUserRolesReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp changePassword(ChangePasswordReq req)")
  fmt.Fprintln(os.Stderr, "  HBResp heartBeat(HBReq req)")
  fmt.Fprintln(os.Stderr, "  AgentHBResp agentHeartbeat(AgentHBReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp regConfig(RegConfigReq req)")
  fmt.Fprintln(os.Stderr, "  GetConfigResp getConfig(GetConfigReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp setConfig(SetConfigReq req)")
  fmt.Fprintln(os.Stderr, "  ListConfigsResp listConfigs(ListConfigsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createSnapshot(CreateSnapshotReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropSnapshot(DropSnapshotReq req)")
  fmt.Fprintln(os.Stderr, "  ListSnapshotsResp listSnapshots(ListSnapshotsReq req)")
  fmt.Fprintln(os.Stderr, "  AdminJobResp runAdminJob(AdminJobReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp mergeZone(MergeZoneReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropZone(DropZoneReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp divideZone(DivideZoneReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp renameZone(RenameZoneReq req)")
  fmt.Fprintln(os.Stderr, "  GetZoneResp getZone(GetZoneReq req)")
  fmt.Fprintln(os.Stderr, "  ListZonesResp listZones(ListZonesReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp addListener(AddListenerReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp removeListener(RemoveListenerReq req)")
  fmt.Fprintln(os.Stderr, "  ListListenerResp listListener(ListListenerReq req)")
  fmt.Fprintln(os.Stderr, "  GetStatsResp getStats(GetStatsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp signInService(SignInServiceReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp signOutService(SignOutServiceReq req)")
  fmt.Fprintln(os.Stderr, "  ListServiceClientsResp listServiceClients(ListServiceClientsReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp createFTIndex(CreateFTIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp dropFTIndex(DropFTIndexReq req)")
  fmt.Fprintln(os.Stderr, "  ListFTIndexesResp listFTIndexes(ListFTIndexesReq req)")
  fmt.Fprintln(os.Stderr, "  CreateSessionResp createSession(CreateSessionReq req)")
  fmt.Fprintln(os.Stderr, "  UpdateSessionsResp updateSessions(UpdateSessionsReq req)")
  fmt.Fprintln(os.Stderr, "  ListSessionsResp listSessions(ListSessionsReq req)")
  fmt.Fprintln(os.Stderr, "  GetSessionResp getSession(GetSessionReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp removeSession(RemoveSessionReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp killQuery(KillQueryReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp reportTaskFinish(ReportTaskReq req)")
  fmt.Fprintln(os.Stderr, "  CreateBackupResp createBackup(CreateBackupReq req)")
  fmt.Fprintln(os.Stderr, "  ExecResp restoreMeta(RestoreMetaReq req)")
  fmt.Fprintln(os.Stderr, "  ListClusterInfoResp listCluster(ListClusterInfoReq req)")
  fmt.Fprintln(os.Stderr, "  GetMetaDirInfoResp getMetaDirInfo(GetMetaDirInfoReq req)")
  fmt.Fprintln(os.Stderr, "  VerifyClientVersionResp verifyClientVersion(VerifyClientVersionReq req)")
  fmt.Fprintln(os.Stderr)
  os.Exit(0)
}

func main() {
  flag.Usage = Usage
  var host string
  var port int
  var protocol string
  var urlString string
  var framed bool
  var useHttp bool
  var parsedUrl url.URL
  var trans thrift.Transport
  _ = strconv.Atoi
  _ = math.Abs
  flag.Usage = Usage
  flag.StringVar(&host, "h", "localhost", "Specify host")
  flag.IntVar(&port, "p", 9090, "Specify port")
  flag.StringVar(&protocol, "P", "binary", "Specify the protocol (binary, compact, simplejson, json)")
  flag.StringVar(&urlString, "u", "", "Specify the url")
  flag.BoolVar(&framed, "framed", false, "Use framed transport")
  flag.BoolVar(&useHttp, "http", false, "Use http")
  flag.Parse()
  
  if len(urlString) > 0 {
    parsedUrl, err := url.Parse(urlString)
    if err != nil {
      fmt.Fprintln(os.Stderr, "Error parsing URL: ", err)
      flag.Usage()
    }
    host = parsedUrl.Host
    useHttp = len(parsedUrl.Scheme) <= 0 || parsedUrl.Scheme == "http"
  } else if useHttp {
    _, err := url.Parse(fmt.Sprint("http://", host, ":", port))
    if err != nil {
      fmt.Fprintln(os.Stderr, "Error parsing URL: ", err)
      flag.Usage()
    }
  }
  
  cmd := flag.Arg(0)
  var err error
  if useHttp {
    trans, err = thrift.NewHTTPPostClient(parsedUrl.String())
  } else {
    portStr := fmt.Sprint(port)
    if strings.Contains(host, ":") {
           host, portStr, err = net.SplitHostPort(host)
           if err != nil {
                   fmt.Fprintln(os.Stderr, "error with host:", err)
                   os.Exit(1)
           }
    }
    trans, err = thrift.NewSocket(thrift.SocketAddr(net.JoinHostPort(host, portStr)))
    if err != nil {
      fmt.Fprintln(os.Stderr, "error resolving address:", err)
      os.Exit(1)
    }
    if framed {
      trans = thrift.NewFramedTransport(trans)
    }
  }
  if err != nil {
    fmt.Fprintln(os.Stderr, "Error creating transport", err)
    os.Exit(1)
  }
  defer trans.Close()
  var protocolFactory thrift.ProtocolFactory
  switch protocol {
  case "compact":
    protocolFactory = thrift.NewCompactProtocolFactory()
    break
  case "simplejson":
    protocolFactory = thrift.NewSimpleJSONProtocolFactory()
    break
  case "json":
    protocolFactory = thrift.NewJSONProtocolFactory()
    break
  case "binary", "":
    protocolFactory = thrift.NewBinaryProtocolFactoryDefault()
    break
  default:
    fmt.Fprintln(os.Stderr, "Invalid protocol specified: ", protocol)
    Usage()
    os.Exit(1)
  }
  client := meta.NewMetaServiceClientFactory(trans, protocolFactory)
  if err := trans.Open(); err != nil {
    fmt.Fprintln(os.Stderr, "Error opening socket to ", host, ":", port, " ", err)
    os.Exit(1)
  }
  
  switch cmd {
  case "createSpace":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateSpace requires 1 args")
      flag.Usage()
    }
    arg110 := flag.Arg(1)
    mbTrans111 := thrift.NewMemoryBufferLen(len(arg110))
    defer mbTrans111.Close()
    _, err112 := mbTrans111.WriteString(arg110)
    if err112 != nil {
      Usage()
      return
    }
    factory113 := thrift.NewSimpleJSONProtocolFactory()
    jsProt114 := factory113.GetProtocol(mbTrans111)
    argvalue0 := meta.NewCreateSpaceReq()
    err115 := argvalue0.Read(jsProt114)
    if err115 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateSpace(value0))
    fmt.Print("\n")
    break
  case "dropSpace":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropSpace requires 1 args")
      flag.Usage()
    }
    arg116 := flag.Arg(1)
    mbTrans117 := thrift.NewMemoryBufferLen(len(arg116))
    defer mbTrans117.Close()
    _, err118 := mbTrans117.WriteString(arg116)
    if err118 != nil {
      Usage()
      return
    }
    factory119 := thrift.NewSimpleJSONProtocolFactory()
    jsProt120 := factory119.GetProtocol(mbTrans117)
    argvalue0 := meta.NewDropSpaceReq()
    err121 := argvalue0.Read(jsProt120)
    if err121 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropSpace(value0))
    fmt.Print("\n")
    break
  case "getSpace":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetSpace requires 1 args")
      flag.Usage()
    }
    arg122 := flag.Arg(1)
    mbTrans123 := thrift.NewMemoryBufferLen(len(arg122))
    defer mbTrans123.Close()
    _, err124 := mbTrans123.WriteString(arg122)
    if err124 != nil {
      Usage()
      return
    }
    factory125 := thrift.NewSimpleJSONProtocolFactory()
    jsProt126 := factory125.GetProtocol(mbTrans123)
    argvalue0 := meta.NewGetSpaceReq()
    err127 := argvalue0.Read(jsProt126)
    if err127 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetSpace(value0))
    fmt.Print("\n")
    break
  case "listSpaces":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListSpaces requires 1 args")
      flag.Usage()
    }
    arg128 := flag.Arg(1)
    mbTrans129 := thrift.NewMemoryBufferLen(len(arg128))
    defer mbTrans129.Close()
    _, err130 := mbTrans129.WriteString(arg128)
    if err130 != nil {
      Usage()
      return
    }
    factory131 := thrift.NewSimpleJSONProtocolFactory()
    jsProt132 := factory131.GetProtocol(mbTrans129)
    argvalue0 := meta.NewListSpacesReq()
    err133 := argvalue0.Read(jsProt132)
    if err133 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListSpaces(value0))
    fmt.Print("\n")
    break
  case "alterSpace":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AlterSpace requires 1 args")
      flag.Usage()
    }
    arg134 := flag.Arg(1)
    mbTrans135 := thrift.NewMemoryBufferLen(len(arg134))
    defer mbTrans135.Close()
    _, err136 := mbTrans135.WriteString(arg134)
    if err136 != nil {
      Usage()
      return
    }
    factory137 := thrift.NewSimpleJSONProtocolFactory()
    jsProt138 := factory137.GetProtocol(mbTrans135)
    argvalue0 := meta.NewAlterSpaceReq()
    err139 := argvalue0.Read(jsProt138)
    if err139 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AlterSpace(value0))
    fmt.Print("\n")
    break
  case "createSpaceAs":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateSpaceAs requires 1 args")
      flag.Usage()
    }
    arg140 := flag.Arg(1)
    mbTrans141 := thrift.NewMemoryBufferLen(len(arg140))
    defer mbTrans141.Close()
    _, err142 := mbTrans141.WriteString(arg140)
    if err142 != nil {
      Usage()
      return
    }
    factory143 := thrift.NewSimpleJSONProtocolFactory()
    jsProt144 := factory143.GetProtocol(mbTrans141)
    argvalue0 := meta.NewCreateSpaceAsReq()
    err145 := argvalue0.Read(jsProt144)
    if err145 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateSpaceAs(value0))
    fmt.Print("\n")
    break
  case "createTag":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateTag requires 1 args")
      flag.Usage()
    }
    arg146 := flag.Arg(1)
    mbTrans147 := thrift.NewMemoryBufferLen(len(arg146))
    defer mbTrans147.Close()
    _, err148 := mbTrans147.WriteString(arg146)
    if err148 != nil {
      Usage()
      return
    }
    factory149 := thrift.NewSimpleJSONProtocolFactory()
    jsProt150 := factory149.GetProtocol(mbTrans147)
    argvalue0 := meta.NewCreateTagReq()
    err151 := argvalue0.Read(jsProt150)
    if err151 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateTag(value0))
    fmt.Print("\n")
    break
  case "alterTag":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AlterTag requires 1 args")
      flag.Usage()
    }
    arg152 := flag.Arg(1)
    mbTrans153 := thrift.NewMemoryBufferLen(len(arg152))
    defer mbTrans153.Close()
    _, err154 := mbTrans153.WriteString(arg152)
    if err154 != nil {
      Usage()
      return
    }
    factory155 := thrift.NewSimpleJSONProtocolFactory()
    jsProt156 := factory155.GetProtocol(mbTrans153)
    argvalue0 := meta.NewAlterTagReq()
    err157 := argvalue0.Read(jsProt156)
    if err157 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AlterTag(value0))
    fmt.Print("\n")
    break
  case "dropTag":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropTag requires 1 args")
      flag.Usage()
    }
    arg158 := flag.Arg(1)
    mbTrans159 := thrift.NewMemoryBufferLen(len(arg158))
    defer mbTrans159.Close()
    _, err160 := mbTrans159.WriteString(arg158)
    if err160 != nil {
      Usage()
      return
    }
    factory161 := thrift.NewSimpleJSONProtocolFactory()
    jsProt162 := factory161.GetProtocol(mbTrans159)
    argvalue0 := meta.NewDropTagReq()
    err163 := argvalue0.Read(jsProt162)
    if err163 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropTag(value0))
    fmt.Print("\n")
    break
  case "getTag":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetTag requires 1 args")
      flag.Usage()
    }
    arg164 := flag.Arg(1)
    mbTrans165 := thrift.NewMemoryBufferLen(len(arg164))
    defer mbTrans165.Close()
    _, err166 := mbTrans165.WriteString(arg164)
    if err166 != nil {
      Usage()
      return
    }
    factory167 := thrift.NewSimpleJSONProtocolFactory()
    jsProt168 := factory167.GetProtocol(mbTrans165)
    argvalue0 := meta.NewGetTagReq()
    err169 := argvalue0.Read(jsProt168)
    if err169 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetTag(value0))
    fmt.Print("\n")
    break
  case "listTags":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListTags requires 1 args")
      flag.Usage()
    }
    arg170 := flag.Arg(1)
    mbTrans171 := thrift.NewMemoryBufferLen(len(arg170))
    defer mbTrans171.Close()
    _, err172 := mbTrans171.WriteString(arg170)
    if err172 != nil {
      Usage()
      return
    }
    factory173 := thrift.NewSimpleJSONProtocolFactory()
    jsProt174 := factory173.GetProtocol(mbTrans171)
    argvalue0 := meta.NewListTagsReq()
    err175 := argvalue0.Read(jsProt174)
    if err175 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListTags(value0))
    fmt.Print("\n")
    break
  case "createEdge":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateEdge requires 1 args")
      flag.Usage()
    }
    arg176 := flag.Arg(1)
    mbTrans177 := thrift.NewMemoryBufferLen(len(arg176))
    defer mbTrans177.Close()
    _, err178 := mbTrans177.WriteString(arg176)
    if err178 != nil {
      Usage()
      return
    }
    factory179 := thrift.NewSimpleJSONProtocolFactory()
    jsProt180 := factory179.GetProtocol(mbTrans177)
    argvalue0 := meta.NewCreateEdgeReq()
    err181 := argvalue0.Read(jsProt180)
    if err181 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateEdge(value0))
    fmt.Print("\n")
    break
  case "alterEdge":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AlterEdge requires 1 args")
      flag.Usage()
    }
    arg182 := flag.Arg(1)
    mbTrans183 := thrift.NewMemoryBufferLen(len(arg182))
    defer mbTrans183.Close()
    _, err184 := mbTrans183.WriteString(arg182)
    if err184 != nil {
      Usage()
      return
    }
    factory185 := thrift.NewSimpleJSONProtocolFactory()
    jsProt186 := factory185.GetProtocol(mbTrans183)
    argvalue0 := meta.NewAlterEdgeReq()
    err187 := argvalue0.Read(jsProt186)
    if err187 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AlterEdge(value0))
    fmt.Print("\n")
    break
  case "dropEdge":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropEdge requires 1 args")
      flag.Usage()
    }
    arg188 := flag.Arg(1)
    mbTrans189 := thrift.NewMemoryBufferLen(len(arg188))
    defer mbTrans189.Close()
    _, err190 := mbTrans189.WriteString(arg188)
    if err190 != nil {
      Usage()
      return
    }
    factory191 := thrift.NewSimpleJSONProtocolFactory()
    jsProt192 := factory191.GetProtocol(mbTrans189)
    argvalue0 := meta.NewDropEdgeReq()
    err193 := argvalue0.Read(jsProt192)
    if err193 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropEdge(value0))
    fmt.Print("\n")
    break
  case "getEdge":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetEdge requires 1 args")
      flag.Usage()
    }
    arg194 := flag.Arg(1)
    mbTrans195 := thrift.NewMemoryBufferLen(len(arg194))
    defer mbTrans195.Close()
    _, err196 := mbTrans195.WriteString(arg194)
    if err196 != nil {
      Usage()
      return
    }
    factory197 := thrift.NewSimpleJSONProtocolFactory()
    jsProt198 := factory197.GetProtocol(mbTrans195)
    argvalue0 := meta.NewGetEdgeReq()
    err199 := argvalue0.Read(jsProt198)
    if err199 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetEdge(value0))
    fmt.Print("\n")
    break
  case "listEdges":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListEdges requires 1 args")
      flag.Usage()
    }
    arg200 := flag.Arg(1)
    mbTrans201 := thrift.NewMemoryBufferLen(len(arg200))
    defer mbTrans201.Close()
    _, err202 := mbTrans201.WriteString(arg200)
    if err202 != nil {
      Usage()
      return
    }
    factory203 := thrift.NewSimpleJSONProtocolFactory()
    jsProt204 := factory203.GetProtocol(mbTrans201)
    argvalue0 := meta.NewListEdgesReq()
    err205 := argvalue0.Read(jsProt204)
    if err205 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListEdges(value0))
    fmt.Print("\n")
    break
  case "addHosts":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AddHosts requires 1 args")
      flag.Usage()
    }
    arg206 := flag.Arg(1)
    mbTrans207 := thrift.NewMemoryBufferLen(len(arg206))
    defer mbTrans207.Close()
    _, err208 := mbTrans207.WriteString(arg206)
    if err208 != nil {
      Usage()
      return
    }
    factory209 := thrift.NewSimpleJSONProtocolFactory()
    jsProt210 := factory209.GetProtocol(mbTrans207)
    argvalue0 := meta.NewAddHostsReq()
    err211 := argvalue0.Read(jsProt210)
    if err211 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AddHosts(value0))
    fmt.Print("\n")
    break
  case "addHostsIntoZone":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AddHostsIntoZone requires 1 args")
      flag.Usage()
    }
    arg212 := flag.Arg(1)
    mbTrans213 := thrift.NewMemoryBufferLen(len(arg212))
    defer mbTrans213.Close()
    _, err214 := mbTrans213.WriteString(arg212)
    if err214 != nil {
      Usage()
      return
    }
    factory215 := thrift.NewSimpleJSONProtocolFactory()
    jsProt216 := factory215.GetProtocol(mbTrans213)
    argvalue0 := meta.NewAddHostsIntoZoneReq()
    err217 := argvalue0.Read(jsProt216)
    if err217 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AddHostsIntoZone(value0))
    fmt.Print("\n")
    break
  case "dropHosts":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropHosts requires 1 args")
      flag.Usage()
    }
    arg218 := flag.Arg(1)
    mbTrans219 := thrift.NewMemoryBufferLen(len(arg218))
    defer mbTrans219.Close()
    _, err220 := mbTrans219.WriteString(arg218)
    if err220 != nil {
      Usage()
      return
    }
    factory221 := thrift.NewSimpleJSONProtocolFactory()
    jsProt222 := factory221.GetProtocol(mbTrans219)
    argvalue0 := meta.NewDropHostsReq()
    err223 := argvalue0.Read(jsProt222)
    if err223 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropHosts(value0))
    fmt.Print("\n")
    break
  case "listHosts":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListHosts requires 1 args")
      flag.Usage()
    }
    arg224 := flag.Arg(1)
    mbTrans225 := thrift.NewMemoryBufferLen(len(arg224))
    defer mbTrans225.Close()
    _, err226 := mbTrans225.WriteString(arg224)
    if err226 != nil {
      Usage()
      return
    }
    factory227 := thrift.NewSimpleJSONProtocolFactory()
    jsProt228 := factory227.GetProtocol(mbTrans225)
    argvalue0 := meta.NewListHostsReq()
    err229 := argvalue0.Read(jsProt228)
    if err229 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListHosts(value0))
    fmt.Print("\n")
    break
  case "getPartsAlloc":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetPartsAlloc requires 1 args")
      flag.Usage()
    }
    arg230 := flag.Arg(1)
    mbTrans231 := thrift.NewMemoryBufferLen(len(arg230))
    defer mbTrans231.Close()
    _, err232 := mbTrans231.WriteString(arg230)
    if err232 != nil {
      Usage()
      return
    }
    factory233 := thrift.NewSimpleJSONProtocolFactory()
    jsProt234 := factory233.GetProtocol(mbTrans231)
    argvalue0 := meta.NewGetPartsAllocReq()
    err235 := argvalue0.Read(jsProt234)
    if err235 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetPartsAlloc(value0))
    fmt.Print("\n")
    break
  case "listParts":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListParts requires 1 args")
      flag.Usage()
    }
    arg236 := flag.Arg(1)
    mbTrans237 := thrift.NewMemoryBufferLen(len(arg236))
    defer mbTrans237.Close()
    _, err238 := mbTrans237.WriteString(arg236)
    if err238 != nil {
      Usage()
      return
    }
    factory239 := thrift.NewSimpleJSONProtocolFactory()
    jsProt240 := factory239.GetProtocol(mbTrans237)
    argvalue0 := meta.NewListPartsReq()
    err241 := argvalue0.Read(jsProt240)
    if err241 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListParts(value0))
    fmt.Print("\n")
    break
  case "getWorkerId":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetWorkerId requires 1 args")
      flag.Usage()
    }
    arg242 := flag.Arg(1)
    mbTrans243 := thrift.NewMemoryBufferLen(len(arg242))
    defer mbTrans243.Close()
    _, err244 := mbTrans243.WriteString(arg242)
    if err244 != nil {
      Usage()
      return
    }
    factory245 := thrift.NewSimpleJSONProtocolFactory()
    jsProt246 := factory245.GetProtocol(mbTrans243)
    argvalue0 := meta.NewGetWorkerIdReq()
    err247 := argvalue0.Read(jsProt246)
    if err247 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetWorkerId(value0))
    fmt.Print("\n")
    break
  case "multiPut":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "MultiPut requires 1 args")
      flag.Usage()
    }
    arg248 := flag.Arg(1)
    mbTrans249 := thrift.NewMemoryBufferLen(len(arg248))
    defer mbTrans249.Close()
    _, err250 := mbTrans249.WriteString(arg248)
    if err250 != nil {
      Usage()
      return
    }
    factory251 := thrift.NewSimpleJSONProtocolFactory()
    jsProt252 := factory251.GetProtocol(mbTrans249)
    argvalue0 := meta.NewMultiPutReq()
    err253 := argvalue0.Read(jsProt252)
    if err253 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.MultiPut(value0))
    fmt.Print("\n")
    break
  case "get":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "Get requires 1 args")
      flag.Usage()
    }
    arg254 := flag.Arg(1)
    mbTrans255 := thrift.NewMemoryBufferLen(len(arg254))
    defer mbTrans255.Close()
    _, err256 := mbTrans255.WriteString(arg254)
    if err256 != nil {
      Usage()
      return
    }
    factory257 := thrift.NewSimpleJSONProtocolFactory()
    jsProt258 := factory257.GetProtocol(mbTrans255)
    argvalue0 := meta.NewGetReq()
    err259 := argvalue0.Read(jsProt258)
    if err259 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.Get(value0))
    fmt.Print("\n")
    break
  case "multiGet":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "MultiGet requires 1 args")
      flag.Usage()
    }
    arg260 := flag.Arg(1)
    mbTrans261 := thrift.NewMemoryBufferLen(len(arg260))
    defer mbTrans261.Close()
    _, err262 := mbTrans261.WriteString(arg260)
    if err262 != nil {
      Usage()
      return
    }
    factory263 := thrift.NewSimpleJSONProtocolFactory()
    jsProt264 := factory263.GetProtocol(mbTrans261)
    argvalue0 := meta.NewMultiGetReq()
    err265 := argvalue0.Read(jsProt264)
    if err265 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.MultiGet(value0))
    fmt.Print("\n")
    break
  case "remove":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "Remove requires 1 args")
      flag.Usage()
    }
    arg266 := flag.Arg(1)
    mbTrans267 := thrift.NewMemoryBufferLen(len(arg266))
    defer mbTrans267.Close()
    _, err268 := mbTrans267.WriteString(arg266)
    if err268 != nil {
      Usage()
      return
    }
    factory269 := thrift.NewSimpleJSONProtocolFactory()
    jsProt270 := factory269.GetProtocol(mbTrans267)
    argvalue0 := meta.NewRemoveReq()
    err271 := argvalue0.Read(jsProt270)
    if err271 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.Remove(value0))
    fmt.Print("\n")
    break
  case "removeRange":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RemoveRange requires 1 args")
      flag.Usage()
    }
    arg272 := flag.Arg(1)
    mbTrans273 := thrift.NewMemoryBufferLen(len(arg272))
    defer mbTrans273.Close()
    _, err274 := mbTrans273.WriteString(arg272)
    if err274 != nil {
      Usage()
      return
    }
    factory275 := thrift.NewSimpleJSONProtocolFactory()
    jsProt276 := factory275.GetProtocol(mbTrans273)
    argvalue0 := meta.NewRemoveRangeReq()
    err277 := argvalue0.Read(jsProt276)
    if err277 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RemoveRange(value0))
    fmt.Print("\n")
    break
  case "scan":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "Scan requires 1 args")
      flag.Usage()
    }
    arg278 := flag.Arg(1)
    mbTrans279 := thrift.NewMemoryBufferLen(len(arg278))
    defer mbTrans279.Close()
    _, err280 := mbTrans279.WriteString(arg278)
    if err280 != nil {
      Usage()
      return
    }
    factory281 := thrift.NewSimpleJSONProtocolFactory()
    jsProt282 := factory281.GetProtocol(mbTrans279)
    argvalue0 := meta.NewScanReq()
    err283 := argvalue0.Read(jsProt282)
    if err283 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.Scan(value0))
    fmt.Print("\n")
    break
  case "createTagIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateTagIndex requires 1 args")
      flag.Usage()
    }
    arg284 := flag.Arg(1)
    mbTrans285 := thrift.NewMemoryBufferLen(len(arg284))
    defer mbTrans285.Close()
    _, err286 := mbTrans285.WriteString(arg284)
    if err286 != nil {
      Usage()
      return
    }
    factory287 := thrift.NewSimpleJSONProtocolFactory()
    jsProt288 := factory287.GetProtocol(mbTrans285)
    argvalue0 := meta.NewCreateTagIndexReq()
    err289 := argvalue0.Read(jsProt288)
    if err289 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateTagIndex(value0))
    fmt.Print("\n")
    break
  case "dropTagIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropTagIndex requires 1 args")
      flag.Usage()
    }
    arg290 := flag.Arg(1)
    mbTrans291 := thrift.NewMemoryBufferLen(len(arg290))
    defer mbTrans291.Close()
    _, err292 := mbTrans291.WriteString(arg290)
    if err292 != nil {
      Usage()
      return
    }
    factory293 := thrift.NewSimpleJSONProtocolFactory()
    jsProt294 := factory293.GetProtocol(mbTrans291)
    argvalue0 := meta.NewDropTagIndexReq()
    err295 := argvalue0.Read(jsProt294)
    if err295 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropTagIndex(value0))
    fmt.Print("\n")
    break
  case "getTagIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetTagIndex requires 1 args")
      flag.Usage()
    }
    arg296 := flag.Arg(1)
    mbTrans297 := thrift.NewMemoryBufferLen(len(arg296))
    defer mbTrans297.Close()
    _, err298 := mbTrans297.WriteString(arg296)
    if err298 != nil {
      Usage()
      return
    }
    factory299 := thrift.NewSimpleJSONProtocolFactory()
    jsProt300 := factory299.GetProtocol(mbTrans297)
    argvalue0 := meta.NewGetTagIndexReq()
    err301 := argvalue0.Read(jsProt300)
    if err301 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetTagIndex(value0))
    fmt.Print("\n")
    break
  case "listTagIndexes":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListTagIndexes requires 1 args")
      flag.Usage()
    }
    arg302 := flag.Arg(1)
    mbTrans303 := thrift.NewMemoryBufferLen(len(arg302))
    defer mbTrans303.Close()
    _, err304 := mbTrans303.WriteString(arg302)
    if err304 != nil {
      Usage()
      return
    }
    factory305 := thrift.NewSimpleJSONProtocolFactory()
    jsProt306 := factory305.GetProtocol(mbTrans303)
    argvalue0 := meta.NewListTagIndexesReq()
    err307 := argvalue0.Read(jsProt306)
    if err307 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListTagIndexes(value0))
    fmt.Print("\n")
    break
  case "rebuildTagIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RebuildTagIndex requires 1 args")
      flag.Usage()
    }
    arg308 := flag.Arg(1)
    mbTrans309 := thrift.NewMemoryBufferLen(len(arg308))
    defer mbTrans309.Close()
    _, err310 := mbTrans309.WriteString(arg308)
    if err310 != nil {
      Usage()
      return
    }
    factory311 := thrift.NewSimpleJSONProtocolFactory()
    jsProt312 := factory311.GetProtocol(mbTrans309)
    argvalue0 := meta.NewRebuildIndexReq()
    err313 := argvalue0.Read(jsProt312)
    if err313 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RebuildTagIndex(value0))
    fmt.Print("\n")
    break
  case "listTagIndexStatus":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListTagIndexStatus requires 1 args")
      flag.Usage()
    }
    arg314 := flag.Arg(1)
    mbTrans315 := thrift.NewMemoryBufferLen(len(arg314))
    defer mbTrans315.Close()
    _, err316 := mbTrans315.WriteString(arg314)
    if err316 != nil {
      Usage()
      return
    }
    factory317 := thrift.NewSimpleJSONProtocolFactory()
    jsProt318 := factory317.GetProtocol(mbTrans315)
    argvalue0 := meta.NewListIndexStatusReq()
    err319 := argvalue0.Read(jsProt318)
    if err319 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListTagIndexStatus(value0))
    fmt.Print("\n")
    break
  case "createEdgeIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateEdgeIndex requires 1 args")
      flag.Usage()
    }
    arg320 := flag.Arg(1)
    mbTrans321 := thrift.NewMemoryBufferLen(len(arg320))
    defer mbTrans321.Close()
    _, err322 := mbTrans321.WriteString(arg320)
    if err322 != nil {
      Usage()
      return
    }
    factory323 := thrift.NewSimpleJSONProtocolFactory()
    jsProt324 := factory323.GetProtocol(mbTrans321)
    argvalue0 := meta.NewCreateEdgeIndexReq()
    err325 := argvalue0.Read(jsProt324)
    if err325 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateEdgeIndex(value0))
    fmt.Print("\n")
    break
  case "dropEdgeIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropEdgeIndex requires 1 args")
      flag.Usage()
    }
    arg326 := flag.Arg(1)
    mbTrans327 := thrift.NewMemoryBufferLen(len(arg326))
    defer mbTrans327.Close()
    _, err328 := mbTrans327.WriteString(arg326)
    if err328 != nil {
      Usage()
      return
    }
    factory329 := thrift.NewSimpleJSONProtocolFactory()
    jsProt330 := factory329.GetProtocol(mbTrans327)
    argvalue0 := meta.NewDropEdgeIndexReq()
    err331 := argvalue0.Read(jsProt330)
    if err331 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropEdgeIndex(value0))
    fmt.Print("\n")
    break
  case "getEdgeIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetEdgeIndex requires 1 args")
      flag.Usage()
    }
    arg332 := flag.Arg(1)
    mbTrans333 := thrift.NewMemoryBufferLen(len(arg332))
    defer mbTrans333.Close()
    _, err334 := mbTrans333.WriteString(arg332)
    if err334 != nil {
      Usage()
      return
    }
    factory335 := thrift.NewSimpleJSONProtocolFactory()
    jsProt336 := factory335.GetProtocol(mbTrans333)
    argvalue0 := meta.NewGetEdgeIndexReq()
    err337 := argvalue0.Read(jsProt336)
    if err337 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetEdgeIndex(value0))
    fmt.Print("\n")
    break
  case "listEdgeIndexes":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListEdgeIndexes requires 1 args")
      flag.Usage()
    }
    arg338 := flag.Arg(1)
    mbTrans339 := thrift.NewMemoryBufferLen(len(arg338))
    defer mbTrans339.Close()
    _, err340 := mbTrans339.WriteString(arg338)
    if err340 != nil {
      Usage()
      return
    }
    factory341 := thrift.NewSimpleJSONProtocolFactory()
    jsProt342 := factory341.GetProtocol(mbTrans339)
    argvalue0 := meta.NewListEdgeIndexesReq()
    err343 := argvalue0.Read(jsProt342)
    if err343 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListEdgeIndexes(value0))
    fmt.Print("\n")
    break
  case "rebuildEdgeIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RebuildEdgeIndex requires 1 args")
      flag.Usage()
    }
    arg344 := flag.Arg(1)
    mbTrans345 := thrift.NewMemoryBufferLen(len(arg344))
    defer mbTrans345.Close()
    _, err346 := mbTrans345.WriteString(arg344)
    if err346 != nil {
      Usage()
      return
    }
    factory347 := thrift.NewSimpleJSONProtocolFactory()
    jsProt348 := factory347.GetProtocol(mbTrans345)
    argvalue0 := meta.NewRebuildIndexReq()
    err349 := argvalue0.Read(jsProt348)
    if err349 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RebuildEdgeIndex(value0))
    fmt.Print("\n")
    break
  case "listEdgeIndexStatus":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListEdgeIndexStatus requires 1 args")
      flag.Usage()
    }
    arg350 := flag.Arg(1)
    mbTrans351 := thrift.NewMemoryBufferLen(len(arg350))
    defer mbTrans351.Close()
    _, err352 := mbTrans351.WriteString(arg350)
    if err352 != nil {
      Usage()
      return
    }
    factory353 := thrift.NewSimpleJSONProtocolFactory()
    jsProt354 := factory353.GetProtocol(mbTrans351)
    argvalue0 := meta.NewListIndexStatusReq()
    err355 := argvalue0.Read(jsProt354)
    if err355 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListEdgeIndexStatus(value0))
    fmt.Print("\n")
    break
  case "createUser":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateUser requires 1 args")
      flag.Usage()
    }
    arg356 := flag.Arg(1)
    mbTrans357 := thrift.NewMemoryBufferLen(len(arg356))
    defer mbTrans357.Close()
    _, err358 := mbTrans357.WriteString(arg356)
    if err358 != nil {
      Usage()
      return
    }
    factory359 := thrift.NewSimpleJSONProtocolFactory()
    jsProt360 := factory359.GetProtocol(mbTrans357)
    argvalue0 := meta.NewCreateUserReq()
    err361 := argvalue0.Read(jsProt360)
    if err361 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateUser(value0))
    fmt.Print("\n")
    break
  case "dropUser":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropUser requires 1 args")
      flag.Usage()
    }
    arg362 := flag.Arg(1)
    mbTrans363 := thrift.NewMemoryBufferLen(len(arg362))
    defer mbTrans363.Close()
    _, err364 := mbTrans363.WriteString(arg362)
    if err364 != nil {
      Usage()
      return
    }
    factory365 := thrift.NewSimpleJSONProtocolFactory()
    jsProt366 := factory365.GetProtocol(mbTrans363)
    argvalue0 := meta.NewDropUserReq()
    err367 := argvalue0.Read(jsProt366)
    if err367 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropUser(value0))
    fmt.Print("\n")
    break
  case "alterUser":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AlterUser requires 1 args")
      flag.Usage()
    }
    arg368 := flag.Arg(1)
    mbTrans369 := thrift.NewMemoryBufferLen(len(arg368))
    defer mbTrans369.Close()
    _, err370 := mbTrans369.WriteString(arg368)
    if err370 != nil {
      Usage()
      return
    }
    factory371 := thrift.NewSimpleJSONProtocolFactory()
    jsProt372 := factory371.GetProtocol(mbTrans369)
    argvalue0 := meta.NewAlterUserReq()
    err373 := argvalue0.Read(jsProt372)
    if err373 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AlterUser(value0))
    fmt.Print("\n")
    break
  case "grantRole":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GrantRole requires 1 args")
      flag.Usage()
    }
    arg374 := flag.Arg(1)
    mbTrans375 := thrift.NewMemoryBufferLen(len(arg374))
    defer mbTrans375.Close()
    _, err376 := mbTrans375.WriteString(arg374)
    if err376 != nil {
      Usage()
      return
    }
    factory377 := thrift.NewSimpleJSONProtocolFactory()
    jsProt378 := factory377.GetProtocol(mbTrans375)
    argvalue0 := meta.NewGrantRoleReq()
    err379 := argvalue0.Read(jsProt378)
    if err379 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GrantRole(value0))
    fmt.Print("\n")
    break
  case "revokeRole":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RevokeRole requires 1 args")
      flag.Usage()
    }
    arg380 := flag.Arg(1)
    mbTrans381 := thrift.NewMemoryBufferLen(len(arg380))
    defer mbTrans381.Close()
    _, err382 := mbTrans381.WriteString(arg380)
    if err382 != nil {
      Usage()
      return
    }
    factory383 := thrift.NewSimpleJSONProtocolFactory()
    jsProt384 := factory383.GetProtocol(mbTrans381)
    argvalue0 := meta.NewRevokeRoleReq()
    err385 := argvalue0.Read(jsProt384)
    if err385 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RevokeRole(value0))
    fmt.Print("\n")
    break
  case "listUsers":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListUsers requires 1 args")
      flag.Usage()
    }
    arg386 := flag.Arg(1)
    mbTrans387 := thrift.NewMemoryBufferLen(len(arg386))
    defer mbTrans387.Close()
    _, err388 := mbTrans387.WriteString(arg386)
    if err388 != nil {
      Usage()
      return
    }
    factory389 := thrift.NewSimpleJSONProtocolFactory()
    jsProt390 := factory389.GetProtocol(mbTrans387)
    argvalue0 := meta.NewListUsersReq()
    err391 := argvalue0.Read(jsProt390)
    if err391 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListUsers(value0))
    fmt.Print("\n")
    break
  case "listRoles":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListRoles requires 1 args")
      flag.Usage()
    }
    arg392 := flag.Arg(1)
    mbTrans393 := thrift.NewMemoryBufferLen(len(arg392))
    defer mbTrans393.Close()
    _, err394 := mbTrans393.WriteString(arg392)
    if err394 != nil {
      Usage()
      return
    }
    factory395 := thrift.NewSimpleJSONProtocolFactory()
    jsProt396 := factory395.GetProtocol(mbTrans393)
    argvalue0 := meta.NewListRolesReq()
    err397 := argvalue0.Read(jsProt396)
    if err397 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListRoles(value0))
    fmt.Print("\n")
    break
  case "getUserRoles":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetUserRoles requires 1 args")
      flag.Usage()
    }
    arg398 := flag.Arg(1)
    mbTrans399 := thrift.NewMemoryBufferLen(len(arg398))
    defer mbTrans399.Close()
    _, err400 := mbTrans399.WriteString(arg398)
    if err400 != nil {
      Usage()
      return
    }
    factory401 := thrift.NewSimpleJSONProtocolFactory()
    jsProt402 := factory401.GetProtocol(mbTrans399)
    argvalue0 := meta.NewGetUserRolesReq()
    err403 := argvalue0.Read(jsProt402)
    if err403 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetUserRoles(value0))
    fmt.Print("\n")
    break
  case "changePassword":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ChangePassword requires 1 args")
      flag.Usage()
    }
    arg404 := flag.Arg(1)
    mbTrans405 := thrift.NewMemoryBufferLen(len(arg404))
    defer mbTrans405.Close()
    _, err406 := mbTrans405.WriteString(arg404)
    if err406 != nil {
      Usage()
      return
    }
    factory407 := thrift.NewSimpleJSONProtocolFactory()
    jsProt408 := factory407.GetProtocol(mbTrans405)
    argvalue0 := meta.NewChangePasswordReq()
    err409 := argvalue0.Read(jsProt408)
    if err409 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ChangePassword(value0))
    fmt.Print("\n")
    break
  case "heartBeat":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "HeartBeat requires 1 args")
      flag.Usage()
    }
    arg410 := flag.Arg(1)
    mbTrans411 := thrift.NewMemoryBufferLen(len(arg410))
    defer mbTrans411.Close()
    _, err412 := mbTrans411.WriteString(arg410)
    if err412 != nil {
      Usage()
      return
    }
    factory413 := thrift.NewSimpleJSONProtocolFactory()
    jsProt414 := factory413.GetProtocol(mbTrans411)
    argvalue0 := meta.NewHBReq()
    err415 := argvalue0.Read(jsProt414)
    if err415 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.HeartBeat(value0))
    fmt.Print("\n")
    break
  case "agentHeartbeat":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AgentHeartbeat requires 1 args")
      flag.Usage()
    }
    arg416 := flag.Arg(1)
    mbTrans417 := thrift.NewMemoryBufferLen(len(arg416))
    defer mbTrans417.Close()
    _, err418 := mbTrans417.WriteString(arg416)
    if err418 != nil {
      Usage()
      return
    }
    factory419 := thrift.NewSimpleJSONProtocolFactory()
    jsProt420 := factory419.GetProtocol(mbTrans417)
    argvalue0 := meta.NewAgentHBReq()
    err421 := argvalue0.Read(jsProt420)
    if err421 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AgentHeartbeat(value0))
    fmt.Print("\n")
    break
  case "regConfig":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RegConfig requires 1 args")
      flag.Usage()
    }
    arg422 := flag.Arg(1)
    mbTrans423 := thrift.NewMemoryBufferLen(len(arg422))
    defer mbTrans423.Close()
    _, err424 := mbTrans423.WriteString(arg422)
    if err424 != nil {
      Usage()
      return
    }
    factory425 := thrift.NewSimpleJSONProtocolFactory()
    jsProt426 := factory425.GetProtocol(mbTrans423)
    argvalue0 := meta.NewRegConfigReq()
    err427 := argvalue0.Read(jsProt426)
    if err427 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RegConfig(value0))
    fmt.Print("\n")
    break
  case "getConfig":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetConfig requires 1 args")
      flag.Usage()
    }
    arg428 := flag.Arg(1)
    mbTrans429 := thrift.NewMemoryBufferLen(len(arg428))
    defer mbTrans429.Close()
    _, err430 := mbTrans429.WriteString(arg428)
    if err430 != nil {
      Usage()
      return
    }
    factory431 := thrift.NewSimpleJSONProtocolFactory()
    jsProt432 := factory431.GetProtocol(mbTrans429)
    argvalue0 := meta.NewGetConfigReq()
    err433 := argvalue0.Read(jsProt432)
    if err433 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetConfig(value0))
    fmt.Print("\n")
    break
  case "setConfig":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "SetConfig requires 1 args")
      flag.Usage()
    }
    arg434 := flag.Arg(1)
    mbTrans435 := thrift.NewMemoryBufferLen(len(arg434))
    defer mbTrans435.Close()
    _, err436 := mbTrans435.WriteString(arg434)
    if err436 != nil {
      Usage()
      return
    }
    factory437 := thrift.NewSimpleJSONProtocolFactory()
    jsProt438 := factory437.GetProtocol(mbTrans435)
    argvalue0 := meta.NewSetConfigReq()
    err439 := argvalue0.Read(jsProt438)
    if err439 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.SetConfig(value0))
    fmt.Print("\n")
    break
  case "listConfigs":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListConfigs requires 1 args")
      flag.Usage()
    }
    arg440 := flag.Arg(1)
    mbTrans441 := thrift.NewMemoryBufferLen(len(arg440))
    defer mbTrans441.Close()
    _, err442 := mbTrans441.WriteString(arg440)
    if err442 != nil {
      Usage()
      return
    }
    factory443 := thrift.NewSimpleJSONProtocolFactory()
    jsProt444 := factory443.GetProtocol(mbTrans441)
    argvalue0 := meta.NewListConfigsReq()
    err445 := argvalue0.Read(jsProt444)
    if err445 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListConfigs(value0))
    fmt.Print("\n")
    break
  case "createSnapshot":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateSnapshot requires 1 args")
      flag.Usage()
    }
    arg446 := flag.Arg(1)
    mbTrans447 := thrift.NewMemoryBufferLen(len(arg446))
    defer mbTrans447.Close()
    _, err448 := mbTrans447.WriteString(arg446)
    if err448 != nil {
      Usage()
      return
    }
    factory449 := thrift.NewSimpleJSONProtocolFactory()
    jsProt450 := factory449.GetProtocol(mbTrans447)
    argvalue0 := meta.NewCreateSnapshotReq()
    err451 := argvalue0.Read(jsProt450)
    if err451 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateSnapshot(value0))
    fmt.Print("\n")
    break
  case "dropSnapshot":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropSnapshot requires 1 args")
      flag.Usage()
    }
    arg452 := flag.Arg(1)
    mbTrans453 := thrift.NewMemoryBufferLen(len(arg452))
    defer mbTrans453.Close()
    _, err454 := mbTrans453.WriteString(arg452)
    if err454 != nil {
      Usage()
      return
    }
    factory455 := thrift.NewSimpleJSONProtocolFactory()
    jsProt456 := factory455.GetProtocol(mbTrans453)
    argvalue0 := meta.NewDropSnapshotReq()
    err457 := argvalue0.Read(jsProt456)
    if err457 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropSnapshot(value0))
    fmt.Print("\n")
    break
  case "listSnapshots":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListSnapshots requires 1 args")
      flag.Usage()
    }
    arg458 := flag.Arg(1)
    mbTrans459 := thrift.NewMemoryBufferLen(len(arg458))
    defer mbTrans459.Close()
    _, err460 := mbTrans459.WriteString(arg458)
    if err460 != nil {
      Usage()
      return
    }
    factory461 := thrift.NewSimpleJSONProtocolFactory()
    jsProt462 := factory461.GetProtocol(mbTrans459)
    argvalue0 := meta.NewListSnapshotsReq()
    err463 := argvalue0.Read(jsProt462)
    if err463 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListSnapshots(value0))
    fmt.Print("\n")
    break
  case "runAdminJob":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RunAdminJob requires 1 args")
      flag.Usage()
    }
    arg464 := flag.Arg(1)
    mbTrans465 := thrift.NewMemoryBufferLen(len(arg464))
    defer mbTrans465.Close()
    _, err466 := mbTrans465.WriteString(arg464)
    if err466 != nil {
      Usage()
      return
    }
    factory467 := thrift.NewSimpleJSONProtocolFactory()
    jsProt468 := factory467.GetProtocol(mbTrans465)
    argvalue0 := meta.NewAdminJobReq()
    err469 := argvalue0.Read(jsProt468)
    if err469 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RunAdminJob(value0))
    fmt.Print("\n")
    break
  case "mergeZone":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "MergeZone requires 1 args")
      flag.Usage()
    }
    arg470 := flag.Arg(1)
    mbTrans471 := thrift.NewMemoryBufferLen(len(arg470))
    defer mbTrans471.Close()
    _, err472 := mbTrans471.WriteString(arg470)
    if err472 != nil {
      Usage()
      return
    }
    factory473 := thrift.NewSimpleJSONProtocolFactory()
    jsProt474 := factory473.GetProtocol(mbTrans471)
    argvalue0 := meta.NewMergeZoneReq()
    err475 := argvalue0.Read(jsProt474)
    if err475 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.MergeZone(value0))
    fmt.Print("\n")
    break
  case "dropZone":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropZone requires 1 args")
      flag.Usage()
    }
    arg476 := flag.Arg(1)
    mbTrans477 := thrift.NewMemoryBufferLen(len(arg476))
    defer mbTrans477.Close()
    _, err478 := mbTrans477.WriteString(arg476)
    if err478 != nil {
      Usage()
      return
    }
    factory479 := thrift.NewSimpleJSONProtocolFactory()
    jsProt480 := factory479.GetProtocol(mbTrans477)
    argvalue0 := meta.NewDropZoneReq()
    err481 := argvalue0.Read(jsProt480)
    if err481 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropZone(value0))
    fmt.Print("\n")
    break
  case "divideZone":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DivideZone requires 1 args")
      flag.Usage()
    }
    arg482 := flag.Arg(1)
    mbTrans483 := thrift.NewMemoryBufferLen(len(arg482))
    defer mbTrans483.Close()
    _, err484 := mbTrans483.WriteString(arg482)
    if err484 != nil {
      Usage()
      return
    }
    factory485 := thrift.NewSimpleJSONProtocolFactory()
    jsProt486 := factory485.GetProtocol(mbTrans483)
    argvalue0 := meta.NewDivideZoneReq()
    err487 := argvalue0.Read(jsProt486)
    if err487 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DivideZone(value0))
    fmt.Print("\n")
    break
  case "renameZone":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RenameZone requires 1 args")
      flag.Usage()
    }
    arg488 := flag.Arg(1)
    mbTrans489 := thrift.NewMemoryBufferLen(len(arg488))
    defer mbTrans489.Close()
    _, err490 := mbTrans489.WriteString(arg488)
    if err490 != nil {
      Usage()
      return
    }
    factory491 := thrift.NewSimpleJSONProtocolFactory()
    jsProt492 := factory491.GetProtocol(mbTrans489)
    argvalue0 := meta.NewRenameZoneReq()
    err493 := argvalue0.Read(jsProt492)
    if err493 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RenameZone(value0))
    fmt.Print("\n")
    break
  case "getZone":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetZone requires 1 args")
      flag.Usage()
    }
    arg494 := flag.Arg(1)
    mbTrans495 := thrift.NewMemoryBufferLen(len(arg494))
    defer mbTrans495.Close()
    _, err496 := mbTrans495.WriteString(arg494)
    if err496 != nil {
      Usage()
      return
    }
    factory497 := thrift.NewSimpleJSONProtocolFactory()
    jsProt498 := factory497.GetProtocol(mbTrans495)
    argvalue0 := meta.NewGetZoneReq()
    err499 := argvalue0.Read(jsProt498)
    if err499 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetZone(value0))
    fmt.Print("\n")
    break
  case "listZones":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListZones requires 1 args")
      flag.Usage()
    }
    arg500 := flag.Arg(1)
    mbTrans501 := thrift.NewMemoryBufferLen(len(arg500))
    defer mbTrans501.Close()
    _, err502 := mbTrans501.WriteString(arg500)
    if err502 != nil {
      Usage()
      return
    }
    factory503 := thrift.NewSimpleJSONProtocolFactory()
    jsProt504 := factory503.GetProtocol(mbTrans501)
    argvalue0 := meta.NewListZonesReq()
    err505 := argvalue0.Read(jsProt504)
    if err505 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListZones(value0))
    fmt.Print("\n")
    break
  case "addListener":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "AddListener requires 1 args")
      flag.Usage()
    }
    arg506 := flag.Arg(1)
    mbTrans507 := thrift.NewMemoryBufferLen(len(arg506))
    defer mbTrans507.Close()
    _, err508 := mbTrans507.WriteString(arg506)
    if err508 != nil {
      Usage()
      return
    }
    factory509 := thrift.NewSimpleJSONProtocolFactory()
    jsProt510 := factory509.GetProtocol(mbTrans507)
    argvalue0 := meta.NewAddListenerReq()
    err511 := argvalue0.Read(jsProt510)
    if err511 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.AddListener(value0))
    fmt.Print("\n")
    break
  case "removeListener":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RemoveListener requires 1 args")
      flag.Usage()
    }
    arg512 := flag.Arg(1)
    mbTrans513 := thrift.NewMemoryBufferLen(len(arg512))
    defer mbTrans513.Close()
    _, err514 := mbTrans513.WriteString(arg512)
    if err514 != nil {
      Usage()
      return
    }
    factory515 := thrift.NewSimpleJSONProtocolFactory()
    jsProt516 := factory515.GetProtocol(mbTrans513)
    argvalue0 := meta.NewRemoveListenerReq()
    err517 := argvalue0.Read(jsProt516)
    if err517 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RemoveListener(value0))
    fmt.Print("\n")
    break
  case "listListener":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListListener requires 1 args")
      flag.Usage()
    }
    arg518 := flag.Arg(1)
    mbTrans519 := thrift.NewMemoryBufferLen(len(arg518))
    defer mbTrans519.Close()
    _, err520 := mbTrans519.WriteString(arg518)
    if err520 != nil {
      Usage()
      return
    }
    factory521 := thrift.NewSimpleJSONProtocolFactory()
    jsProt522 := factory521.GetProtocol(mbTrans519)
    argvalue0 := meta.NewListListenerReq()
    err523 := argvalue0.Read(jsProt522)
    if err523 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListListener(value0))
    fmt.Print("\n")
    break
  case "getStats":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetStats requires 1 args")
      flag.Usage()
    }
    arg524 := flag.Arg(1)
    mbTrans525 := thrift.NewMemoryBufferLen(len(arg524))
    defer mbTrans525.Close()
    _, err526 := mbTrans525.WriteString(arg524)
    if err526 != nil {
      Usage()
      return
    }
    factory527 := thrift.NewSimpleJSONProtocolFactory()
    jsProt528 := factory527.GetProtocol(mbTrans525)
    argvalue0 := meta.NewGetStatsReq()
    err529 := argvalue0.Read(jsProt528)
    if err529 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetStats(value0))
    fmt.Print("\n")
    break
  case "signInService":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "SignInService requires 1 args")
      flag.Usage()
    }
    arg530 := flag.Arg(1)
    mbTrans531 := thrift.NewMemoryBufferLen(len(arg530))
    defer mbTrans531.Close()
    _, err532 := mbTrans531.WriteString(arg530)
    if err532 != nil {
      Usage()
      return
    }
    factory533 := thrift.NewSimpleJSONProtocolFactory()
    jsProt534 := factory533.GetProtocol(mbTrans531)
    argvalue0 := meta.NewSignInServiceReq()
    err535 := argvalue0.Read(jsProt534)
    if err535 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.SignInService(value0))
    fmt.Print("\n")
    break
  case "signOutService":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "SignOutService requires 1 args")
      flag.Usage()
    }
    arg536 := flag.Arg(1)
    mbTrans537 := thrift.NewMemoryBufferLen(len(arg536))
    defer mbTrans537.Close()
    _, err538 := mbTrans537.WriteString(arg536)
    if err538 != nil {
      Usage()
      return
    }
    factory539 := thrift.NewSimpleJSONProtocolFactory()
    jsProt540 := factory539.GetProtocol(mbTrans537)
    argvalue0 := meta.NewSignOutServiceReq()
    err541 := argvalue0.Read(jsProt540)
    if err541 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.SignOutService(value0))
    fmt.Print("\n")
    break
  case "listServiceClients":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListServiceClients requires 1 args")
      flag.Usage()
    }
    arg542 := flag.Arg(1)
    mbTrans543 := thrift.NewMemoryBufferLen(len(arg542))
    defer mbTrans543.Close()
    _, err544 := mbTrans543.WriteString(arg542)
    if err544 != nil {
      Usage()
      return
    }
    factory545 := thrift.NewSimpleJSONProtocolFactory()
    jsProt546 := factory545.GetProtocol(mbTrans543)
    argvalue0 := meta.NewListServiceClientsReq()
    err547 := argvalue0.Read(jsProt546)
    if err547 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListServiceClients(value0))
    fmt.Print("\n")
    break
  case "createFTIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateFTIndex requires 1 args")
      flag.Usage()
    }
    arg548 := flag.Arg(1)
    mbTrans549 := thrift.NewMemoryBufferLen(len(arg548))
    defer mbTrans549.Close()
    _, err550 := mbTrans549.WriteString(arg548)
    if err550 != nil {
      Usage()
      return
    }
    factory551 := thrift.NewSimpleJSONProtocolFactory()
    jsProt552 := factory551.GetProtocol(mbTrans549)
    argvalue0 := meta.NewCreateFTIndexReq()
    err553 := argvalue0.Read(jsProt552)
    if err553 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateFTIndex(value0))
    fmt.Print("\n")
    break
  case "dropFTIndex":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "DropFTIndex requires 1 args")
      flag.Usage()
    }
    arg554 := flag.Arg(1)
    mbTrans555 := thrift.NewMemoryBufferLen(len(arg554))
    defer mbTrans555.Close()
    _, err556 := mbTrans555.WriteString(arg554)
    if err556 != nil {
      Usage()
      return
    }
    factory557 := thrift.NewSimpleJSONProtocolFactory()
    jsProt558 := factory557.GetProtocol(mbTrans555)
    argvalue0 := meta.NewDropFTIndexReq()
    err559 := argvalue0.Read(jsProt558)
    if err559 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.DropFTIndex(value0))
    fmt.Print("\n")
    break
  case "listFTIndexes":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListFTIndexes requires 1 args")
      flag.Usage()
    }
    arg560 := flag.Arg(1)
    mbTrans561 := thrift.NewMemoryBufferLen(len(arg560))
    defer mbTrans561.Close()
    _, err562 := mbTrans561.WriteString(arg560)
    if err562 != nil {
      Usage()
      return
    }
    factory563 := thrift.NewSimpleJSONProtocolFactory()
    jsProt564 := factory563.GetProtocol(mbTrans561)
    argvalue0 := meta.NewListFTIndexesReq()
    err565 := argvalue0.Read(jsProt564)
    if err565 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListFTIndexes(value0))
    fmt.Print("\n")
    break
  case "createSession":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateSession requires 1 args")
      flag.Usage()
    }
    arg566 := flag.Arg(1)
    mbTrans567 := thrift.NewMemoryBufferLen(len(arg566))
    defer mbTrans567.Close()
    _, err568 := mbTrans567.WriteString(arg566)
    if err568 != nil {
      Usage()
      return
    }
    factory569 := thrift.NewSimpleJSONProtocolFactory()
    jsProt570 := factory569.GetProtocol(mbTrans567)
    argvalue0 := meta.NewCreateSessionReq()
    err571 := argvalue0.Read(jsProt570)
    if err571 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateSession(value0))
    fmt.Print("\n")
    break
  case "updateSessions":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "UpdateSessions requires 1 args")
      flag.Usage()
    }
    arg572 := flag.Arg(1)
    mbTrans573 := thrift.NewMemoryBufferLen(len(arg572))
    defer mbTrans573.Close()
    _, err574 := mbTrans573.WriteString(arg572)
    if err574 != nil {
      Usage()
      return
    }
    factory575 := thrift.NewSimpleJSONProtocolFactory()
    jsProt576 := factory575.GetProtocol(mbTrans573)
    argvalue0 := meta.NewUpdateSessionsReq()
    err577 := argvalue0.Read(jsProt576)
    if err577 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.UpdateSessions(value0))
    fmt.Print("\n")
    break
  case "listSessions":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListSessions requires 1 args")
      flag.Usage()
    }
    arg578 := flag.Arg(1)
    mbTrans579 := thrift.NewMemoryBufferLen(len(arg578))
    defer mbTrans579.Close()
    _, err580 := mbTrans579.WriteString(arg578)
    if err580 != nil {
      Usage()
      return
    }
    factory581 := thrift.NewSimpleJSONProtocolFactory()
    jsProt582 := factory581.GetProtocol(mbTrans579)
    argvalue0 := meta.NewListSessionsReq()
    err583 := argvalue0.Read(jsProt582)
    if err583 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListSessions(value0))
    fmt.Print("\n")
    break
  case "getSession":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetSession requires 1 args")
      flag.Usage()
    }
    arg584 := flag.Arg(1)
    mbTrans585 := thrift.NewMemoryBufferLen(len(arg584))
    defer mbTrans585.Close()
    _, err586 := mbTrans585.WriteString(arg584)
    if err586 != nil {
      Usage()
      return
    }
    factory587 := thrift.NewSimpleJSONProtocolFactory()
    jsProt588 := factory587.GetProtocol(mbTrans585)
    argvalue0 := meta.NewGetSessionReq()
    err589 := argvalue0.Read(jsProt588)
    if err589 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetSession(value0))
    fmt.Print("\n")
    break
  case "removeSession":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RemoveSession requires 1 args")
      flag.Usage()
    }
    arg590 := flag.Arg(1)
    mbTrans591 := thrift.NewMemoryBufferLen(len(arg590))
    defer mbTrans591.Close()
    _, err592 := mbTrans591.WriteString(arg590)
    if err592 != nil {
      Usage()
      return
    }
    factory593 := thrift.NewSimpleJSONProtocolFactory()
    jsProt594 := factory593.GetProtocol(mbTrans591)
    argvalue0 := meta.NewRemoveSessionReq()
    err595 := argvalue0.Read(jsProt594)
    if err595 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RemoveSession(value0))
    fmt.Print("\n")
    break
  case "killQuery":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "KillQuery requires 1 args")
      flag.Usage()
    }
    arg596 := flag.Arg(1)
    mbTrans597 := thrift.NewMemoryBufferLen(len(arg596))
    defer mbTrans597.Close()
    _, err598 := mbTrans597.WriteString(arg596)
    if err598 != nil {
      Usage()
      return
    }
    factory599 := thrift.NewSimpleJSONProtocolFactory()
    jsProt600 := factory599.GetProtocol(mbTrans597)
    argvalue0 := meta.NewKillQueryReq()
    err601 := argvalue0.Read(jsProt600)
    if err601 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.KillQuery(value0))
    fmt.Print("\n")
    break
  case "reportTaskFinish":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ReportTaskFinish requires 1 args")
      flag.Usage()
    }
    arg602 := flag.Arg(1)
    mbTrans603 := thrift.NewMemoryBufferLen(len(arg602))
    defer mbTrans603.Close()
    _, err604 := mbTrans603.WriteString(arg602)
    if err604 != nil {
      Usage()
      return
    }
    factory605 := thrift.NewSimpleJSONProtocolFactory()
    jsProt606 := factory605.GetProtocol(mbTrans603)
    argvalue0 := meta.NewReportTaskReq()
    err607 := argvalue0.Read(jsProt606)
    if err607 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ReportTaskFinish(value0))
    fmt.Print("\n")
    break
  case "createBackup":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "CreateBackup requires 1 args")
      flag.Usage()
    }
    arg608 := flag.Arg(1)
    mbTrans609 := thrift.NewMemoryBufferLen(len(arg608))
    defer mbTrans609.Close()
    _, err610 := mbTrans609.WriteString(arg608)
    if err610 != nil {
      Usage()
      return
    }
    factory611 := thrift.NewSimpleJSONProtocolFactory()
    jsProt612 := factory611.GetProtocol(mbTrans609)
    argvalue0 := meta.NewCreateBackupReq()
    err613 := argvalue0.Read(jsProt612)
    if err613 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.CreateBackup(value0))
    fmt.Print("\n")
    break
  case "restoreMeta":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "RestoreMeta requires 1 args")
      flag.Usage()
    }
    arg614 := flag.Arg(1)
    mbTrans615 := thrift.NewMemoryBufferLen(len(arg614))
    defer mbTrans615.Close()
    _, err616 := mbTrans615.WriteString(arg614)
    if err616 != nil {
      Usage()
      return
    }
    factory617 := thrift.NewSimpleJSONProtocolFactory()
    jsProt618 := factory617.GetProtocol(mbTrans615)
    argvalue0 := meta.NewRestoreMetaReq()
    err619 := argvalue0.Read(jsProt618)
    if err619 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.RestoreMeta(value0))
    fmt.Print("\n")
    break
  case "listCluster":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "ListCluster requires 1 args")
      flag.Usage()
    }
    arg620 := flag.Arg(1)
    mbTrans621 := thrift.NewMemoryBufferLen(len(arg620))
    defer mbTrans621.Close()
    _, err622 := mbTrans621.WriteString(arg620)
    if err622 != nil {
      Usage()
      return
    }
    factory623 := thrift.NewSimpleJSONProtocolFactory()
    jsProt624 := factory623.GetProtocol(mbTrans621)
    argvalue0 := meta.NewListClusterInfoReq()
    err625 := argvalue0.Read(jsProt624)
    if err625 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.ListCluster(value0))
    fmt.Print("\n")
    break
  case "getMetaDirInfo":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "GetMetaDirInfo requires 1 args")
      flag.Usage()
    }
    arg626 := flag.Arg(1)
    mbTrans627 := thrift.NewMemoryBufferLen(len(arg626))
    defer mbTrans627.Close()
    _, err628 := mbTrans627.WriteString(arg626)
    if err628 != nil {
      Usage()
      return
    }
    factory629 := thrift.NewSimpleJSONProtocolFactory()
    jsProt630 := factory629.GetProtocol(mbTrans627)
    argvalue0 := meta.NewGetMetaDirInfoReq()
    err631 := argvalue0.Read(jsProt630)
    if err631 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.GetMetaDirInfo(value0))
    fmt.Print("\n")
    break
  case "verifyClientVersion":
    if flag.NArg() - 1 != 1 {
      fmt.Fprintln(os.Stderr, "VerifyClientVersion requires 1 args")
      flag.Usage()
    }
    arg632 := flag.Arg(1)
    mbTrans633 := thrift.NewMemoryBufferLen(len(arg632))
    defer mbTrans633.Close()
    _, err634 := mbTrans633.WriteString(arg632)
    if err634 != nil {
      Usage()
      return
    }
    factory635 := thrift.NewSimpleJSONProtocolFactory()
    jsProt636 := factory635.GetProtocol(mbTrans633)
    argvalue0 := meta.NewVerifyClientVersionReq()
    err637 := argvalue0.Read(jsProt636)
    if err637 != nil {
      Usage()
      return
    }
    value0 := argvalue0
    fmt.Print(client.VerifyClientVersion(value0))
    fmt.Print("\n")
    break
  case "":
    Usage()
    break
  default:
    fmt.Fprintln(os.Stderr, "Invalid function ", cmd)
  }
}
